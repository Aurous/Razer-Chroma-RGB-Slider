<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Corale.Colore</name>
    </assembly>
    <members>
        <member name="T:Corale.Colore.ColoreException">
            <summary>
            Generic Colore library exception.
            </summary>
        </member>
        <member name="M:Corale.Colore.ColoreException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Corale.Colore.ColoreException" /> class.
            </summary>
            <param name="message">Exception message.</param>
            <param name="innerException">Inner exception object.</param>
        </member>
        <member name="M:Corale.Colore.ColoreException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Corale.Colore.ColoreException" /> class
            from serialization data.
            </summary>
            <param name="info">Serialization info object.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="T:Corale.Colore.Core.Chroma">
            <summary>
            Main class for interacting with the Chroma SDK.
            </summary>
        </member>
        <member name="F:Corale.Colore.Core.Chroma.Log">
            <summary>
            Logger instance for this class.
            </summary>
        </member>
        <member name="F:Corale.Colore.Core.Chroma._instance">
            <summary>
            Holds the application-wide instance of the <see cref="T:Corale.Colore.Core.IChroma" /> interface.
            </summary>
        </member>
        <member name="F:Corale.Colore.Core.Chroma._registered">
            <summary>
            Keeps track of whether we have registered to receive Chroma events.
            </summary>
        </member>
        <member name="F:Corale.Colore.Core.Chroma._registeredHandle">
            <summary>
            Keeps track of the window handle that is registered to receive events.
            </summary>
        </member>
        <member name="M:Corale.Colore.Core.Chroma.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Corale.Colore.Core.Chroma" /> class from being created.
            </summary>
        </member>
        <member name="M:Corale.Colore.Core.Chroma.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:Corale.Colore.Core.Chroma" /> class.
            </summary>
            <remarks>
            Calls the SDK <c>UnInit</c> function.
            </remarks>
        </member>
        <member name="E:Corale.Colore.Core.Chroma.ApplicationState">
            <summary>
            Raised when information about application state is received from messages.
            </summary>
            <remarks>
            Requires that application has registered for receiving messages with
            <see cref="M:Corale.Colore.Core.IChroma.Register(System.IntPtr)" /> and that Windows messages are being forwarded to
            Colore using <see cref="M:Corale.Colore.Core.IChroma.HandleMessage(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)" />.
            </remarks>
        </member>
        <member name="E:Corale.Colore.Core.Chroma.DeviceAccess">
            <summary>
            Raised when information about device access is received from messages.
            </summary>
            <remarks>
            Requires that application has registered for receiving messages with
            <see cref="M:Corale.Colore.Core.IChroma.Register(System.IntPtr)" /> and that Windows messages are being forwarded to
            Colore using <see cref="M:Corale.Colore.Core.IChroma.HandleMessage(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)" />.
            </remarks>
        </member>
        <member name="E:Corale.Colore.Core.Chroma.SdkSupport">
            <summary>
            Raised when information about SDK support is received from messages.
            </summary>
            <remarks>
            Requires that application has registered for receiving messages with
            <see cref="M:Corale.Colore.Core.IChroma.Register(System.IntPtr)" /> and that Windows messages are being forwarded to
            Colore using <see cref="M:Corale.Colore.Core.IChroma.HandleMessage(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)" />.
            </remarks>
        </member>
        <member name="P:Corale.Colore.Core.Chroma.Instance">
            <summary>
            Gets the application-wide instance of the <see cref="T:Corale.Colore.Core.IChroma" /> interface.
            </summary>
        </member>
        <member name="P:Corale.Colore.Core.Chroma.Keyboard">
            <summary>
            Gets an instance of the <see cref="T:Corale.Colore.Core.IKeyboard" /> interface
            for interacting with a Razer Chroma keyboard.
            </summary>
        </member>
        <member name="P:Corale.Colore.Core.Chroma.Mouse">
            <summary>
            Gets an instance of the <see cref="T:Corale.Colore.Core.IMouse" /> interface
            for interacting with a Razer Chroma mouse.
            </summary>
        </member>
        <member name="P:Corale.Colore.Core.Chroma.Headset">
            <summary>
            Gets an instance of the <see cref="T:Corale.Colore.Core.IHeadset" /> interface
            for interacting with a Razer Chroma headset.
            </summary>
        </member>
        <member name="P:Corale.Colore.Core.Chroma.Mousepad">
            <summary>
            Gets an instance of the <see cref="T:Corale.Colore.Core.IMousepad" /> interface
            for interacting with a Razer Chroma mouse pad.
            </summary>
        </member>
        <member name="P:Corale.Colore.Core.Chroma.Keypad">
            <summary>
            Gets an instance of the <see cref="T:Corale.Colore.Core.IKeypad" /> interface
            for interacting with a Razer Chroma keypad.
            </summary>
        </member>
        <member name="P:Corale.Colore.Core.Chroma.Initialized">
            <summary>
            Gets a value indicating whether the Chroma main class has been initialized or not.
            </summary>
        </member>
        <member name="M:Corale.Colore.Core.Chroma.IsSdkAvailable">
            <summary>
            Checks if the Chroma SDK is available on this system.
            </summary>
            <returns><c>true</c> if Chroma SDK is available, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Corale.Colore.Core.Chroma.Query(System.Guid)">
            <summary>
            Queries the SDK for information regarding a specific device.
            </summary>
            <param name="deviceId">The device ID to query for, valid IDs can be found in <see cref="T:Corale.Colore.Razer.Devices" />.</param>
            <returns>A struct with information regarding the device type and whether it's connected.</returns>
        </member>
        <member name="M:Corale.Colore.Core.Chroma.Get(System.Guid)">
            <summary>
            Gets an instance of <see cref="T:Corale.Colore.Core.IGenericDevice" /> for
            the device with the specified ID.
            </summary>
            <param name="deviceId">
            The <see cref="T:System.Guid" /> of the device to get,
            valid IDs can be found in <see cref="T:Corale.Colore.Razer.Devices" />.
            </param>
            <returns>An instance of <see cref="T:Corale.Colore.Core.IGenericDevice" />.</returns>
        </member>
        <member name="M:Corale.Colore.Core.Chroma.HandleMessage(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
            <summary>
            Handles a Windows message and fires the appropriate events.
            </summary>
            <param name="handle">The <c>HWnd</c> property of the Message struct.</param>
            <param name="msgId">The <c>Msg</c> property of the Message struct.</param>
            <param name="wParam">The <c>wParam</c> property of the Message struct.</param>
            <param name="lParam">The <c>lParam</c> property of the Message struct.</param>
            <returns><c>true</c> if the message was handled by Chroma, <c>false</c> otherwise (message was ignored).</returns>
            <remarks>Non-Chroma messages will be ignored.</remarks>
        </member>
        <member name="M:Corale.Colore.Core.Chroma.Register(System.IntPtr)">
            <summary>
            Registers to start receiving Chroma events.
            </summary>
            <param name="handle">Handle to the application Window that is running the message loop.</param>
            <remarks>
            Chroma events are sent using the Windows message API, as such, there has to be something handling
            Windows messages to receive them. Messages need to be passed to the message handler in Colore to
            be processed, as this cannot be automated.
            </remarks>
        </member>
        <member name="M:Corale.Colore.Core.Chroma.Unregister">
            <summary>
            Unregisters from receiving Chroma events.
            </summary>
        </member>
        <member name="M:Corale.Colore.Core.Chroma.SetAll(Corale.Colore.Core.Color)">
            <summary>
            Sets all Chroma devices to the specified <see cref="T:Corale.Colore.Core.Color" />.
            </summary>
            <param name="color">The <see cref="T:Corale.Colore.Core.Color" /> to set.</param>
        </member>
        <member name="M:Corale.Colore.Core.Chroma.Initialize">
            <summary>
            Explicitly creates and initializes the <see cref="F:Corale.Colore.Core.Chroma._instance" /> field
            with a new instance of the <see cref="T:Corale.Colore.Core.Chroma" /> class.
            </summary>
            <remarks>
            For internal use by singleton accessors in device interface implementations.
            </remarks>
        </member>
        <member name="M:Corale.Colore.Core.Chroma.OnApplicationState(System.Boolean)">
            <summary>
            Invokes the application state event handlers with the specified parameter.
            </summary>
            <param name="enabled">Whether or not the application was put in an enabled state.</param>
        </member>
        <member name="M:Corale.Colore.Core.Chroma.OnDeviceAccess(System.Boolean)">
            <summary>
            Invokes the device access event handlers with the specified parameter.
            </summary>
            <param name="granted">Whether or not access to the device was granted.</param>
        </member>
        <member name="M:Corale.Colore.Core.Chroma.OnSdkSupport(System.Boolean)">
            <summary>
            Invokes the SDK support event handlers with the specified parameter.
            </summary>
            <param name="enabled">Whether or not the SDK is supported.</param>
        </member>
        <member name="T:Corale.Colore.Core.Color">
            <summary>
            Represents an RGB color.
            </summary>
        </member>
        <member name="F:Corale.Colore.Core.Color.Black">
            <summary>
            Black color.
            </summary>
        </member>
        <member name="F:Corale.Colore.Core.Color.Blue">
            <summary>
            (Dark) blue color.
            </summary>
        </member>
        <member name="F:Corale.Colore.Core.Color.Green">
            <summary>
            (Neon/bright) green color.
            </summary>
        </member>
        <member name="F:Corale.Colore.Core.Color.HotPink">
            <summary>
            Hot pink color.
            </summary>
        </member>
        <member name="F:Corale.Colore.Core.Color.Orange">
            <summary>
            Orange color.
            </summary>
        </member>
        <member name="F:Corale.Colore.Core.Color.Pink">
            <summary>
            Pink color.
            </summary>
        </member>
        <member name="F:Corale.Colore.Core.Color.Purple">
            <summary>
            Purple color.
            </summary>
        </member>
        <member name="F:Corale.Colore.Core.Color.Red">
            <summary>
            Red color.
            </summary>
        </member>
        <member name="F:Corale.Colore.Core.Color.White">
            <summary>
            White color.
            </summary>
        </member>
        <member name="F:Corale.Colore.Core.Color.Yellow">
            <summary>
            Yellow color.
            </summary>
        </member>
        <member name="F:Corale.Colore.Core.Color._value">
            <summary>
            Internal color value.
            </summary>
            <remarks>
            Format: <c>0xAABBGGRR</c>.
            </remarks>
        </member>
        <member name="M:Corale.Colore.Core.Color.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Corale.Colore.Core.Color" /> struct using an integer
            color value in the format <c>0xAABBGGRR</c>.
            </summary>
            <param name="value">Value to create the color from.</param>
        </member>
        <member name="M:Corale.Colore.Core.Color.#ctor(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Initializes a new instance of the <see cref="T:Corale.Colore.Core.Color" /> struct using three
            distinct R, G, B, and A (optional) byte values. An alpha value of <c>0</c>
            is treated as fully opaque.
            </summary>
            <param name="red">The red component.</param>
            <param name="green">The green component.</param>
            <param name="blue">The blue component.</param>
            <param name="alpha">The alpha component (<c>0</c> = fully opaque).</param>
        </member>
        <member name="M:Corale.Colore.Core.Color.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Corale.Colore.Core.Color" /> struct using
            three <see cref="T:System.Single" /> (<c>float</c>) values for the
            R, G, B, and A (optional) channels.
            </summary>
            <param name="red">The red component (<c>0.0f</c> to <c>1.0f</c>, inclusive).</param>
            <param name="green">The green component (<c>0.0f</c> to <c>1.0f</c>, inclusive).</param>
            <param name="blue">The blue component (<c>0.0f</c> to <c>1.0f</c>, inclusive).</param>
            <param name="alpha">The alpha component (<c>0.0f</c> to <c>1.0f</c>, inclusive, <c>0.0f</c> = fully opaque).</param>
            <remarks>
            Each parameter value must be between <c>0.0f</c> and <c>1.0f</c> (inclusive).
            </remarks>
        </member>
        <member name="M:Corale.Colore.Core.Color.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Corale.Colore.Core.Color" /> struct using
            three <see cref="T:System.Double" /> values for the R, G, B, and A (optional) channels.
            </summary>
            <param name="red">The red component (<c>0.0</c> to <c>1.0</c>, inclusive).</param>
            <param name="green">The green component (<c>0.0</c> to <c>1.0</c>, inclusive).</param>
            <param name="blue">The blue component (<c>0.0</c> to <c>1.0</c>, inclusive).</param>
            <param name="alpha">The alpha component (<c>0.0</c> to <c>1.0</c>, inclusive, <c>0.0</c> = fully opaque).</param>
            <remarks>
            Each parameter value must be between <c>0.0</c> and <c>1.0</c> (inclusive).
            </remarks>
        </member>
        <member name="M:Corale.Colore.Core.Color.#ctor(System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Corale.Colore.Core.Color" /> struct using
            a <see cref="T:System.Drawing.Color" /> struct as the source.
            </summary>
            <param name="source">An instance of the <see cref="T:System.Drawing.Color" /> struct.</param>
        </member>
        <member name="P:Corale.Colore.Core.Color.A">
            <summary>
            Gets the alpha component of the color as a byte.
            </summary>
        </member>
        <member name="P:Corale.Colore.Core.Color.B">
            <summary>
            Gets the blue component of the color as a byte.
            </summary>
        </member>
        <member name="P:Corale.Colore.Core.Color.G">
            <summary>
            Gets the green component of the color as a byte.
            </summary>
        </member>
        <member name="P:Corale.Colore.Core.Color.R">
            <summary>
            Gets the red component of the color as a byte.
            </summary>
        </member>
        <member name="P:Corale.Colore.Core.Color.Value">
            <summary>
            Gets the unsigned integer representing
            the color. On the form <c>0x00BBGGRR</c>.
            </summary>
        </member>
        <member name="M:Corale.Colore.Core.Color.op_Implicit(Corale.Colore.Core.Color)~System.UInt32">
            <summary>
            Converts a <see cref="T:Corale.Colore.Core.Color" /> struct to a <see cref="T:System.UInt32" />.
            </summary>
            <param name="color">The <see cref="T:Corale.Colore.Core.Color" /> to convert.</param>
            <returns>A <see cref="T:System.UInt32" /> representing the value of the <paramref name="color" /> argument.</returns>
            <remarks>The returned <see cref="T:System.UInt32" /> has a format of <c>0x00BBGGRR</c>.</remarks>
        </member>
        <member name="M:Corale.Colore.Core.Color.op_Implicit(System.UInt32)~Corale.Colore.Core.Color">
            <summary>
            Converts <paramref name="value" /> to an instance of the <see cref="T:Corale.Colore.Core.Color" /> struct.
            </summary>
            <param name="value">The <see cref="T:System.UInt32" /> to convert, on the form <c>0x00BBGGRR</c>.</param>
            <returns>An instance of <see cref="T:Corale.Colore.Core.Color" /> representing the color value of <paramref name="value" />.</returns>
        </member>
        <member name="M:Corale.Colore.Core.Color.op_Explicit(Corale.Colore.Core.Color)~System.Drawing.Color">
            <summary>
            Converts a <see cref="T:Corale.Colore.Core.Color" /> struct to a <see cref="T:System.Drawing.Color" /> struct.
            </summary>
            <param name="color">The <see cref="T:Corale.Colore.Core.Color" /> to convert.</param>
            <returns>
            An instance of <see cref="T:System.Drawing.Color" /> representing the
            value of the <paramref name="color" /> argument.
            </returns>
            <remarks>
            This is an explicit cast since casting a <see cref="T:System.Drawing.Color" /> struct to <see cref="T:Corale.Colore.Core.Color" />
            is explicit.
            </remarks>
        </member>
        <member name="M:Corale.Colore.Core.Color.op_Explicit(System.Drawing.Color)~Corale.Colore.Core.Color">
            <summary>
            Converts a <see cref="T:System.Drawing.Color" /> struct to a <see cref="T:Corale.Colore.Core.Color" /> struct.
            </summary>
            <param name="color">The <see cref="T:System.Drawing.Color" /> to convert.</param>
            <returns>
            An instance of <see cref="T:Corale.Colore.Core.Color" /> representing the value of the <paramref name="color" /> argument.
            </returns>
            <remarks>
            This is an explicit cast since the alpha component of the <see cref="T:System.Drawing.Color" />
            struct is discarded.
            </remarks>
        </member>
        <member name="M:Corale.Colore.Core.Color.op_Equality(Corale.Colore.Core.Color,System.Object)">
            <summary>
            Checks <paramref name="left" /> and <paramref name="right" /> for equality.
            </summary>
            <param name="left">Left operand, an instance of the <see cref="T:Corale.Colore.Core.Color" /> struct.</param>
            <param name="right">Right operand, an <see cref="T:System.Object" />.</param>
            <returns><c>true</c> if the two instances are equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Corale.Colore.Core.Color.op_Inequality(Corale.Colore.Core.Color,System.Object)">
            <summary>
            Checks <paramref name="left" /> and <paramref name="right" /> for inequality.
            </summary>
            <param name="left">Left operand, an instance of the <see cref="T:Corale.Colore.Core.Color" /> struct.</param>
            <param name="right">Right operand, an <see cref="T:System.Object" />.</param>
            <returns><c>true</c> if the two instances are not equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Corale.Colore.Core.Color.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance of <see cref="T:Corale.Colore.Core.Color" />
            is equal to an <see cref="T:System.Object" /> <paramref name="other" />.
            </summary>
            <param name="other">The <see cref="T:System.Object" /> to check equality against.</param>
            <returns><c>true</c> if the two are equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Corale.Colore.Core.Color.Equals(Corale.Colore.Core.Color)">
            <summary>
            Returns a value indicating whether this instance of <see cref="T:Corale.Colore.Core.Color" />
            is equal to a <see cref="T:Corale.Colore.Core.Color" /> <paramref name="other" />.
            </summary>
            <param name="other">The <see cref="T:Corale.Colore.Core.Color" /> to check equality against.</param>
            <returns><c>true</c> of the two are equal, false otherwise.</returns>
        </member>
        <member name="M:Corale.Colore.Core.Color.Equals(System.UInt32)">
            <summary>
            Returns a value indicating whether this instance of <see cref="T:Corale.Colore.Core.Color" />
            is equal to a <see cref="T:System.UInt32" /> <paramref name="other" />.
            </summary>
            <param name="other">The <see cref="T:System.UInt32" /> to check equality against.</param>
            <returns><c>true</c> if the two are equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Corale.Colore.Core.Color.Equals(System.Drawing.Color)">
            <summary>
            Indicates whether the current object is equal to an instance of a
            <see cref="T:System.Drawing.Color" /> struct.
            </summary>
            <returns>
            <c>true</c> if the current object is equal to the <paramref name="other"/> parameter; otherwise, <c>false</c>.
            </returns>
            <param name="other">An instance of <see cref="T:System.Drawing.Color" /> to compare with this object.</param>
        </member>
        <member name="M:Corale.Colore.Core.Color.GetHashCode">
            <summary>
            Gets the unique hash code for this <see cref="T:Corale.Colore.Core.Color" />.
            </summary>
            <returns>A unique has code.</returns>
        </member>
        <member name="T:Corale.Colore.Core.Device">
            <summary>
            Base class for devices, containing code common between all devices.
            </summary>
            <summary>
            Base class for devices, containing code common between all devices.
            </summary>
        </member>
        <member name="P:Corale.Colore.Core.Device.CurrentEffectId">
            <summary>
            Gets or sets the ID of the currently active effect.
            </summary>
        </member>
        <member name="M:Corale.Colore.Core.Device.Clear">
            <summary>
            Clears the current effect on the device.
            </summary>
        </member>
        <member name="M:Corale.Colore.Core.Device.SetAll(Corale.Colore.Core.Color)">
            <summary>
            Sets the color of all components on this device.
            </summary>
            <param name="color">Color to set.</param>
        </member>
        <member name="M:Corale.Colore.Core.Device.SetGuid(System.Guid)">
            <summary>
            Updates the device to use the effect pointed to by the specified GUID.
            </summary>
            <param name="guid">GUID to set.</param>
        </member>
        <member name="M:Corale.Colore.Core.Device.Set(Corale.Colore.Core.Color)">
            <summary>
            Sets the color of all components on this device.
            </summary>
            <param name="color">Color to set.</param>
        </member>
        <member name="M:Corale.Colore.Core.Device.Set(System.Guid)">
            <summary>
            Updates the device to use the effect pointed to by the specified GUID.
            </summary>
            <param name="guid">GUID to set.</param>
        </member>
        <member name="T:Corale.Colore.Core.GenericDevice">
            <summary>
            A generic device.
            </summary>
            <summary>
            A generic device.
            </summary>
        </member>
        <member name="M:Corale.Colore.Core.GenericDevice.Set(Corale.Colore.Razer.Effect)">
            <summary>
            Sets a parameter-less effect on this device.
            </summary>
            <param name="effect">Effect to set.</param>
        </member>
        <member name="M:Corale.Colore.Core.GenericDevice.Set(Corale.Colore.Razer.Effect,System.IntPtr)">
            <summary>
            Sets an effect on this device, taking a parameter.
            </summary>
            <param name="effect">Effect to set.</param>
            <param name="param">Effect-specific parameter to use.</param>
        </member>
        <member name="F:Corale.Colore.Core.GenericDevice.Log">
            <summary>
            Logger instance for this class.
            </summary>
        </member>
        <member name="F:Corale.Colore.Core.GenericDevice.Instances">
            <summary>
            Holds generated instances of devices.
            </summary>
        </member>
        <member name="F:Corale.Colore.Core.GenericDevice._deviceId">
            <summary>
            The <see cref="T:System.Guid" /> of this device.
            </summary>
        </member>
        <member name="M:Corale.Colore.Core.GenericDevice.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Corale.Colore.Core.GenericDevice" /> class.
            </summary>
            <param name="deviceId">The <see cref="T:System.Guid" /> of the device.</param>
        </member>
        <member name="P:Corale.Colore.Core.GenericDevice.DeviceId">
            <summary>
            Gets the <see cref="T:System.Guid" /> of this device.
            </summary>
        </member>
        <member name="M:Corale.Colore.Core.GenericDevice.Get(System.Guid)">
            <summary>
            Gets a <see cref="T:Corale.Colore.Core.IGenericDevice" /> instance for the device
            with the specified ID.
            </summary>
            <param name="deviceId">The ID of the device to get.</param>
            <returns>An instance of <see cref="T:Corale.Colore.Core.IGenericDevice" /> for the requested device.</returns>
        </member>
        <member name="M:Corale.Colore.Core.GenericDevice.SetAll(Corale.Colore.Core.Color)">
            <summary>
            Sets the color of all components on this device.
            </summary>
            <param name="color">Color to set.</param>
        </member>
        <member name="M:Corale.Colore.Core.GenericDevice.SetEffect(Corale.Colore.Razer.Effect)">
            <summary>
            Sets a parameter-less effect on this device.
            </summary>
            <param name="effect">Effect to set.</param>
        </member>
        <member name="M:Corale.Colore.Core.GenericDevice.SetEffect(Corale.Colore.Razer.Effect,System.IntPtr)">
            <summary>
            Sets an effect on this device, taking a parameter.
            </summary>
            <param name="effect">Effect to set.</param>
            <param name="param">Effect-specific parameter to use.</param>
        </member>
        <member name="T:Corale.Colore.Core.Headset">
            <summary>
            Class for interacting with Chroma Headsets.
            </summary>
            <summary>
            Class for interacting with Chroma Headsets.
            </summary>
        </member>
        <member name="M:Corale.Colore.Core.Headset.Set(Corale.Colore.Razer.Headset.Effects.Effect)">
            <summary>
            Sets an effect on the headset that doesn't
            take any parameters, currently only valid
            for the <see cref="F:Corale.Colore.Razer.Headset.Effects.Effect.SpectrumCycling" /> effect.
            </summary>
            <param name="effect">The type of effect to set.</param>
        </member>
        <member name="M:Corale.Colore.Core.Headset.Set(Corale.Colore.Razer.Headset.Effects.Static)">
            <summary>
            Sets a new static effect on the headset.
            </summary>
            <param name="effect">
            An instance of the <see cref="T:Corale.Colore.Razer.Headset.Effects.Static" /> struct
            describing the effect.
            </param>
        </member>
        <member name="M:Corale.Colore.Core.Headset.Set(Corale.Colore.Razer.Headset.Effects.Breathing)">
            <summary>
            Sets a new breathing effect on the headset.
            </summary>
            <param name="effect">
            An instance of the <see cref="T:Corale.Colore.Razer.Headset.Effects.Breathing" /> struct
            describing the effect.
            </param>
        </member>
        <member name="F:Corale.Colore.Core.Headset.Log">
            <summary>
            Loggers instance for this class.
            </summary>
        </member>
        <member name="F:Corale.Colore.Core.Headset._instance">
            <summary>
            Holds the application-wide instance of the <see cref="T:Corale.Colore.Core.IHeadset" /> interface.
            </summary>
        </member>
        <member name="M:Corale.Colore.Core.Headset.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Corale.Colore.Core.Headset" /> class from being created.
            </summary>
        </member>
        <member name="P:Corale.Colore.Core.Headset.Instance">
            <summary>
            Gets the application-wide instance of the <see cref="T:Corale.Colore.Core.IHeadset" /> interface.
            </summary>
        </member>
        <member name="M:Corale.Colore.Core.Headset.SetAll(Corale.Colore.Core.Color)">
            <summary>
            Sets the color of all components on this device.
            </summary>
            <param name="color">Color to set.</param>
        </member>
        <member name="M:Corale.Colore.Core.Headset.SetEffect(Corale.Colore.Razer.Headset.Effects.Effect)">
            <summary>
            Sets an effect on the headset that doesn't
            take any parameters, currently only valid
            for the <see cref="F:Corale.Colore.Razer.Headset.Effects.Effect.SpectrumCycling" /> effect.
            </summary>
            <param name="effect">The type of effect to set.</param>
        </member>
        <member name="M:Corale.Colore.Core.Headset.SetStatic(Corale.Colore.Razer.Headset.Effects.Static)">
            <summary>
            Sets a new static effect on the headset.
            </summary>
            <param name="effect">
            An instance of the <see cref="T:Corale.Colore.Razer.Headset.Effects.Static" /> struct
            describing the effect.
            </param>
        </member>
        <member name="M:Corale.Colore.Core.Headset.SetStatic(Corale.Colore.Core.Color)">
            <summary>
            Sets a new <see cref="T:Corale.Colore.Razer.Headset.Effects.Static" /> effect on
            the headset using the specified <see cref="T:Corale.Colore.Core.Color" />.
            </summary>
            <param name="color"><see cref="T:Corale.Colore.Core.Color" /> of the effect.</param>
        </member>
        <member name="M:Corale.Colore.Core.Headset.SetBreathing(Corale.Colore.Razer.Headset.Effects.Breathing)">
            <summary>
            Sets a new breathing effect on the headset.
            </summary>
            <param name="effect">
            An instance of the <see cref="T:Corale.Colore.Razer.Headset.Effects.Breathing" /> struct
            describing the effect.
            </param>
        </member>
        <member name="M:Corale.Colore.Core.Headset.SetBreathing(Corale.Colore.Core.Color)">
            <summary>
            Sets a new <see cref="T:Corale.Colore.Razer.Headset.Effects.Breathing" /> effect on the headset
            using the specified <see cref="T:Corale.Colore.Core.Color" />.
            </summary>
            <param name="color"><see cref="T:Corale.Colore.Core.Color"/> of the effect.</param>
        </member>
        <member name="T:Corale.Colore.Core.IDevice">
            <summary>
            Interface for functionality common with all devices.
            </summary>
            <summary>
            Interface for functionality common with all devices.
            </summary>
        </member>
        <member name="M:Corale.Colore.Core.IDevice.Set(Corale.Colore.Core.Color)">
            <summary>
            Sets the color of all components on this device.
            </summary>
            <param name="color">Color to set.</param>
        </member>
        <member name="M:Corale.Colore.Core.IDevice.Set(System.Guid)">
            <summary>
            Updates the device to use the effect pointed to by the specified GUID.
            </summary>
            <param name="guid">GUID to set.</param>
        </member>
        <member name="P:Corale.Colore.Core.IDevice.CurrentEffectId">
            <summary>
            Gets the ID of the currently active effect.
            </summary>
        </member>
        <member name="M:Corale.Colore.Core.IDevice.Clear">
            <summary>
            Clears the current effect on the device.
            </summary>
        </member>
        <member name="M:Corale.Colore.Core.IDevice.SetAll(Corale.Colore.Core.Color)">
            <summary>
            Sets the color of all components on this device.
            </summary>
            <param name="color">Color to set.</param>
        </member>
        <member name="M:Corale.Colore.Core.IDevice.SetGuid(System.Guid)">
            <summary>
            Updates the device to use the effect pointed to by the specified GUID.
            </summary>
            <param name="guid">GUID to set.</param>
        </member>
        <member name="T:Corale.Colore.Core.IGenericDevice">
            <summary>
            Interface for generic devices.
            </summary>
            <summary>
            Interface for generic devices.
            </summary>
        </member>
        <member name="M:Corale.Colore.Core.IGenericDevice.Set(Corale.Colore.Razer.Effect)">
            <summary>
            Sets a parameter-less effect on this device.
            </summary>
            <param name="effect">Effect to set.</param>
        </member>
        <member name="M:Corale.Colore.Core.IGenericDevice.Set(Corale.Colore.Razer.Effect,System.IntPtr)">
            <summary>
            Sets an effect on this device, taking a parameter.
            </summary>
            <param name="effect">Effect to set.</param>
            <param name="param">Effect-specific parameter to use.</param>
        </member>
        <member name="P:Corale.Colore.Core.IGenericDevice.DeviceId">
            <summary>
            Gets the <see cref="T:System.Guid" /> of this device.
            </summary>
        </member>
        <member name="M:Corale.Colore.Core.IGenericDevice.SetEffect(Corale.Colore.Razer.Effect)">
            <summary>
            Sets a parameter-less effect on this device.
            </summary>
            <param name="effect">Effect to set.</param>
        </member>
        <member name="M:Corale.Colore.Core.IGenericDevice.SetEffect(Corale.Colore.Razer.Effect,System.IntPtr)">
            <summary>
            Sets an effect on this device, taking a parameter.
            </summary>
            <param name="effect">Effect to set.</param>
            <param name="param">Effect-specific parameter to use.</param>
        </member>
        <member name="T:Corale.Colore.Core.IHeadset">
            <summary>
            Interface for headset functionality.
            </summary>
            <summary>
            Interface for headset functionality.
            </summary>
        </member>
        <member name="M:Corale.Colore.Core.IHeadset.Set(Corale.Colore.Razer.Headset.Effects.Effect)">
            <summary>
            Sets an effect on the headset that doesn't
            take any parameters, currently only valid
            for the <see cref="F:Corale.Colore.Razer.Headset.Effects.Effect.SpectrumCycling" /> effect.
            </summary>
            <param name="effect">The type of effect to set.</param>
        </member>
        <member name="M:Corale.Colore.Core.IHeadset.Set(Corale.Colore.Razer.Headset.Effects.Static)">
            <summary>
            Sets a new static effect on the headset.
            </summary>
            <param name="effect">
            An instance of the <see cref="T:Corale.Colore.Razer.Headset.Effects.Static" /> struct
            describing the effect.
            </param>
        </member>
        <member name="M:Corale.Colore.Core.IHeadset.Set(Corale.Colore.Razer.Headset.Effects.Breathing)">
            <summary>
            Sets a new breathing effect on the headset.
            </summary>
            <param name="effect">
            An instance of the <see cref="T:Corale.Colore.Razer.Headset.Effects.Breathing" /> struct
            describing the effect.
            </param>
        </member>
        <member name="M:Corale.Colore.Core.IHeadset.SetEffect(Corale.Colore.Razer.Headset.Effects.Effect)">
            <summary>
            Sets an effect on the headset that doesn't
            take any parameters, currently only valid
            for the <see cref="F:Corale.Colore.Razer.Headset.Effects.Effect.SpectrumCycling" /> effect.
            </summary>
            <param name="effect">The type of effect to set.</param>
        </member>
        <member name="M:Corale.Colore.Core.IHeadset.SetStatic(Corale.Colore.Razer.Headset.Effects.Static)">
            <summary>
            Sets a new static effect on the headset.
            </summary>
            <param name="effect">
            An instance of the <see cref="T:Corale.Colore.Razer.Headset.Effects.Static" /> struct
            describing the effect.
            </param>
        </member>
        <member name="M:Corale.Colore.Core.IHeadset.SetStatic(Corale.Colore.Core.Color)">
            <summary>
            Sets a new <see cref="T:Corale.Colore.Razer.Headset.Effects.Static" /> effect on
            the headset using the specified <see cref="T:Corale.Colore.Core.Color" />.
            </summary>
            <param name="color"><see cref="T:Corale.Colore.Core.Color" /> of the effect.</param>
        </member>
        <member name="M:Corale.Colore.Core.IHeadset.SetBreathing(Corale.Colore.Razer.Headset.Effects.Breathing)">
            <summary>
            Sets a new breathing effect on the headset.
            </summary>
            <param name="effect">
            An instance of the <see cref="T:Corale.Colore.Razer.Headset.Effects.Breathing" /> struct
            describing the effect.
            </param>
        </member>
        <member name="M:Corale.Colore.Core.IHeadset.SetBreathing(Corale.Colore.Core.Color)">
            <summary>
            Sets a new <see cref="T:Corale.Colore.Razer.Headset.Effects.Breathing" /> effect on the headset
            using the specified <see cref="T:Corale.Colore.Core.Color" />.
            </summary>
            <param name="color"><see cref="T:Corale.Colore.Core.Color"/> of the effect.</param>
        </member>
        <member name="T:Corale.Colore.Core.IKeyboard">
            <summary>
            Interface for keyboard functionality.
            </summary>
            <summary>
            Interface for keyboard functionality.
            </summary>
        </member>
        <member name="M:Corale.Colore.Core.IKeyboard.Set(Corale.Colore.Razer.Keyboard.Effects.Breathing)">
            <summary>
            Sets a breathing effect on the keyboard.
            </summary>
            <param name="effect">Effect options.</param>
        </member>
        <member name="M:Corale.Colore.Core.IKeyboard.Set(Corale.Colore.Core.Color,Corale.Colore.Core.Color)">
            <summary>
            Sets a breathing effect on the keyboard, fading between the
            two specified colors.
            </summary>
            <param name="first">Color to start from.</param>
            <param name="second">Color to reach, before going back to <paramref name="first" />.</param>
        </member>
        <member name="M:Corale.Colore.Core.IKeyboard.Set(Corale.Colore.Core.Color,Corale.Colore.Razer.Keyboard.Effects.Duration)">
            <summary>
            Sets a reactive effect on the keyboard with the specified
            color and duration.
            </summary>
            <param name="color">Color to emit on key press.</param>
            <param name="duration">How long to illuminate the key after being pressed.</param>
        </member>
        <member name="M:Corale.Colore.Core.IKeyboard.Set(Corale.Colore.Core.Color[][])">
            <summary>
            Sets a custom grid effect on the keyboard using
            a two dimensional array of color values.
            </summary>
            <param name="colors">The grid of colors to use.</param>
            <remarks>
            The passed in arrays cannot have more than <see cref="F:Corale.Colore.Razer.Keyboard.Constants.MaxRows" /> rows and
            not more than <see cref="F:Corale.Colore.Razer.Keyboard.Constants.MaxColumns" /> columns in any row.
            <para />
            This will overwrite the internal <see cref="T:Corale.Colore.Razer.Keyboard.Effects.Custom" />
            struct in the <see cref="T:Corale.Colore.Core.Keyboard" /> class.
            </remarks>
        </member>
        <member name="M:Corale.Colore.Core.IKeyboard.Set(Corale.Colore.Razer.Keyboard.Effects.Custom)">
            <summary>
            Sets a custom grid effect on the keyboard.
            </summary>
            <param name="effect">Effect options.</param>
            <remarks>
            This will overwrite the current internal <see cref="T:Corale.Colore.Razer.Keyboard.Effects.Custom" />
            struct in the <see cref="T:Corale.Colore.Core.Keyboard" /> class.
            </remarks>
        </member>
        <member name="M:Corale.Colore.Core.IKeyboard.Set(Corale.Colore.Razer.Keyboard.Effects.Direction)">
            <summary>
            Sets a wave effect on the keyboard in the specified direction.
            </summary>
            <param name="direction">Direction of the wave.</param>
        </member>
        <member name="M:Corale.Colore.Core.IKeyboard.Set(Corale.Colore.Razer.Keyboard.Effects.Effect)">
            <summary>
            Sets an effect without any parameters.
            Currently, this only works for the <see cref="F:Corale.Colore.Razer.Keyboard.Effects.Effect.None" /> and <see cref="F:Corale.Colore.Razer.Keyboard.Effects.Effect.SpectrumCycling" /> effects.
            </summary>
            <param name="effect">Effect options.</param>
        </member>
        <member name="M:Corale.Colore.Core.IKeyboard.Set(Corale.Colore.Core.Size,Corale.Colore.Core.Size,Corale.Colore.Core.Color,System.Boolean)">
            <summary>
            Sets the color on a specific row and column on the keyboard grid.
            </summary>
            <param name="row">Row to set, between 1 and <see cref="F:Corale.Colore.Razer.Keyboard.Constants.MaxRows" />.</param>
            <param name="column">Column to set, between 1 and <see cref="F:Corale.Colore.Razer.Keyboard.Constants.MaxColumns" />.</param>
            <param name="color">Color to set.</param>
            <param name="clear">Whether or not to clear the existing colors before setting this one.</param>
        </member>
        <member name="M:Corale.Colore.Core.IKeyboard.Set(Corale.Colore.Razer.Keyboard.Key,Corale.Colore.Core.Color,System.Boolean)">
            <summary>
            Sets the color of a specific key on the keyboard.
            </summary>
            <param name="key">Key to modify.</param>
            <param name="color">Color to set.</param>
            <param name="clear">If <c>true</c>, the keyboard will first be cleared before setting the key.</param>
        </member>
        <member name="M:Corale.Colore.Core.IKeyboard.Set(Corale.Colore.Core.Color,Corale.Colore.Razer.Keyboard.Key,Corale.Colore.Razer.Keyboard.Key[])">
            <summary>
            Sets the specified color on a set of keys.
            </summary>
            <param name="color">The <see cref="T:Corale.Colore.Core.Color" /> to apply.</param>
            <param name="key">First key to change.</param>
            <param name="keys">Additional keys that should also have the color applied.</param>
        </member>
        <member name="M:Corale.Colore.Core.IKeyboard.Set(System.Collections.Generic.IEnumerable{Corale.Colore.Razer.Keyboard.Key},Corale.Colore.Core.Color,System.Boolean)">
            <summary>
            Sets a color on a collection of keys.
            </summary>
            <param name="keys">The keys which should have their color changed.</param>
            <param name="color">The <see cref="T:Corale.Colore.Core.Color" /> to apply.</param>
            <param name="clear">If <c>true</c>, the keyboard will first be cleared before setting the keys.</param>
        </member>
        <member name="M:Corale.Colore.Core.IKeyboard.Set(Corale.Colore.Razer.Keyboard.Effects.Reactive)">
            <summary>
            Sets a reactive effect on the keyboard.
            </summary>
            <param name="effect">Effect options.</param>
        </member>
        <member name="M:Corale.Colore.Core.IKeyboard.Set(Corale.Colore.Razer.Keyboard.Effects.Static)">
            <summary>
            Sets a static color on the keyboard.
            </summary>
            <param name="effect">Effect options.</param>
        </member>
        <member name="M:Corale.Colore.Core.IKeyboard.Set(Corale.Colore.Razer.Keyboard.Effects.Wave)">
            <summary>
            Sets a wave effect on the keyboard.
            </summary>
            <param name="effect">Effect options.</param>
        </member>
        <member name="P:Corale.Colore.Core.IKeyboard.Item(Corale.Colore.Razer.Keyboard.Key)">
            <summary>
            Gets or sets the <see cref="T:Corale.Colore.Core.Color" /> for a specific <see cref="T:Corale.Colore.Razer.Keyboard.Key" /> on the keyboard.
            </summary>
            <param name="key">The key to access.</param>
            <returns>The color currently set for the specified key.</returns>
        </member>
        <member name="P:Corale.Colore.Core.IKeyboard.Item(Corale.Colore.Core.Size,Corale.Colore.Core.Size)">
            <summary>
            Gets or sets the <see cref="T:Corale.Colore.Core.Color" /> for a specific row and column on the
            keyboard grid.
            </summary>
            <param name="row">Row to query, between 1 and <see cref="F:Corale.Colore.Razer.Keyboard.Constants.MaxRows" />.</param>
            <param name="column">Column to query, between 1 and <see cref="F:Corale.Colore.Razer.Keyboard.Constants.MaxColumns" />.</param>
            <returns>The color currently set on the specified position.</returns>
        </member>
        <member name="M:Corale.Colore.Core.IKeyboard.IsSet(Corale.Colore.Razer.Keyboard.Key)">
            <summary>
            Returns whether a certain key has had a custom color set.
            </summary>
            <param name="key">Key to check.</param>
            <returns><c>true</c> if the key has a color set, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Corale.Colore.Core.IKeyboard.SetBreathing(Corale.Colore.Razer.Keyboard.Effects.Breathing)">
            <summary>
            Sets a breathing effect on the keyboard.
            </summary>
            <param name="effect">Effect options.</param>
        </member>
        <member name="M:Corale.Colore.Core.IKeyboard.SetBreathing(Corale.Colore.Core.Color,Corale.Colore.Core.Color)">
            <summary>
            Sets a breathing effect on the keyboard, fading between the
            two specified colors.
            </summary>
            <param name="first">Color to start from.</param>
            <param name="second">Color to reach, before going back to <paramref name="first" />.</param>
        </member>
        <member name="M:Corale.Colore.Core.IKeyboard.SetReactive(Corale.Colore.Core.Color,Corale.Colore.Razer.Keyboard.Effects.Duration)">
            <summary>
            Sets a reactive effect on the keyboard with the specified
            color and duration.
            </summary>
            <param name="color">Color to emit on key press.</param>
            <param name="duration">How long to illuminate the key after being pressed.</param>
        </member>
        <member name="M:Corale.Colore.Core.IKeyboard.SetGrid(Corale.Colore.Core.Color[][])">
            <summary>
            Sets a custom grid effect on the keyboard using
            a two dimensional array of color values.
            </summary>
            <param name="colors">The grid of colors to use.</param>
            <remarks>
            The passed in arrays cannot have more than <see cref="F:Corale.Colore.Razer.Keyboard.Constants.MaxRows" /> rows and
            not more than <see cref="F:Corale.Colore.Razer.Keyboard.Constants.MaxColumns" /> columns in any row.
            <para />
            This will overwrite the internal <see cref="T:Corale.Colore.Razer.Keyboard.Effects.Custom" />
            struct in the <see cref="T:Corale.Colore.Core.Keyboard" /> class.
            </remarks>
        </member>
        <member name="M:Corale.Colore.Core.IKeyboard.SetCustom(Corale.Colore.Razer.Keyboard.Effects.Custom)">
            <summary>
            Sets a custom grid effect on the keyboard.
            </summary>
            <param name="effect">Effect options.</param>
            <remarks>
            This will overwrite the current internal <see cref="T:Corale.Colore.Razer.Keyboard.Effects.Custom" />
            struct in the <see cref="T:Corale.Colore.Core.Keyboard" /> class.
            </remarks>
        </member>
        <member name="M:Corale.Colore.Core.IKeyboard.SetWave(Corale.Colore.Razer.Keyboard.Effects.Direction)">
            <summary>
            Sets a wave effect on the keyboard in the specified direction.
            </summary>
            <param name="direction">Direction of the wave.</param>
        </member>
        <member name="M:Corale.Colore.Core.IKeyboard.SetEffect(Corale.Colore.Razer.Keyboard.Effects.Effect)">
            <summary>
            Sets an effect without any parameters.
            Currently, this only works for the <see cref="F:Corale.Colore.Razer.Keyboard.Effects.Effect.None" /> and <see cref="F:Corale.Colore.Razer.Keyboard.Effects.Effect.SpectrumCycling" /> effects.
            </summary>
            <param name="effect">Effect options.</param>
        </member>
        <member name="M:Corale.Colore.Core.IKeyboard.SetPosition(Corale.Colore.Core.Size,Corale.Colore.Core.Size,Corale.Colore.Core.Color,System.Boolean)">
            <summary>
            Sets the color on a specific row and column on the keyboard grid.
            </summary>
            <param name="row">Row to set, between 1 and <see cref="F:Corale.Colore.Razer.Keyboard.Constants.MaxRows" />.</param>
            <param name="column">Column to set, between 1 and <see cref="F:Corale.Colore.Razer.Keyboard.Constants.MaxColumns" />.</param>
            <param name="color">Color to set.</param>
            <param name="clear">Whether or not to clear the existing colors before setting this one.</param>
        </member>
        <member name="M:Corale.Colore.Core.IKeyboard.SetKey(Corale.Colore.Razer.Keyboard.Key,Corale.Colore.Core.Color,System.Boolean)">
            <summary>
            Sets the color of a specific key on the keyboard.
            </summary>
            <param name="key">Key to modify.</param>
            <param name="color">Color to set.</param>
            <param name="clear">If <c>true</c>, the keyboard will first be cleared before setting the key.</param>
        </member>
        <member name="M:Corale.Colore.Core.IKeyboard.SetKeys(Corale.Colore.Core.Color,Corale.Colore.Razer.Keyboard.Key,Corale.Colore.Razer.Keyboard.Key[])">
            <summary>
            Sets the specified color on a set of keys.
            </summary>
            <param name="color">The <see cref="T:Corale.Colore.Core.Color" /> to apply.</param>
            <param name="key">First key to change.</param>
            <param name="keys">Additional keys that should also have the color applied.</param>
        </member>
        <member name="M:Corale.Colore.Core.IKeyboard.SetKeys(System.Collections.Generic.IEnumerable{Corale.Colore.Razer.Keyboard.Key},Corale.Colore.Core.Color,System.Boolean)">
            <summary>
            Sets a color on a collection of keys.
            </summary>
            <param name="keys">The keys which should have their color changed.</param>
            <param name="color">The <see cref="T:Corale.Colore.Core.Color" /> to apply.</param>
            <param name="clear">If <c>true</c>, the keyboard will first be cleared before setting the keys.</param>
        </member>
        <member name="M:Corale.Colore.Core.IKeyboard.SetReactive(Corale.Colore.Razer.Keyboard.Effects.Reactive)">
            <summary>
            Sets a reactive effect on the keyboard.
            </summary>
            <param name="effect">Effect options.</param>
        </member>
        <member name="M:Corale.Colore.Core.IKeyboard.SetStatic(Corale.Colore.Razer.Keyboard.Effects.Static)">
            <summary>
            Sets a static color on the keyboard.
            </summary>
            <param name="effect">Effect options.</param>
        </member>
        <member name="M:Corale.Colore.Core.IKeyboard.SetWave(Corale.Colore.Razer.Keyboard.Effects.Wave)">
            <summary>
            Sets a wave effect on the keyboard.
            </summary>
            <param name="effect">Effect options.</param>
        </member>
        <member name="T:Corale.Colore.Core.IKeypad">
            <summary>
            Interface for keypad functions.
            </summary>
            <summary>
            Interface for keypad functions.
            </summary>
        </member>
        <member name="M:Corale.Colore.Core.IKeypad.Set(Corale.Colore.Razer.Keypad.Effects.Breathing)">
            <summary>
            Sets a <see cref="T:Corale.Colore.Razer.Keypad.Effects.Breathing" /> effect on the keypad.
            </summary>
            <param name="effect">An instance of the <see cref="T:Corale.Colore.Razer.Keypad.Effects.Breathing" /> struct.</param>
        </member>
        <member name="M:Corale.Colore.Core.IKeypad.Set(Corale.Colore.Razer.Keypad.Effects.Custom)">
            <summary>
            Sets a <see cref="T:Corale.Colore.Razer.Keypad.Effects.Custom" /> effect on the keypad.
            </summary>
            <param name="effect">An instance of the <see cref="T:Corale.Colore.Razer.Keypad.Effects.Custom" /> struct.</param>
        </member>
        <member name="M:Corale.Colore.Core.IKeypad.Set(Corale.Colore.Razer.Keypad.Effects.Reactive)">
            <summary>
            Sets a <see cref="T:Corale.Colore.Razer.Keypad.Effects.Reactive" /> effect on the keypad.
            </summary>
            <param name="effect">An instance of the <see cref="T:Corale.Colore.Razer.Keypad.Effects.Reactive" /> struct.</param>
        </member>
        <member name="M:Corale.Colore.Core.IKeypad.Set(Corale.Colore.Razer.Keypad.Effects.Static)">
            <summary>
            Sets a <see cref="T:Corale.Colore.Razer.Keypad.Effects.Static" /> effect on the keypad.
            </summary>
            <param name="effect">An instance of the <see cref="T:Corale.Colore.Razer.Keypad.Effects.Static" /> struct.</param>
        </member>
        <member name="M:Corale.Colore.Core.IKeypad.Set(Corale.Colore.Razer.Keypad.Effects.Wave)">
            <summary>
            Sets a <see cref="T:Corale.Colore.Razer.Keypad.Effects.Wave" /> effect on the keypad.
            </summary>
            <param name="effect">An instance of the <see cref="T:Corale.Colore.Razer.Keypad.Effects.Wave" /> struct.</param>
        </member>
        <member name="M:Corale.Colore.Core.IKeypad.Set(Corale.Colore.Razer.Keypad.Effects.Effect)">
            <summary>
            Sets an effect without any parameters.
            Currently, this only works for the <see cref="F:Corale.Colore.Razer.Keypad.Effects.Effect.None" /> effect.
            </summary>
            <param name="effect">Effect options.</param>
        </member>
        <member name="P:Corale.Colore.Core.IKeypad.Item(System.Int32,System.Int32)">
            <summary>
            Gets or sets a color at the specified position in the keypad's
            grid layout.
            </summary>
            <param name="row">The row to access (between <c>0</c> and <see cref="F:Corale.Colore.Razer.Keypad.Constants.MaxRows" />).</param>
            <param name="column">The column to access (between <c>0</c> and <see cref="F:Corale.Colore.Razer.Keypad.Constants.MaxColumns" />).</param>
            <returns>The <see cref="T:Corale.Colore.Core.Color" /> at the specified position.</returns>
        </member>
        <member name="M:Corale.Colore.Core.IKeypad.IsSet(System.Int32,System.Int32)">
            <summary>
            Returns whether a key has had a custom color set.
            </summary>
            <param name="row">The row to query.</param>
            <param name="column">The column to query.</param>
            <returns><c>true</c> if the position has a color set that is not black, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Corale.Colore.Core.IKeypad.SetBreathing(Corale.Colore.Razer.Keypad.Effects.Breathing)">
            <summary>
            Sets a <see cref="T:Corale.Colore.Razer.Keypad.Effects.Breathing" /> effect on the keypad.
            </summary>
            <param name="effect">An instance of the <see cref="T:Corale.Colore.Razer.Keypad.Effects.Breathing" /> struct.</param>
        </member>
        <member name="M:Corale.Colore.Core.IKeypad.SetBreathing(Corale.Colore.Core.Color,Corale.Colore.Core.Color)">
            <summary>
            Sets a <see cref="T:Corale.Colore.Razer.Keypad.Effects.Breathing" /> effect on the keypad
            using the specified <see cref="T:Corale.Colore.Core.Color" />.
            </summary>
            <param name="first">The first color to breathe into.</param>
            <param name="second">Second color to breathe into.</param>
        </member>
        <member name="M:Corale.Colore.Core.IKeypad.SetBreathing">
            <summary>
            Sets an effect on the keypad to breathe
            between randomly chosen colors.
            </summary>
        </member>
        <member name="M:Corale.Colore.Core.IKeypad.SetCustom(Corale.Colore.Razer.Keypad.Effects.Custom)">
            <summary>
            Sets a <see cref="T:Corale.Colore.Razer.Keypad.Effects.Custom" /> effect on the keypad.
            </summary>
            <param name="effect">An instance of the <see cref="T:Corale.Colore.Razer.Keypad.Effects.Custom" /> struct.</param>
        </member>
        <member name="M:Corale.Colore.Core.IKeypad.SetReactive(Corale.Colore.Razer.Keypad.Effects.Reactive)">
            <summary>
            Sets a <see cref="T:Corale.Colore.Razer.Keypad.Effects.Reactive" /> effect on the keypad.
            </summary>
            <param name="effect">An instance of the <see cref="T:Corale.Colore.Razer.Keypad.Effects.Reactive" /> struct.</param>
        </member>
        <member name="M:Corale.Colore.Core.IKeypad.SetReactive(Corale.Colore.Razer.Keypad.Effects.Duration,Corale.Colore.Core.Color)">
            <summary>
            Sets a <see cref="T:Corale.Colore.Razer.Keypad.Effects.Reactive" /> effect on the keypad
            with the specified parameters.
            </summary>
            <param name="duration">Duration of the effect.</param>
            <param name="color">Color of the effect.</param>
        </member>
        <member name="M:Corale.Colore.Core.IKeypad.SetStatic(Corale.Colore.Razer.Keypad.Effects.Static)">
            <summary>
            Sets a <see cref="T:Corale.Colore.Razer.Keypad.Effects.Static" /> effect on the keypad.
            </summary>
            <param name="effect">An instance of the <see cref="T:Corale.Colore.Razer.Keypad.Effects.Static" /> struct.</param>
        </member>
        <member name="M:Corale.Colore.Core.IKeypad.SetStatic(Corale.Colore.Core.Color)">
            <summary>
            Sets a <see cref="T:Corale.Colore.Razer.Keypad.Effects.Static" /> effect on the keypad.
            </summary>
            <param name="color">Color of the effect.</param>
        </member>
        <member name="M:Corale.Colore.Core.IKeypad.SetWave(Corale.Colore.Razer.Keypad.Effects.Wave)">
            <summary>
            Sets a <see cref="T:Corale.Colore.Razer.Keypad.Effects.Wave" /> effect on the keypad.
            </summary>
            <param name="effect">An instance of the <see cref="T:Corale.Colore.Razer.Keypad.Effects.Wave" /> struct.</param>
        </member>
        <member name="M:Corale.Colore.Core.IKeypad.SetWave(Corale.Colore.Razer.Keypad.Effects.Direction)">
            <summary>
            Sets a <see cref="T:Corale.Colore.Razer.Keypad.Effects.Wave" /> effect on the keypad.
            </summary>
            <param name="direction">Direction of the wave.</param>
        </member>
        <member name="M:Corale.Colore.Core.IKeypad.SetEffect(Corale.Colore.Razer.Keypad.Effects.Effect)">
            <summary>
            Sets an effect without any parameters.
            Currently, this only works for the <see cref="F:Corale.Colore.Razer.Keypad.Effects.Effect.None" /> effect.
            </summary>
            <param name="effect">Effect options.</param>
        </member>
        <member name="T:Corale.Colore.Core.IMouse">
            <summary>
            Interface for mouse functionality.
            </summary>
            <summary>
            Interface for mouse functionality.
            </summary>
        </member>
        <member name="M:Corale.Colore.Core.IMouse.Set(Corale.Colore.Razer.Mouse.Led,Corale.Colore.Core.Color)">
            <summary>
            Sets the color of a specific LED on the mouse.
            </summary>
            <param name="led">Which LED to modify.</param>
            <param name="color">Color to set.</param>
        </member>
        <member name="M:Corale.Colore.Core.IMouse.Set(Corale.Colore.Razer.Mouse.Effects.Effect)">
            <summary>
            Sets an effect without any parameters.
            Currently, this only works for the <see cref="F:Corale.Colore.Razer.Mouse.Effects.Effect.None" /> effect.
            </summary>
            <param name="effect">Effect options.</param>
        </member>
        <member name="M:Corale.Colore.Core.IMouse.Set(Corale.Colore.Razer.Mouse.Effects.Breathing)">
            <summary>
            Sets a breathing effect on the mouse.
            </summary>
            <param name="effect">An instance of the <see cref="T:Corale.Colore.Razer.Mouse.Effects.Breathing" /> effect.</param>
        </member>
        <member name="M:Corale.Colore.Core.IMouse.Set(Corale.Colore.Razer.Mouse.Effects.Static)">
            <summary>
            Sets a static color on the mouse.
            </summary>
            <param name="effect">An instance of the <see cref="T:Corale.Colore.Razer.Mouse.Effects.Static" /> effect.</param>
        </member>
        <member name="M:Corale.Colore.Core.IMouse.Set(Corale.Colore.Razer.Mouse.Effects.Blinking)">
            <summary>
            Starts a blinking effect on the specified LED.
            </summary>
            <param name="effect">An instance of the <see cref="T:Corale.Colore.Razer.Mouse.Effects.Blinking" /> effect.</param>
        </member>
        <member name="M:Corale.Colore.Core.IMouse.Set(Corale.Colore.Razer.Mouse.Effects.Reactive)">
            <summary>
            Sets a reactive effect on the mouse.
            </summary>
            <param name="effect">Effect options struct.</param>
        </member>
        <member name="M:Corale.Colore.Core.IMouse.Set(Corale.Colore.Razer.Mouse.Effects.SpectrumCycling)">
            <summary>
            Sets a spectrum cycling effect on the mouse.
            </summary>
            <param name="effect">Effect options struct.</param>
        </member>
        <member name="M:Corale.Colore.Core.IMouse.Set(Corale.Colore.Razer.Mouse.Effects.Wave)">
            <summary>
            Sets a wave effect on the mouse.
            </summary>
            <param name="effect">Effect options struct.</param>
        </member>
        <member name="M:Corale.Colore.Core.IMouse.SetLed(Corale.Colore.Razer.Mouse.Led,Corale.Colore.Core.Color)">
            <summary>
            Sets the color of a specific LED on the mouse.
            </summary>
            <param name="led">Which LED to modify.</param>
            <param name="color">Color to set.</param>
        </member>
        <member name="M:Corale.Colore.Core.IMouse.SetEffect(Corale.Colore.Razer.Mouse.Effects.Effect)">
            <summary>
            Sets an effect without any parameters.
            Currently, this only works for the <see cref="F:Corale.Colore.Razer.Mouse.Effects.Effect.None" /> effect.
            </summary>
            <param name="effect">Effect options.</param>
        </member>
        <member name="M:Corale.Colore.Core.IMouse.SetBreathing(Corale.Colore.Razer.Mouse.Effects.Breathing)">
            <summary>
            Sets a breathing effect on the mouse.
            </summary>
            <param name="effect">An instance of the <see cref="T:Corale.Colore.Razer.Mouse.Effects.Breathing" /> effect.</param>
        </member>
        <member name="M:Corale.Colore.Core.IMouse.SetBreathing(Corale.Colore.Core.Color,Corale.Colore.Core.Color,Corale.Colore.Razer.Mouse.Led)">
            <summary>
            Sets an effect on the mouse that causes it to breathe
            between two different colors, fading to black in-between each one.
            </summary>
            <param name="first">First color to breathe into.</param>
            <param name="second">Second color to breathe into.</param>
            <param name="led">The LED(s) on which to apply the effect.</param>
        </member>
        <member name="M:Corale.Colore.Core.IMouse.SetBreathing(Corale.Colore.Core.Color,Corale.Colore.Razer.Mouse.Led)">
            <summary>
            Sets an effect on the mouse that causes it to breathe
            a single color. The specified color will fade in
            on the mouse, then fade to black, and repeat.
            </summary>
            <param name="color">The color to breathe.</param>
            <param name="led">The LED(s) on which to apply the effect.</param>
        </member>
        <member name="M:Corale.Colore.Core.IMouse.SetBreathing(Corale.Colore.Razer.Mouse.Led)">
            <summary>
            Instructs the mouse to breathe random colors.
            </summary>
            <param name="led">The LED(s) on which to apply the effect.</param>
        </member>
        <member name="M:Corale.Colore.Core.IMouse.SetStatic(Corale.Colore.Razer.Mouse.Effects.Static)">
            <summary>
            Sets a static color on the mouse.
            </summary>
            <param name="effect">An instance of the <see cref="T:Corale.Colore.Razer.Mouse.Effects.Static" /> effect.</param>
        </member>
        <member name="M:Corale.Colore.Core.IMouse.SetStatic(Corale.Colore.Core.Color,Corale.Colore.Razer.Mouse.Led)">
            <summary>
            Sets a static effect on the mouse.
            </summary>
            <param name="color">The color to use.</param>
            <param name="led">Which LED(s) to affect.</param>
        </member>
        <member name="M:Corale.Colore.Core.IMouse.SetBlinking(Corale.Colore.Razer.Mouse.Effects.Blinking)">
            <summary>
            Starts a blinking effect on the specified LED.
            </summary>
            <param name="effect">An instance of the <see cref="T:Corale.Colore.Razer.Mouse.Effects.Blinking" /> effect.</param>
        </member>
        <member name="M:Corale.Colore.Core.IMouse.SetBlinking(Corale.Colore.Core.Color,Corale.Colore.Razer.Mouse.Led)">
            <summary>
            Starts a blinking effect on the mouse.
            </summary>
            <param name="color">The color to blink with.</param>
            <param name="led">The LED(s) to affect.</param>
        </member>
        <member name="M:Corale.Colore.Core.IMouse.SetReactive(Corale.Colore.Razer.Mouse.Effects.Reactive)">
            <summary>
            Sets a reactive effect on the mouse.
            </summary>
            <param name="effect">Effect options struct.</param>
        </member>
        <member name="M:Corale.Colore.Core.IMouse.SetReactive(Corale.Colore.Razer.Mouse.Effects.Duration,Corale.Colore.Core.Color,Corale.Colore.Razer.Mouse.Led)">
            <summary>
            Sets a reactive effect on the mouse.
            </summary>
            <param name="duration">How long the effect should last.</param>
            <param name="color">The color to react with.</param>
            <param name="led">Which LED(s) to affect.</param>
        </member>
        <member name="M:Corale.Colore.Core.IMouse.SetSpectrumCycling(Corale.Colore.Razer.Mouse.Effects.SpectrumCycling)">
            <summary>
            Sets a spectrum cycling effect on the mouse.
            </summary>
            <param name="effect">Effect options struct.</param>
        </member>
        <member name="M:Corale.Colore.Core.IMouse.SetSpectrumCycling(Corale.Colore.Razer.Mouse.Led)">
            <summary>
            Sets a spectrum cycling effect on the mouse.
            </summary>
            <param name="led">The LED(s) to affect.</param>
        </member>
        <member name="M:Corale.Colore.Core.IMouse.SetWave(Corale.Colore.Razer.Mouse.Effects.Wave)">
            <summary>
            Sets a wave effect on the mouse.
            </summary>
            <param name="effect">Effect options struct.</param>
        </member>
        <member name="M:Corale.Colore.Core.IMouse.SetWave(Corale.Colore.Razer.Mouse.Effects.Direction)">
            <summary>
            Sets a wave effect on the mouse.
            </summary>
            <param name="direction">Direction of the wave.</param>
        </member>
        <member name="M:Corale.Colore.Core.IMouse.SetCustom(Corale.Colore.Razer.Mouse.Effects.Custom)">
            <summary>
            Sets a custom effect on the mouse.
            </summary>
            <param name="effect">An instance of the <see cref="T:Corale.Colore.Razer.Mouse.Effects.Custom" /> struct.</param>
        </member>
        <member name="T:Corale.Colore.Core.IMousepad">
            <summary>
            Interface for mouse pad functionality.
            </summary>
            <summary>
            Interface for mouse pad functionality.
            </summary>
        </member>
        <member name="M:Corale.Colore.Core.IMousepad.Set(Corale.Colore.Razer.Mousepad.Effects.Breathing)">
            <summary>
            Sets a breathing effect on the mouse pad.
            </summary>
            <param name="effect">An instance of the <see cref="T:Corale.Colore.Razer.Mousepad.Effects.Breathing" /> struct.</param>
        </member>
        <member name="M:Corale.Colore.Core.IMousepad.Set(Corale.Colore.Razer.Mousepad.Effects.Static)">
            <summary>
            Sets a static color effect on the mouse pad.
            </summary>
            <param name="effect">An instance of the <see cref="T:Corale.Colore.Razer.Mousepad.Effects.Static" /> struct.</param>
        </member>
        <member name="M:Corale.Colore.Core.IMousepad.Set(Corale.Colore.Razer.Mousepad.Effects.Wave)">
            <summary>
            Sets a wave effect on the mouse pad.
            </summary>
            <param name="effect">An instance of the <see cref="T:Corale.Colore.Razer.Mousepad.Effects.Wave" /> struct.</param>
        </member>
        <member name="M:Corale.Colore.Core.IMousepad.Set(Corale.Colore.Razer.Mousepad.Effects.Custom)">
            <summary>
            Sets a custom effect on the mouse pad.
            </summary>
            <param name="effect">An instance of the <see cref="T:Corale.Colore.Razer.Mousepad.Effects.Custom" /> struct.</param>
        </member>
        <member name="M:Corale.Colore.Core.IMousepad.Set(Corale.Colore.Razer.Mousepad.Effects.Effect)">
            <summary>
            Sets an effect without any parameters.
            Currently, this only works for the <see cref="F:Corale.Colore.Razer.Mousepad.Effects.Effect.None" /> effect.
            </summary>
            <param name="effect">Effect options.</param>
        </member>
        <member name="M:Corale.Colore.Core.IMousepad.SetBreathing(Corale.Colore.Razer.Mousepad.Effects.Breathing)">
            <summary>
            Sets a breathing effect on the mouse pad.
            </summary>
            <param name="effect">An instance of the <see cref="T:Corale.Colore.Razer.Mousepad.Effects.Breathing" /> struct.</param>
        </member>
        <member name="M:Corale.Colore.Core.IMousepad.SetBreathing(Corale.Colore.Core.Color,Corale.Colore.Core.Color)">
            <summary>
            Sets a breathing effect on the mouse pad.
            </summary>
            <param name="first">First color to breathe into.</param>
            <param name="second">Second color to breathe into.</param>
        </member>
        <member name="M:Corale.Colore.Core.IMousepad.SetBreathing">
            <summary>
            Sets an effect on the mouse pad that causes
            it to breathe between random colors.
            </summary>
        </member>
        <member name="M:Corale.Colore.Core.IMousepad.SetStatic(Corale.Colore.Razer.Mousepad.Effects.Static)">
            <summary>
            Sets a static color effect on the mouse pad.
            </summary>
            <param name="effect">An instance of the <see cref="T:Corale.Colore.Razer.Mousepad.Effects.Static" /> struct.</param>
        </member>
        <member name="M:Corale.Colore.Core.IMousepad.SetStatic(Corale.Colore.Core.Color)">
            <summary>
            Sets a static color effect on the mouse pad.
            </summary>
            <param name="color">Color to set.</param>
        </member>
        <member name="M:Corale.Colore.Core.IMousepad.SetWave(Corale.Colore.Razer.Mousepad.Effects.Wave)">
            <summary>
            Sets a wave effect on the mouse pad.
            </summary>
            <param name="effect">An instance of the <see cref="T:Corale.Colore.Razer.Mousepad.Effects.Wave" /> struct.</param>
        </member>
        <member name="M:Corale.Colore.Core.IMousepad.SetWave(Corale.Colore.Razer.Mousepad.Effects.Direction)">
            <summary>
            Sets a wave effect on the mouse pad.
            </summary>
            <param name="direction">Direction of the wave.</param>
        </member>
        <member name="M:Corale.Colore.Core.IMousepad.SetCustom(Corale.Colore.Razer.Mousepad.Effects.Custom)">
            <summary>
            Sets a custom effect on the mouse pad.
            </summary>
            <param name="effect">An instance of the <see cref="T:Corale.Colore.Razer.Mousepad.Effects.Custom" /> struct.</param>
        </member>
        <member name="M:Corale.Colore.Core.IMousepad.SetEffect(Corale.Colore.Razer.Mousepad.Effects.Effect)">
            <summary>
            Sets an effect without any parameters.
            Currently, this only works for the <see cref="F:Corale.Colore.Razer.Mousepad.Effects.Effect.None" /> effect.
            </summary>
            <param name="effect">Effect options.</param>
        </member>
        <member name="T:Corale.Colore.Core.Keyboard">
            <summary>
            Class for interacting with a Chroma keyboard.
            </summary>
            <summary>
            Class for interacting with a Chroma keyboard.
            </summary>
        </member>
        <member name="M:Corale.Colore.Core.Keyboard.Set(Corale.Colore.Razer.Keyboard.Effects.Breathing)">
            <summary>
            Sets a breathing effect on the keyboard.
            </summary>
            <param name="effect">Effect options.</param>
        </member>
        <member name="M:Corale.Colore.Core.Keyboard.Set(Corale.Colore.Core.Color,Corale.Colore.Core.Color)">
            <summary>
            Sets a breathing effect on the keyboard, fading between the
            two specified colors.
            </summary>
            <param name="first">Color to start from.</param>
            <param name="second">Color to reach, before going back to <paramref name="first" />.</param>
        </member>
        <member name="M:Corale.Colore.Core.Keyboard.Set(Corale.Colore.Core.Color,Corale.Colore.Razer.Keyboard.Effects.Duration)">
            <summary>
            Sets a reactive effect on the keyboard with the specified
            color and duration.
            </summary>
            <param name="color">Color to emit on key press.</param>
            <param name="duration">How long to illuminate the key after being pressed.</param>
        </member>
        <member name="M:Corale.Colore.Core.Keyboard.Set(Corale.Colore.Core.Color[][])">
            <summary>
            Sets a custom grid effect on the keyboard using
            a two dimensional array of color values.
            </summary>
            <param name="colors">The grid of colors to use.</param>
            <remarks>
            The passed in arrays cannot have more than <see cref="F:Corale.Colore.Razer.Keyboard.Constants.MaxRows" /> rows and
            not more than <see cref="F:Corale.Colore.Razer.Keyboard.Constants.MaxColumns" /> columns in any row.
            <para />
            This will overwrite the internal <see cref="T:Corale.Colore.Razer.Keyboard.Effects.Custom" />
            struct in the <see cref="T:Corale.Colore.Core.Keyboard" /> class.
            </remarks>
        </member>
        <member name="M:Corale.Colore.Core.Keyboard.Set(Corale.Colore.Razer.Keyboard.Effects.Custom)">
            <summary>
            Sets a custom grid effect on the keyboard.
            </summary>
            <param name="effect">Effect options.</param>
            <remarks>
            This will overwrite the current internal <see cref="T:Corale.Colore.Razer.Keyboard.Effects.Custom" />
            struct in the <see cref="T:Corale.Colore.Core.Keyboard" /> class.
            </remarks>
        </member>
        <member name="M:Corale.Colore.Core.Keyboard.Set(Corale.Colore.Razer.Keyboard.Effects.Direction)">
            <summary>
            Sets a wave effect on the keyboard in the specified direction.
            </summary>
            <param name="direction">Direction of the wave.</param>
        </member>
        <member name="M:Corale.Colore.Core.Keyboard.Set(Corale.Colore.Razer.Keyboard.Effects.Effect)">
            <summary>
            Sets an effect without any parameters.
            Currently, this only works for the <see cref="F:Corale.Colore.Razer.Keyboard.Effects.Effect.None" /> and <see cref="F:Corale.Colore.Razer.Keyboard.Effects.Effect.SpectrumCycling" /> effects.
            </summary>
            <param name="effect">Effect options.</param>
        </member>
        <member name="M:Corale.Colore.Core.Keyboard.Set(Corale.Colore.Core.Size,Corale.Colore.Core.Size,Corale.Colore.Core.Color,System.Boolean)">
            <summary>
            Sets the color on a specific row and column on the keyboard grid.
            </summary>
            <param name="row">Row to set, between 0 and <see cref="F:Corale.Colore.Razer.Keyboard.Constants.MaxRows" /> (exclusive upper-bound).</param>
            <param name="column">Column to set, between 0 and <see cref="F:Corale.Colore.Razer.Keyboard.Constants.MaxColumns" /> (exclusive upper-bound).</param>
            <param name="color">Color to set.</param>
            <param name="clear">Whether or not to clear the existing colors before setting this one.</param>
            <exception cref="T:System.ArgumentException">Thrown if the row or column parameters are outside the valid ranges.</exception>
        </member>
        <member name="M:Corale.Colore.Core.Keyboard.Set(Corale.Colore.Razer.Keyboard.Key,Corale.Colore.Core.Color,System.Boolean)">
            <summary>
            Sets the color of a specific key on the keyboard.
            </summary>
            <param name="key">Key to modify.</param>
            <param name="color">Color to set.</param>
            <param name="clear">If true, the keyboard will first be cleared before setting the key.</param>
        </member>
        <member name="M:Corale.Colore.Core.Keyboard.Set(Corale.Colore.Core.Color,Corale.Colore.Razer.Keyboard.Key,Corale.Colore.Razer.Keyboard.Key[])">
            <summary>
            Sets the specified color on a set of keys.
            </summary>
            <param name="color">The <see cref="T:Corale.Colore.Core.Color" /> to apply.</param>
            <param name="key">First key to change.</param>
            <param name="keys">Additional keys that should also have the color applied.</param>
        </member>
        <member name="M:Corale.Colore.Core.Keyboard.Set(System.Collections.Generic.IEnumerable{Corale.Colore.Razer.Keyboard.Key},Corale.Colore.Core.Color,System.Boolean)">
            <summary>
            Sets a color on a collection of keys.
            </summary>
            <param name="keys">The keys which should have their color changed.</param>
            <param name="color">The <see cref="T:Corale.Colore.Core.Color" /> to apply.</param>
            <param name="clear">
            If <c>true</c>, the keyboard keys will be cleared before
            applying the new colors.
            </param>
        </member>
        <member name="M:Corale.Colore.Core.Keyboard.Set(Corale.Colore.Razer.Keyboard.Effects.Reactive)">
            <summary>
            Sets a reactive effect on the keyboard.
            </summary>
            <param name="effect">Effect options.</param>
        </member>
        <member name="M:Corale.Colore.Core.Keyboard.Set(Corale.Colore.Razer.Keyboard.Effects.Static)">
            <summary>
            Sets a static color on the keyboard.
            </summary>
            <param name="effect">Effect options.</param>
        </member>
        <member name="M:Corale.Colore.Core.Keyboard.Set(Corale.Colore.Razer.Keyboard.Effects.Wave)">
            <summary>
            Sets a wave effect on the keyboard.
            </summary>
            <param name="effect">Effect options.</param>
        </member>
        <member name="F:Corale.Colore.Core.Keyboard.Log">
            <summary>
            Logger instance for this class.
            </summary>
        </member>
        <member name="F:Corale.Colore.Core.Keyboard._instance">
            <summary>
            Holds the application-wide instance of the <see cref="T:Corale.Colore.Core.Keyboard" /> class.
            </summary>
        </member>
        <member name="F:Corale.Colore.Core.Keyboard._grid">
            <summary>
            Grid struct used for the helper methods.
            </summary>
        </member>
        <member name="M:Corale.Colore.Core.Keyboard.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Corale.Colore.Core.Keyboard" /> class from being created.
            </summary>
        </member>
        <member name="P:Corale.Colore.Core.Keyboard.Instance">
            <summary>
            Gets the application-wide instance of the <see cref="T:Corale.Colore.Core.IKeyboard" /> interface.
            </summary>
        </member>
        <member name="P:Corale.Colore.Core.Keyboard.Item(Corale.Colore.Razer.Keyboard.Key)">
            <summary>
            Gets or sets the <see cref="T:Corale.Colore.Core.Color" /> for a specific <see cref="T:Corale.Colore.Razer.Keyboard.Key" /> on the keyboard.
            </summary>
            <param name="key">The key to access.</param>
            <returns>The color currently set for the specified key.</returns>
        </member>
        <member name="P:Corale.Colore.Core.Keyboard.Item(Corale.Colore.Core.Size,Corale.Colore.Core.Size)">
            <summary>
            Gets or sets the <see cref="T:Corale.Colore.Core.Color" /> for a specific row and column on the
            keyboard grid.
            </summary>
            <param name="row">Row to query, between 1 and <see cref="F:Corale.Colore.Razer.Keyboard.Constants.MaxRows" />.</param>
            <param name="column">Column to query, between 1 and <see cref="F:Corale.Colore.Razer.Keyboard.Constants.MaxColumns" />.</param>
            <returns>The color currently set on the specified position.</returns>
        </member>
        <member name="M:Corale.Colore.Core.Keyboard.IsSet(Corale.Colore.Razer.Keyboard.Key)">
            <summary>
            Returns whether a certain key has had a custom color set.
            </summary>
            <param name="key">Key to check.</param>
            <returns><c>true</c> if the key has a color set, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Corale.Colore.Core.Keyboard.SetBreathing(Corale.Colore.Razer.Keyboard.Effects.Breathing)">
            <summary>
            Sets a breathing effect on the keyboard.
            </summary>
            <param name="effect">Effect options.</param>
        </member>
        <member name="M:Corale.Colore.Core.Keyboard.SetAll(Corale.Colore.Core.Color)">
            <summary>
            Sets the color of all keys on the keyboard.
            </summary>
            <param name="color">Color to set.</param>
        </member>
        <member name="M:Corale.Colore.Core.Keyboard.SetBreathing(Corale.Colore.Core.Color,Corale.Colore.Core.Color)">
            <summary>
            Sets a breathing effect on the keyboard, fading between the
            two specified colors.
            </summary>
            <param name="first">Color to start from.</param>
            <param name="second">Color to reach, before going back to <paramref name="first" />.</param>
        </member>
        <member name="M:Corale.Colore.Core.Keyboard.SetReactive(Corale.Colore.Core.Color,Corale.Colore.Razer.Keyboard.Effects.Duration)">
            <summary>
            Sets a reactive effect on the keyboard with the specified
            color and duration.
            </summary>
            <param name="color">Color to emit on key press.</param>
            <param name="duration">How long to illuminate the key after being pressed.</param>
        </member>
        <member name="M:Corale.Colore.Core.Keyboard.SetGrid(Corale.Colore.Core.Color[][])">
            <summary>
            Sets a custom grid effect on the keyboard using
            a two dimensional array of color values.
            </summary>
            <param name="colors">The grid of colors to use.</param>
            <remarks>
            The passed in arrays cannot have more than <see cref="F:Corale.Colore.Razer.Keyboard.Constants.MaxRows" /> rows and
            not more than <see cref="F:Corale.Colore.Razer.Keyboard.Constants.MaxColumns" /> columns in any row.
            <para />
            This will overwrite the internal <see cref="T:Corale.Colore.Razer.Keyboard.Effects.Custom" />
            struct in the <see cref="T:Corale.Colore.Core.Keyboard" /> class.
            </remarks>
        </member>
        <member name="M:Corale.Colore.Core.Keyboard.SetCustom(Corale.Colore.Razer.Keyboard.Effects.Custom)">
            <summary>
            Sets a custom grid effect on the keyboard.
            </summary>
            <param name="effect">Effect options.</param>
            <remarks>
            This will overwrite the current internal <see cref="T:Corale.Colore.Razer.Keyboard.Effects.Custom" />
            struct in the <see cref="T:Corale.Colore.Core.Keyboard" /> class.
            </remarks>
        </member>
        <member name="M:Corale.Colore.Core.Keyboard.SetWave(Corale.Colore.Razer.Keyboard.Effects.Direction)">
            <summary>
            Sets a wave effect on the keyboard in the specified direction.
            </summary>
            <param name="direction">Direction of the wave.</param>
        </member>
        <member name="M:Corale.Colore.Core.Keyboard.SetEffect(Corale.Colore.Razer.Keyboard.Effects.Effect)">
            <summary>
            Sets an effect without any parameters.
            Currently, this only works for the <see cref="F:Corale.Colore.Razer.Keyboard.Effects.Effect.None" /> and <see cref="F:Corale.Colore.Razer.Keyboard.Effects.Effect.SpectrumCycling" /> effects.
            </summary>
            <param name="effect">Effect options.</param>
        </member>
        <member name="M:Corale.Colore.Core.Keyboard.SetPosition(Corale.Colore.Core.Size,Corale.Colore.Core.Size,Corale.Colore.Core.Color,System.Boolean)">
            <summary>
            Sets the color on a specific row and column on the keyboard grid.
            </summary>
            <param name="row">Row to set, between 0 and <see cref="F:Corale.Colore.Razer.Keyboard.Constants.MaxRows" /> (exclusive upper-bound).</param>
            <param name="column">Column to set, between 0 and <see cref="F:Corale.Colore.Razer.Keyboard.Constants.MaxColumns" /> (exclusive upper-bound).</param>
            <param name="color">Color to set.</param>
            <param name="clear">Whether or not to clear the existing colors before setting this one.</param>
            <exception cref="T:System.ArgumentException">Thrown if the row or column parameters are outside the valid ranges.</exception>
        </member>
        <member name="M:Corale.Colore.Core.Keyboard.SetKey(Corale.Colore.Razer.Keyboard.Key,Corale.Colore.Core.Color,System.Boolean)">
            <summary>
            Sets the color of a specific key on the keyboard.
            </summary>
            <param name="key">Key to modify.</param>
            <param name="color">Color to set.</param>
            <param name="clear">If true, the keyboard will first be cleared before setting the key.</param>
        </member>
        <member name="M:Corale.Colore.Core.Keyboard.SetKeys(Corale.Colore.Core.Color,Corale.Colore.Razer.Keyboard.Key,Corale.Colore.Razer.Keyboard.Key[])">
            <summary>
            Sets the specified color on a set of keys.
            </summary>
            <param name="color">The <see cref="T:Corale.Colore.Core.Color" /> to apply.</param>
            <param name="key">First key to change.</param>
            <param name="keys">Additional keys that should also have the color applied.</param>
        </member>
        <member name="M:Corale.Colore.Core.Keyboard.SetKeys(System.Collections.Generic.IEnumerable{Corale.Colore.Razer.Keyboard.Key},Corale.Colore.Core.Color,System.Boolean)">
            <summary>
            Sets a color on a collection of keys.
            </summary>
            <param name="keys">The keys which should have their color changed.</param>
            <param name="color">The <see cref="T:Corale.Colore.Core.Color" /> to apply.</param>
            <param name="clear">
            If <c>true</c>, the keyboard keys will be cleared before
            applying the new colors.
            </param>
        </member>
        <member name="M:Corale.Colore.Core.Keyboard.SetReactive(Corale.Colore.Razer.Keyboard.Effects.Reactive)">
            <summary>
            Sets a reactive effect on the keyboard.
            </summary>
            <param name="effect">Effect options.</param>
        </member>
        <member name="M:Corale.Colore.Core.Keyboard.SetStatic(Corale.Colore.Razer.Keyboard.Effects.Static)">
            <summary>
            Sets a static color on the keyboard.
            </summary>
            <param name="effect">Effect options.</param>
        </member>
        <member name="M:Corale.Colore.Core.Keyboard.SetWave(Corale.Colore.Razer.Keyboard.Effects.Wave)">
            <summary>
            Sets a wave effect on the keyboard.
            </summary>
            <param name="effect">Effect options.</param>
        </member>
        <member name="T:Corale.Colore.Core.Keypad">
            <summary>
            Class for interacting with a Chroma keypad.
            </summary>
            <summary>
            Class for interacting with a Chroma keypad.
            </summary>
        </member>
        <member name="M:Corale.Colore.Core.Keypad.Set(Corale.Colore.Razer.Keypad.Effects.Effect)">
            <summary>
            Sets an effect without any parameters.
            Currently, this only works for the <see cref="F:Corale.Colore.Razer.Keypad.Effects.Effect.None" /> effect.
            </summary>
            <param name="effect">Effect options.</param>
        </member>
        <member name="M:Corale.Colore.Core.Keypad.Set(Corale.Colore.Razer.Keypad.Effects.Breathing)">
            <summary>
            Sets a <see cref="T:Corale.Colore.Razer.Keypad.Effects.Breathing" /> effect on the keypad.
            </summary>
            <param name="effect">An instance of the <see cref="T:Corale.Colore.Razer.Keypad.Effects.Breathing" /> struct.</param>
        </member>
        <member name="M:Corale.Colore.Core.Keypad.Set(Corale.Colore.Razer.Keypad.Effects.Custom)">
            <summary>
            Sets a <see cref="T:Corale.Colore.Razer.Keypad.Effects.Custom" /> effect on the keypad.
            </summary>
            <param name="effect">An instance of the <see cref="T:Corale.Colore.Razer.Keypad.Effects.Custom" /> struct.</param>
        </member>
        <member name="M:Corale.Colore.Core.Keypad.Set(Corale.Colore.Razer.Keypad.Effects.Reactive)">
            <summary>
            Sets a <see cref="T:Corale.Colore.Razer.Keypad.Effects.Reactive" /> effect on the keypad.
            </summary>
            <param name="effect">An instance of the <see cref="T:Corale.Colore.Razer.Keypad.Effects.Reactive" /> struct.</param>
        </member>
        <member name="M:Corale.Colore.Core.Keypad.Set(Corale.Colore.Razer.Keypad.Effects.Static)">
            <summary>
            Sets a <see cref="T:Corale.Colore.Razer.Keypad.Effects.Static" /> effect on the keypad.
            </summary>
            <param name="effect">An instance of the <see cref="T:Corale.Colore.Razer.Keypad.Effects.Static" /> struct.</param>
        </member>
        <member name="M:Corale.Colore.Core.Keypad.Set(Corale.Colore.Razer.Keypad.Effects.Wave)">
            <summary>
            Sets a <see cref="T:Corale.Colore.Razer.Keypad.Effects.Wave" /> effect on the keypad.
            </summary>
            <param name="effect">An instance of the <see cref="T:Corale.Colore.Razer.Keypad.Effects.Wave" /> struct.</param>
        </member>
        <member name="F:Corale.Colore.Core.Keypad.Log">
            <summary>
            Logger instance for this class.
            </summary>
        </member>
        <member name="F:Corale.Colore.Core.Keypad._instance">
            <summary>
            Singleton instance of this class.
            </summary>
        </member>
        <member name="F:Corale.Colore.Core.Keypad._custom">
            <summary>
            Internal instance of a <see cref="T:Corale.Colore.Razer.Keypad.Effects.Custom" /> struct used for
            the indexer.
            </summary>
        </member>
        <member name="M:Corale.Colore.Core.Keypad.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Corale.Colore.Core.Keypad" /> class from being created.
            </summary>
        </member>
        <member name="P:Corale.Colore.Core.Keypad.Instance">
            <summary>
            Gets the application-wide instance of the <see cref="T:Corale.Colore.Core.IKeypad" /> interface.
            </summary>
        </member>
        <member name="P:Corale.Colore.Core.Keypad.Item(System.Int32,System.Int32)">
            <summary>
            Gets or sets a color at the specified position in the keypad's
            grid layout.
            </summary>
            <param name="row">The row to access (between <c>0</c> and <see cref="F:Corale.Colore.Razer.Keypad.Constants.MaxRows" />).</param>
            <param name="column">The column to access (between <c>0</c> and <see cref="F:Corale.Colore.Razer.Keypad.Constants.MaxColumns" />).</param>
            <returns>The <see cref="T:Corale.Colore.Core.Color" /> at the specified position.</returns>
        </member>
        <member name="M:Corale.Colore.Core.Keypad.IsSet(System.Int32,System.Int32)">
            <summary>
            Returns whether a key has had a custom color set.
            </summary>
            <param name="row">The row to query.</param>
            <param name="column">The column to query.</param>
            <returns><c>true</c> if the position has a color set that is not black, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Corale.Colore.Core.Keypad.SetAll(Corale.Colore.Core.Color)">
            <summary>
            Sets the color of all components on this device.
            </summary>
            <param name="color">Color to set.</param>
        </member>
        <member name="M:Corale.Colore.Core.Keypad.SetEffect(Corale.Colore.Razer.Keypad.Effects.Effect)">
            <summary>
            Sets an effect without any parameters.
            Currently, this only works for the <see cref="F:Corale.Colore.Razer.Keypad.Effects.Effect.None" /> effect.
            </summary>
            <param name="effect">Effect options.</param>
        </member>
        <member name="M:Corale.Colore.Core.Keypad.SetBreathing(Corale.Colore.Razer.Keypad.Effects.Breathing)">
            <summary>
            Sets a <see cref="T:Corale.Colore.Razer.Keypad.Effects.Breathing" /> effect on the keypad.
            </summary>
            <param name="effect">An instance of the <see cref="T:Corale.Colore.Razer.Keypad.Effects.Breathing" /> struct.</param>
        </member>
        <member name="M:Corale.Colore.Core.Keypad.SetBreathing(Corale.Colore.Core.Color,Corale.Colore.Core.Color)">
            <summary>
            Sets a <see cref="T:Corale.Colore.Razer.Keypad.Effects.Breathing" /> effect on the keypad
            using the specified <see cref="T:Corale.Colore.Core.Color" />.
            </summary>
            <param name="first">The first color to breathe into.</param>
            <param name="second">Second color to breathe into.</param>
        </member>
        <member name="M:Corale.Colore.Core.Keypad.SetBreathing">
            <summary>
            Sets an effect on the keypad to breathe
            between randomly chosen colors.
            </summary>
        </member>
        <member name="M:Corale.Colore.Core.Keypad.SetCustom(Corale.Colore.Razer.Keypad.Effects.Custom)">
            <summary>
            Sets a <see cref="T:Corale.Colore.Razer.Keypad.Effects.Custom" /> effect on the keypad.
            </summary>
            <param name="effect">An instance of the <see cref="T:Corale.Colore.Razer.Keypad.Effects.Custom" /> struct.</param>
        </member>
        <member name="M:Corale.Colore.Core.Keypad.SetReactive(Corale.Colore.Razer.Keypad.Effects.Reactive)">
            <summary>
            Sets a <see cref="T:Corale.Colore.Razer.Keypad.Effects.Reactive" /> effect on the keypad.
            </summary>
            <param name="effect">An instance of the <see cref="T:Corale.Colore.Razer.Keypad.Effects.Reactive" /> struct.</param>
        </member>
        <member name="M:Corale.Colore.Core.Keypad.SetReactive(Corale.Colore.Razer.Keypad.Effects.Duration,Corale.Colore.Core.Color)">
            <summary>
            Sets a <see cref="T:Corale.Colore.Razer.Keypad.Effects.Reactive" /> effect on the keypad
            with the specified parameters.
            </summary>
            <param name="duration">Duration of the effect.</param>
            <param name="color">Color of the effect.</param>
        </member>
        <member name="M:Corale.Colore.Core.Keypad.SetStatic(Corale.Colore.Razer.Keypad.Effects.Static)">
            <summary>
            Sets a <see cref="T:Corale.Colore.Razer.Keypad.Effects.Static" /> effect on the keypad.
            </summary>
            <param name="effect">An instance of the <see cref="T:Corale.Colore.Razer.Keypad.Effects.Static" /> struct.</param>
        </member>
        <member name="M:Corale.Colore.Core.Keypad.SetStatic(Corale.Colore.Core.Color)">
            <summary>
            Sets a <see cref="T:Corale.Colore.Razer.Keypad.Effects.Static" /> effect on the keypad.
            </summary>
            <param name="color">Color of the effect.</param>
        </member>
        <member name="M:Corale.Colore.Core.Keypad.SetWave(Corale.Colore.Razer.Keypad.Effects.Wave)">
            <summary>
            Sets a <see cref="T:Corale.Colore.Razer.Keypad.Effects.Wave" /> effect on the keypad.
            </summary>
            <param name="effect">An instance of the <see cref="T:Corale.Colore.Razer.Keypad.Effects.Wave" /> struct.</param>
        </member>
        <member name="M:Corale.Colore.Core.Keypad.SetWave(Corale.Colore.Razer.Keypad.Effects.Direction)">
            <summary>
            Sets a <see cref="T:Corale.Colore.Razer.Keypad.Effects.Wave" /> effect on the keypad.
            </summary>
            <param name="direction">Direction of the wave.</param>
        </member>
        <member name="T:Corale.Colore.Core.Mouse">
            <summary>
            Class for interacting with a Chroma mouse.
            </summary>
            <summary>
            Class for interacting with a Chroma mouse.
            </summary>
        </member>
        <member name="M:Corale.Colore.Core.Mouse.Set(Corale.Colore.Razer.Mouse.Led,Corale.Colore.Core.Color)">
            <summary>
            Sets the color of a specific LED on the mouse.
            </summary>
            <param name="led">Which LED to modify.</param>
            <param name="color">Color to set.</param>
        </member>
        <member name="M:Corale.Colore.Core.Mouse.Set(Corale.Colore.Razer.Mouse.Effects.Effect)">
            <summary>
            Sets an effect without any parameters.
            Currently, this only works for the <see cref="F:Corale.Colore.Razer.Mouse.Effects.Effect.None" /> effect.
            </summary>
            <param name="effect">Effect options.</param>
        </member>
        <member name="M:Corale.Colore.Core.Mouse.Set(Corale.Colore.Razer.Mouse.Effects.Breathing)">
            <summary>
            Sets a breathing effect on the mouse.
            </summary>
            <param name="effect">An instance of the <see cref="T:Corale.Colore.Razer.Mouse.Effects.Breathing" /> effect.</param>
        </member>
        <member name="M:Corale.Colore.Core.Mouse.Set(Corale.Colore.Razer.Mouse.Effects.Static)">
            <summary>
            Sets a static color on the mouse.
            </summary>
            <param name="effect">An instance of the <see cref="T:Corale.Colore.Razer.Mouse.Effects.Static" /> effect.</param>
        </member>
        <member name="M:Corale.Colore.Core.Mouse.Set(Corale.Colore.Razer.Mouse.Effects.Blinking)">
            <summary>
            Starts a blinking effect on the specified LED.
            </summary>
            <param name="effect">An instance of the <see cref="T:Corale.Colore.Razer.Mouse.Effects.Blinking" /> effect.</param>
        </member>
        <member name="M:Corale.Colore.Core.Mouse.Set(Corale.Colore.Razer.Mouse.Effects.Reactive)">
            <summary>
            Sets a reactive effect on the mouse.
            </summary>
            <param name="effect">Effect options struct.</param>
        </member>
        <member name="M:Corale.Colore.Core.Mouse.Set(Corale.Colore.Razer.Mouse.Effects.SpectrumCycling)">
            <summary>
            Sets a spectrum cycling effect on the mouse.
            </summary>
            <param name="effect">Effect options struct.</param>
        </member>
        <member name="M:Corale.Colore.Core.Mouse.Set(Corale.Colore.Razer.Mouse.Effects.Wave)">
            <summary>
            Sets a wave effect on the mouse.
            </summary>
            <param name="effect">Effect options struct.</param>
        </member>
        <member name="F:Corale.Colore.Core.Mouse.Log">
            <summary>
            Logger instance for this class.
            </summary>
        </member>
        <member name="F:Corale.Colore.Core.Mouse._instance">
            <summary>
            Holds the application-wide instance of the <see cref="T:Corale.Colore.Core.IMouse" /> interface.
            </summary>
        </member>
        <member name="F:Corale.Colore.Core.Mouse._custom">
            <summary>
            Internal instance of a <see cref="T:Corale.Colore.Razer.Mouse.Effects.Custom" /> struct.
            </summary>
        </member>
        <member name="M:Corale.Colore.Core.Mouse.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Corale.Colore.Core.Mouse" /> class from being created.
            </summary>
        </member>
        <member name="P:Corale.Colore.Core.Mouse.Instance">
            <summary>
            Gets the application-wide instance of the <see cref="T:Corale.Colore.Core.IMouse" /> interface.
            </summary>
        </member>
        <member name="M:Corale.Colore.Core.Mouse.SetLed(Corale.Colore.Razer.Mouse.Led,Corale.Colore.Core.Color)">
            <summary>
            Sets the color of a specific LED on the mouse.
            </summary>
            <param name="led">Which LED to modify.</param>
            <param name="color">Color to set.</param>
        </member>
        <member name="M:Corale.Colore.Core.Mouse.SetEffect(Corale.Colore.Razer.Mouse.Effects.Effect)">
            <summary>
            Sets an effect without any parameters.
            Currently, this only works for the <see cref="F:Corale.Colore.Razer.Mouse.Effects.Effect.None" /> effect.
            </summary>
            <param name="effect">Effect options.</param>
        </member>
        <member name="M:Corale.Colore.Core.Mouse.SetBreathing(Corale.Colore.Razer.Mouse.Effects.Breathing)">
            <summary>
            Sets a breathing effect on the mouse.
            </summary>
            <param name="effect">An instance of the <see cref="T:Corale.Colore.Razer.Mouse.Effects.Breathing" /> effect.</param>
        </member>
        <member name="M:Corale.Colore.Core.Mouse.SetBreathing(Corale.Colore.Core.Color,Corale.Colore.Core.Color,Corale.Colore.Razer.Mouse.Led)">
            <summary>
            Sets an effect on the mouse that causes it to breathe
            between two different colors, fading to black in-between each one.
            </summary>
            <param name="first">First color to breathe into.</param>
            <param name="second">Second color to breathe into.</param>
            <param name="led">The LED(s) on which to apply the effect.</param>
        </member>
        <member name="M:Corale.Colore.Core.Mouse.SetBreathing(Corale.Colore.Core.Color,Corale.Colore.Razer.Mouse.Led)">
            <summary>
            Sets an effect on the mouse that causes it to breathe
            a single color. The specified color will fade in
            on the mouse, then fade to black, and repeat.
            </summary>
            <param name="color">The color to breathe.</param>
            <param name="led">The LED(s) on which to apply the effect.</param>
        </member>
        <member name="M:Corale.Colore.Core.Mouse.SetBreathing(Corale.Colore.Razer.Mouse.Led)">
            <summary>
            Instructs the mouse to breathe random colors.
            </summary>
            <param name="led">The LED(s) on which to apply the effect.</param>
        </member>
        <member name="M:Corale.Colore.Core.Mouse.SetStatic(Corale.Colore.Razer.Mouse.Effects.Static)">
            <summary>
            Sets a static color on the mouse.
            </summary>
            <param name="effect">An instance of the <see cref="T:Corale.Colore.Razer.Mouse.Effects.Static" /> effect.</param>
        </member>
        <member name="M:Corale.Colore.Core.Mouse.SetStatic(Corale.Colore.Core.Color,Corale.Colore.Razer.Mouse.Led)">
            <summary>
            Sets a static effect on the mouse.
            </summary>
            <param name="color">The color to use.</param>
            <param name="led">Which LED(s) to affect.</param>
        </member>
        <member name="M:Corale.Colore.Core.Mouse.SetBlinking(Corale.Colore.Razer.Mouse.Effects.Blinking)">
            <summary>
            Starts a blinking effect on the specified LED.
            </summary>
            <param name="effect">An instance of the <see cref="T:Corale.Colore.Razer.Mouse.Effects.Blinking" /> effect.</param>
        </member>
        <member name="M:Corale.Colore.Core.Mouse.SetBlinking(Corale.Colore.Core.Color,Corale.Colore.Razer.Mouse.Led)">
            <summary>
            Starts a blinking effect on the mouse.
            </summary>
            <param name="color">The color to blink with.</param>
            <param name="led">The LED(s) to affect.</param>
        </member>
        <member name="M:Corale.Colore.Core.Mouse.SetReactive(Corale.Colore.Razer.Mouse.Effects.Reactive)">
            <summary>
            Sets a reactive effect on the mouse.
            </summary>
            <param name="effect">Effect options struct.</param>
        </member>
        <member name="M:Corale.Colore.Core.Mouse.SetReactive(Corale.Colore.Razer.Mouse.Effects.Duration,Corale.Colore.Core.Color,Corale.Colore.Razer.Mouse.Led)">
            <summary>
            Sets a reactive effect on the mouse.
            </summary>
            <param name="duration">How long the effect should last.</param>
            <param name="color">The color to react with.</param>
            <param name="led">Which LED(s) to affect.</param>
        </member>
        <member name="M:Corale.Colore.Core.Mouse.SetSpectrumCycling(Corale.Colore.Razer.Mouse.Effects.SpectrumCycling)">
            <summary>
            Sets a spectrum cycling effect on the mouse.
            </summary>
            <param name="effect">Effect options struct.</param>
        </member>
        <member name="M:Corale.Colore.Core.Mouse.SetSpectrumCycling(Corale.Colore.Razer.Mouse.Led)">
            <summary>
            Sets a spectrum cycling effect on the mouse.
            </summary>
            <param name="led">The LED(s) to affect.</param>
        </member>
        <member name="M:Corale.Colore.Core.Mouse.SetWave(Corale.Colore.Razer.Mouse.Effects.Wave)">
            <summary>
            Sets a wave effect on the mouse.
            </summary>
            <param name="effect">Effect options struct.</param>
        </member>
        <member name="M:Corale.Colore.Core.Mouse.SetWave(Corale.Colore.Razer.Mouse.Effects.Direction)">
            <summary>
            Sets a wave effect on the mouse.
            </summary>
            <param name="direction">Direction of the wave.</param>
        </member>
        <member name="M:Corale.Colore.Core.Mouse.SetAll(Corale.Colore.Core.Color)">
            <summary>
            Sets the color of all LEDs on the mouse.
            </summary>
            <param name="color">Color to set.</param>
        </member>
        <member name="M:Corale.Colore.Core.Mouse.SetCustom(Corale.Colore.Razer.Mouse.Effects.Custom)">
            <summary>
            Sets a custom effect on the mouse.
            </summary>
            <param name="effect">An instance of the <see cref="T:Corale.Colore.Razer.Mouse.Effects.Custom" /> struct.</param>
        </member>
        <member name="T:Corale.Colore.Core.Mousepad">
            <summary>
            Class for interacting with a Chroma mouse pad.
            </summary>
            <summary>
            Class for interacting with a Chroma mouse pad.
            </summary>
        </member>
        <member name="M:Corale.Colore.Core.Mousepad.Set(Corale.Colore.Razer.Mousepad.Effects.Effect)">
            <summary>
            Sets an effect without any parameters.
            Currently, this only works for the <see cref="F:Corale.Colore.Razer.Mousepad.Effects.Effect.None" /> effect.
            </summary>
            <param name="effect">Effect options.</param>
        </member>
        <member name="M:Corale.Colore.Core.Mousepad.Set(Corale.Colore.Razer.Mousepad.Effects.Breathing)">
            <summary>
            Sets a breathing effect on the mouse pad.
            </summary>
            <param name="effect">An instance of the <see cref="T:Corale.Colore.Razer.Mousepad.Effects.Breathing" /> struct.</param>
        </member>
        <member name="M:Corale.Colore.Core.Mousepad.Set(Corale.Colore.Razer.Mousepad.Effects.Static)">
            <summary>
            Sets a static color effect on the mouse pad.
            </summary>
            <param name="effect">An instance of the <see cref="T:Corale.Colore.Razer.Mousepad.Effects.Static" /> struct.</param>
        </member>
        <member name="M:Corale.Colore.Core.Mousepad.Set(Corale.Colore.Razer.Mousepad.Effects.Wave)">
            <summary>
            Sets a wave effect on the mouse pad.
            </summary>
            <param name="effect">An instance of the <see cref="T:Corale.Colore.Razer.Mousepad.Effects.Wave" /> struct.</param>
        </member>
        <member name="M:Corale.Colore.Core.Mousepad.Set(Corale.Colore.Razer.Mousepad.Effects.Custom)">
            <summary>
            Sets a custom effect on the mouse pad.
            </summary>
            <param name="effect">An instance of the <see cref="T:Corale.Colore.Razer.Mousepad.Effects.Custom" /> struct.</param>
        </member>
        <member name="F:Corale.Colore.Core.Mousepad.Log">
            <summary>
            Logger instance for this class.
            </summary>
        </member>
        <member name="F:Corale.Colore.Core.Mousepad._instance">
            <summary>
            Singleton instance.
            </summary>
        </member>
        <member name="F:Corale.Colore.Core.Mousepad._custom">
            <summary>
            Internal <see cref="T:Corale.Colore.Razer.Mousepad.Effects.Custom" /> struct used for effects.
            </summary>
        </member>
        <member name="M:Corale.Colore.Core.Mousepad.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Corale.Colore.Core.Mousepad" /> class from being created.
            </summary>
        </member>
        <member name="P:Corale.Colore.Core.Mousepad.Instance">
            <summary>
            Gets the application-wide instance of the <see cref="T:Corale.Colore.Core.IMousepad" /> interface.
            </summary>
        </member>
        <member name="M:Corale.Colore.Core.Mousepad.SetAll(Corale.Colore.Core.Color)">
            <summary>
            Sets the color of all components on this device.
            </summary>
            <param name="color">Color to set.</param>
        </member>
        <member name="M:Corale.Colore.Core.Mousepad.SetEffect(Corale.Colore.Razer.Mousepad.Effects.Effect)">
            <summary>
            Sets an effect without any parameters.
            Currently, this only works for the <see cref="F:Corale.Colore.Razer.Mousepad.Effects.Effect.None" /> effect.
            </summary>
            <param name="effect">Effect options.</param>
        </member>
        <member name="M:Corale.Colore.Core.Mousepad.SetBreathing(Corale.Colore.Razer.Mousepad.Effects.Breathing)">
            <summary>
            Sets a breathing effect on the mouse pad.
            </summary>
            <param name="effect">An instance of the <see cref="T:Corale.Colore.Razer.Mousepad.Effects.Breathing" /> struct.</param>
        </member>
        <member name="M:Corale.Colore.Core.Mousepad.SetBreathing(Corale.Colore.Core.Color,Corale.Colore.Core.Color)">
            <summary>
            Sets a breathing effect on the mouse pad.
            </summary>
            <param name="first">First color to breathe into.</param>
            <param name="second">Second color to breathe into.</param>
        </member>
        <member name="M:Corale.Colore.Core.Mousepad.SetBreathing">
            <summary>
            Sets an effect on the mouse pad that causes
            it to breathe between random colors.
            </summary>
        </member>
        <member name="M:Corale.Colore.Core.Mousepad.SetStatic(Corale.Colore.Razer.Mousepad.Effects.Static)">
            <summary>
            Sets a static color effect on the mouse pad.
            </summary>
            <param name="effect">An instance of the <see cref="T:Corale.Colore.Razer.Mousepad.Effects.Static" /> struct.</param>
        </member>
        <member name="M:Corale.Colore.Core.Mousepad.SetStatic(Corale.Colore.Core.Color)">
            <summary>
            Sets a static color effect on the mouse pad.
            </summary>
            <param name="color">Color to set.</param>
        </member>
        <member name="M:Corale.Colore.Core.Mousepad.SetWave(Corale.Colore.Razer.Mousepad.Effects.Wave)">
            <summary>
            Sets a wave effect on the mouse pad.
            </summary>
            <param name="effect">An instance of the <see cref="T:Corale.Colore.Razer.Mousepad.Effects.Wave" /> struct.</param>
        </member>
        <member name="M:Corale.Colore.Core.Mousepad.SetWave(Corale.Colore.Razer.Mousepad.Effects.Direction)">
            <summary>
            Sets a wave effect on the mouse pad.
            </summary>
            <param name="direction">Direction of the wave.</param>
        </member>
        <member name="M:Corale.Colore.Core.Mousepad.SetCustom(Corale.Colore.Razer.Mousepad.Effects.Custom)">
            <summary>
            Sets a custom effect on the mouse pad.
            </summary>
            <param name="effect">An instance of the <see cref="T:Corale.Colore.Razer.Mousepad.Effects.Custom" /> struct.</param>
        </member>
        <member name="T:Corale.Colore.Core.IChroma">
            <summary>
            Interface for basic Chroma functionality.
            </summary>
        </member>
        <member name="E:Corale.Colore.Core.IChroma.ApplicationState">
            <summary>
            Raised when information about application state is received from messages.
            </summary>
            <remarks>
            Requires that application has registered for receiving messages with
            <see cref="M:Corale.Colore.Core.IChroma.Register(System.IntPtr)" /> and that Windows messages are being forwarded to
            Colore using <see cref="M:Corale.Colore.Core.IChroma.HandleMessage(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)" />.
            </remarks>
        </member>
        <member name="E:Corale.Colore.Core.IChroma.DeviceAccess">
            <summary>
            Raised when information about device access is received from messages.
            </summary>
            <remarks>
            Requires that application has registered for receiving messages with
            <see cref="M:Corale.Colore.Core.IChroma.Register(System.IntPtr)" /> and that Windows messages are being forwarded to
            Colore using <see cref="M:Corale.Colore.Core.IChroma.HandleMessage(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)" />.
            </remarks>
        </member>
        <member name="E:Corale.Colore.Core.IChroma.SdkSupport">
            <summary>
            Raised when information about SDK support is received from messages.
            </summary>
            <remarks>
            Requires that application has registered for receiving messages with
            <see cref="M:Corale.Colore.Core.IChroma.Register(System.IntPtr)" /> and that Windows messages are being forwarded to
            Colore using <see cref="M:Corale.Colore.Core.IChroma.HandleMessage(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)" />.
            </remarks>
        </member>
        <member name="P:Corale.Colore.Core.IChroma.Keyboard">
            <summary>
            Gets an instance of the <see cref="T:Corale.Colore.Core.IKeyboard" /> interface
            for interacting with a Razer Chroma keyboard.
            </summary>
        </member>
        <member name="P:Corale.Colore.Core.IChroma.Mouse">
            <summary>
            Gets an instance of the <see cref="T:Corale.Colore.Core.IMouse" /> interface
            for interacting with a Razer Chroma mouse.
            </summary>
        </member>
        <member name="P:Corale.Colore.Core.IChroma.Headset">
            <summary>
            Gets an instance of the <see cref="T:Corale.Colore.Core.IHeadset" /> interface
            for interacting with a Razer Chroma headset.
            </summary>
        </member>
        <member name="P:Corale.Colore.Core.IChroma.Mousepad">
            <summary>
            Gets an instance of the <see cref="T:Corale.Colore.Core.IMousepad" /> interface
            for interacting with a Razer Chroma mouse pad.
            </summary>
        </member>
        <member name="P:Corale.Colore.Core.IChroma.Keypad">
            <summary>
            Gets an instance of the <see cref="T:Corale.Colore.Core.IKeypad" /> interface
            for interacting with a Razer Chroma keypad.
            </summary>
        </member>
        <member name="M:Corale.Colore.Core.IChroma.Query(System.Guid)">
            <summary>
            Queries the SDK for information regarding a specific device.
            </summary>
            <param name="deviceId">The device ID to query for, valid IDs can be found in <see cref="T:Corale.Colore.Razer.Devices" />.</param>
            <returns>A struct with information regarding the device type and whether it's connected.</returns>
        </member>
        <member name="M:Corale.Colore.Core.IChroma.Get(System.Guid)">
            <summary>
            Gets an instance of <see cref="T:Corale.Colore.Core.IGenericDevice" /> for
            the device with the specified ID.
            </summary>
            <param name="deviceId">
            The <see cref="T:System.Guid" /> of the device to get,
            valid IDs can be found in <see cref="T:Corale.Colore.Razer.Devices" />.
            </param>
            <returns>An instance of <see cref="T:Corale.Colore.Core.IGenericDevice" />.</returns>
        </member>
        <member name="M:Corale.Colore.Core.IChroma.HandleMessage(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
            <summary>
            Handles a Windows message and fires the appropriate events.
            </summary>
            <param name="handle">The <c>HWnd</c> property of the Message struct.</param>
            <param name="msgId">The <c>Msg</c> property of the Message struct.</param>
            <param name="wParam">The <c>wParam</c> property of the Message struct.</param>
            <param name="lParam">The <c>lParam</c> property of the Message struct.</param>
            <returns><c>true</c> if the message was handled by Chroma, <c>false</c> otherwise (message was ignored).</returns>
            <remarks>Non-Chroma messages will be ignored.</remarks>
        </member>
        <member name="M:Corale.Colore.Core.IChroma.Register(System.IntPtr)">
            <summary>
            Registers to start receiving Chroma events.
            </summary>
            <param name="handle">Handle to the application Window that is running the message loop.</param>
            <remarks>
            Chroma events are sent using the Windows message API, as such, there has to be something handling
            Windows messages to receive them. Messages need to be passed to the message handler in Colore to
            be processed, as this cannot be automated.
            </remarks>
        </member>
        <member name="M:Corale.Colore.Core.IChroma.Unregister">
            <summary>
            Unregisters from receiving Chroma events.
            </summary>
        </member>
        <member name="M:Corale.Colore.Core.IChroma.SetAll(Corale.Colore.Core.Color)">
            <summary>
            Sets all Chroma devices to the specified <see cref="T:Corale.Colore.Core.Color" />.
            </summary>
            <param name="color">The <see cref="T:Corale.Colore.Core.Color" /> to set.</param>
        </member>
        <member name="T:Corale.Colore.Core.NativeWrapper">
            <summary>
            Helper class to more easily make calls to native Chroma SDK functions.
            </summary>
        </member>
        <member name="F:Corale.Colore.Core.NativeWrapper.Log">
            <summary>
            Logger instance for this class.
            </summary>
        </member>
        <member name="M:Corale.Colore.Core.NativeWrapper.CreateEffect(System.Guid,Corale.Colore.Razer.Effect,System.IntPtr)">
            <summary>
            Creates an effect for a device.
            </summary>
            <param name="device">The device to create the effect on.</param>
            <param name="effect">The type of effect to create.</param>
            <param name="param">Effect-specific parameter.</param>
            <returns>A <see cref="T:System.Guid" /> for the created effect.</returns>
            <seealso cref="M:Corale.Colore.Razer.NativeMethods.CreateEffect(System.Guid,Corale.Colore.Razer.Effect,System.IntPtr,System.Guid@)" />
        </member>
        <member name="M:Corale.Colore.Core.NativeWrapper.CreateKeyboardEffect(Corale.Colore.Razer.Keyboard.Effects.Effect,System.IntPtr)">
            <summary>
            Create keyboard effect.
            </summary>
            <param name="effect">The type of effect to create.</param>
            <param name="param">Context-sensitive effect parameter.</param>
            <returns>A <see cref="T:System.Guid" /> for the created effect.</returns>
            <seealso cref="M:Corale.Colore.Razer.NativeMethods.CreateKeyboardEffect(Corale.Colore.Razer.Keyboard.Effects.Effect,System.IntPtr,System.Guid@)" />
        </member>
        <member name="M:Corale.Colore.Core.NativeWrapper.CreateKeyboardEffect(Corale.Colore.Razer.Keyboard.Effects.Effect)">
            <summary>
            Create a keyboard effect without a parameter.
            </summary>
            <param name="effect">The type of effect to create.</param>
            <returns>A <see cref="T:System.Guid" /> for the created effect.</returns>
            <remarks>This is currently valid for <see cref="F:Corale.Colore.Razer.Keyboard.Effects.Effect.None" /> and <see cref="F:Corale.Colore.Razer.Keyboard.Effects.Effect.SpectrumCycling" />.</remarks>
        </member>
        <member name="M:Corale.Colore.Core.NativeWrapper.CreateKeyboardEffect(Corale.Colore.Razer.Keyboard.Effects.Breathing)">
            <summary>
            Creates a breathing effect for the keyboard.
            </summary>
            <param name="effect">Effect options.</param>
            <returns>A <see cref="T:System.Guid" /> for the created effect.</returns>
        </member>
        <member name="M:Corale.Colore.Core.NativeWrapper.CreateKeyboardEffect(Corale.Colore.Razer.Keyboard.Effects.Reactive)">
            <summary>
            Creates a reactive effect for the keyboard.
            </summary>
            <param name="effect">Effect options.</param>
            <returns>A <see cref="T:System.Guid" /> for the created effect.</returns>
        </member>
        <member name="M:Corale.Colore.Core.NativeWrapper.CreateKeyboardEffect(Corale.Colore.Razer.Keyboard.Effects.Static)">
            <summary>
            Creates a static color effect for the keyboard.
            </summary>
            <param name="effect">Effect options.</param>
            <returns>A <see cref="T:System.Guid" /> for the created effect.</returns>
        </member>
        <member name="M:Corale.Colore.Core.NativeWrapper.CreateKeyboardEffect(Corale.Colore.Razer.Keyboard.Effects.Wave)">
            <summary>
            Creates a wave effect for the keyboard.
            </summary>
            <param name="effect">Effect options.</param>
            <returns>A <see cref="T:System.Guid" /> for the created effect.</returns>
        </member>
        <member name="M:Corale.Colore.Core.NativeWrapper.CreateKeyboardEffect(Corale.Colore.Razer.Keyboard.Effects.Custom)">
            <summary>
            Creates a custom effect for the keyboard.
            </summary>
            <param name="effect">Effect options.</param>
            <returns>A <see cref="T:System.Guid" /> for the created effect.</returns>
        </member>
        <member name="M:Corale.Colore.Core.NativeWrapper.CreateMouseEffect(Corale.Colore.Razer.Mouse.Effects.Effect,System.IntPtr)">
            <summary>
            Creates a standard mouse effect with the specified parameters.
            </summary>
            <param name="effect">The type of effect to create.</param>
            <param name="param">Context-sensitive effect parameter.</param>
            <returns>A <see cref="T:System.Guid" /> for the created effect.</returns>
            <seealso cref="M:Corale.Colore.Razer.NativeMethods.CreateMouseEffect(Corale.Colore.Razer.Mouse.Effects.Effect,System.IntPtr,System.Guid@)" />
        </member>
        <member name="M:Corale.Colore.Core.NativeWrapper.CreateMouseEffect(Corale.Colore.Razer.Mouse.Effects.Effect)">
            <summary>
            Create a mouse effect without a parameter.
            </summary>
            <param name="effect">The type of effect to create.</param>
            <returns>A <see cref="T:System.Guid" /> for the created effect.</returns>
            <remarks>This is currently only valid for <see cref="F:Corale.Colore.Razer.Mouse.Effects.Effect.None" />.</remarks>
        </member>
        <member name="M:Corale.Colore.Core.NativeWrapper.CreateMouseEffect(Corale.Colore.Razer.Mouse.Effects.Custom)">
            <summary>
            Creates a custom effect for the mouse.
            </summary>
            <param name="effect">Effect options.</param>
            <returns>A <see cref="T:System.Guid" /> for the created effect.</returns>
        </member>
        <member name="M:Corale.Colore.Core.NativeWrapper.CreateMouseEffect(Corale.Colore.Razer.Mouse.Effects.Breathing)">
            <summary>
            Creates a breathing effect for the mouse.
            </summary>
            <param name="effect">Effect options.</param>
            <returns>A <see cref="T:System.Guid" /> for the created effect.</returns>
        </member>
        <member name="M:Corale.Colore.Core.NativeWrapper.CreateMouseEffect(Corale.Colore.Razer.Mouse.Effects.Static)">
            <summary>
            Creates a static color effect for the mouse.
            </summary>
            <param name="effect">Effect options.</param>
            <returns>A <see cref="T:System.Guid" /> for the created effect.</returns>
        </member>
        <member name="M:Corale.Colore.Core.NativeWrapper.CreateMouseEffect(Corale.Colore.Razer.Mouse.Effects.Blinking)">
            <summary>
            Creates a blinking effect for the mouse.
            </summary>
            <param name="effect">Effect options struct.</param>
            <returns>A <see cref="T:System.Guid" /> for the created effect.</returns>
        </member>
        <member name="M:Corale.Colore.Core.NativeWrapper.CreateMouseEffect(Corale.Colore.Razer.Mouse.Effects.Reactive)">
            <summary>
            Creates a reactive effect for the mouse.
            </summary>
            <param name="effect">Effect options struct.</param>
            <returns>A <see cref="T:System.Guid" /> for the created effect.</returns>
        </member>
        <member name="M:Corale.Colore.Core.NativeWrapper.CreateMouseEffect(Corale.Colore.Razer.Mouse.Effects.SpectrumCycling)">
            <summary>
            Creates a spectrum cycling effect for the mouse.
            </summary>
            <param name="effect">Effect options struct.</param>
            <returns>A <see cref="T:System.Guid" /> for the created effect.</returns>
        </member>
        <member name="M:Corale.Colore.Core.NativeWrapper.CreateMouseEffect(Corale.Colore.Razer.Mouse.Effects.Wave)">
            <summary>
            Creates a wave effect for the mouse.
            </summary>
            <param name="effect">Effect options struct.</param>
            <returns>A <see cref="T:System.Guid" /> for the created effect.</returns>
        </member>
        <member name="M:Corale.Colore.Core.NativeWrapper.CreateHeadsetEffect(Corale.Colore.Razer.Headset.Effects.Effect,System.IntPtr)">
            <summary>
            Creates a standard headset effect with the specified parameters.
            </summary>
            <param name="effect">The type of effect to create.</param>
            <param name="param">Effect-specific parameter.</param>
            <returns>A <see cref="T:System.Guid" /> for the created effect.</returns>
        </member>
        <member name="M:Corale.Colore.Core.NativeWrapper.CreateHeadsetEffect(Corale.Colore.Razer.Headset.Effects.Effect)">
            <summary>
            Creates a standard effect for the headset that takes no parameter.
            </summary>
            <param name="effect">The type of effect to create.</param>
            <returns>A <see cref="T:System.Guid" /> for the created effect.</returns>
        </member>
        <member name="M:Corale.Colore.Core.NativeWrapper.CreateHeadsetEffect(Corale.Colore.Razer.Headset.Effects.Static)">
            <summary>
            Creates a static color effect for the headset.
            </summary>
            <param name="effect">The effect struct.</param>
            <returns>A <see cref="T:System.Guid" /> for the created effect.</returns>
        </member>
        <member name="M:Corale.Colore.Core.NativeWrapper.CreateHeadsetEffect(Corale.Colore.Razer.Headset.Effects.Breathing)">
            <summary>
            Creates a breathing effect for the headset.
            </summary>
            <param name="effect">The effect struct.</param>
            <returns>A <see cref="T:System.Guid" /> for the created effect.</returns>
        </member>
        <member name="M:Corale.Colore.Core.NativeWrapper.CreateMousepadEffect(Corale.Colore.Razer.Mousepad.Effects.Effect,System.IntPtr)">
            <summary>
            Creates a standard mouse pad effect with the specified parameters.
            </summary>
            <param name="effect">The type of effect to create.</param>
            <param name="param">Effect-specific parameter.</param>
            <returns>A <see cref="T:System.Guid" /> for the created effect.</returns>
        </member>
        <member name="M:Corale.Colore.Core.NativeWrapper.CreateMousepadEffect(Corale.Colore.Razer.Mousepad.Effects.Effect)">
            <summary>
            Create a mousepad effect without a parameter.
            </summary>
            <param name="effect">The type of effect to create.</param>
            <returns>A <see cref="T:System.Guid" /> for the created effect.</returns>
            <remarks>This is currently only valid for <see cref="F:Corale.Colore.Razer.Mousepad.Effects.Effect.None" />.</remarks>
        </member>
        <member name="M:Corale.Colore.Core.NativeWrapper.CreateMousepadEffect(Corale.Colore.Razer.Mousepad.Effects.Breathing)">
            <summary>
            Creates a breathing effect for the mouse pad.
            </summary>
            <param name="effect">Effect options struct.</param>
            <returns>A <see cref="T:System.Guid" /> for the created effect.</returns>
        </member>
        <member name="M:Corale.Colore.Core.NativeWrapper.CreateMousepadEffect(Corale.Colore.Razer.Mousepad.Effects.Static)">
            <summary>
            Creates a static effect for the mouse pad.
            </summary>
            <param name="effect">Effect options struct.</param>
            <returns>A <see cref="T:System.Guid" /> for the created effect.</returns>
        </member>
        <member name="M:Corale.Colore.Core.NativeWrapper.CreateMousepadEffect(Corale.Colore.Razer.Mousepad.Effects.Wave)">
            <summary>
            Creates a wave effect for the mouse pad.
            </summary>
            <param name="effect">Effect options struct.</param>
            <returns>A <see cref="T:System.Guid" /> for the created effect.</returns>
        </member>
        <member name="M:Corale.Colore.Core.NativeWrapper.CreateMousepadEffect(Corale.Colore.Razer.Mousepad.Effects.Custom)">
            <summary>
            Creates a custom effect for the mouse pad.
            </summary>
            <param name="effect">Effect options struct.</param>
            <returns>A <see cref="T:System.Guid" /> for the created effect.</returns>
        </member>
        <member name="M:Corale.Colore.Core.NativeWrapper.CreateKeypadEffect(Corale.Colore.Razer.Keypad.Effects.Effect,System.IntPtr)">
            <summary>
            Creates a standard keypad effect with the specified parameters.
            </summary>
            <param name="effect">The type of effect to create.</param>
            <param name="param">Effect-specific parameters.</param>
            <returns>A <see cref="T:System.Guid" /> for the created effect.</returns>
        </member>
        <member name="M:Corale.Colore.Core.NativeWrapper.CreateKeypadEffect(Corale.Colore.Razer.Keypad.Effects.Effect)">
            <summary>
            Create a keypad effect without a parameter.
            </summary>
            <param name="effect">The type of effect to create.</param>
            <returns>A <see cref="T:System.Guid" /> for the created effect.</returns>
            <remarks>This is currently only valid for <see cref="F:Corale.Colore.Razer.Keypad.Effects.Effect.None" />.</remarks>
        </member>
        <member name="M:Corale.Colore.Core.NativeWrapper.CreateKeypadEffect(Corale.Colore.Razer.Keypad.Effects.Breathing)">
            <summary>
            Creates a breathing effect for the keypad.
            </summary>
            <param name="effect">Effect options struct.</param>
            <returns>A <see cref="T:System.Guid" /> for the created effect.</returns>
        </member>
        <member name="M:Corale.Colore.Core.NativeWrapper.CreateKeypadEffect(Corale.Colore.Razer.Keypad.Effects.Static)">
            <summary>
            Creates a static effect for the keypad.
            </summary>
            <param name="effect">Effect options struct.</param>
            <returns>A <see cref="T:System.Guid" /> for the created effect.</returns>
        </member>
        <member name="M:Corale.Colore.Core.NativeWrapper.CreateKeypadEffect(Corale.Colore.Razer.Keypad.Effects.Wave)">
            <summary>
            Creates a wave effect for the keypad.
            </summary>
            <param name="effect">Effect options struct.</param>
            <returns>A <see cref="T:System.Guid" /> for the created effect.</returns>
        </member>
        <member name="M:Corale.Colore.Core.NativeWrapper.CreateKeypadEffect(Corale.Colore.Razer.Keypad.Effects.Custom)">
            <summary>
            Creates a custom effect for the keypad.
            </summary>
            <param name="effect">Effect options struct.</param>
            <returns>A <see cref="T:System.Guid" /> for the created effect.</returns>
        </member>
        <member name="M:Corale.Colore.Core.NativeWrapper.CreateKeypadEffect(Corale.Colore.Razer.Keypad.Effects.Reactive)">
            <summary>
            Creates a reactive effect for the keypad.
            </summary>
            <param name="effect">Effect options struct.</param>
            <returns>A <see cref="T:System.Guid" /> for the created effect.</returns>
        </member>
        <member name="M:Corale.Colore.Core.NativeWrapper.DeleteEffect(System.Guid)">
            <summary>
            Deletes an effect with the specified <see cref="T:System.Guid" />.
            </summary>
            <param name="guid">Effect ID to delete.</param>
        </member>
        <member name="M:Corale.Colore.Core.NativeWrapper.Init">
            <summary>
            Initializes the Chroma SDK.
            </summary>
        </member>
        <member name="M:Corale.Colore.Core.NativeWrapper.RegisterEventNotification(System.IntPtr)">
            <summary>
            Registers for Chroma SDK notifications.
            </summary>
            <param name="hwnd">App handle for the window handling events.</param>
        </member>
        <member name="M:Corale.Colore.Core.NativeWrapper.SetEffect(System.Guid)">
            <summary>
            Set effect.
            </summary>
            <param name="guid">Effect ID to set.</param>
        </member>
        <member name="M:Corale.Colore.Core.NativeWrapper.UnInit">
            <summary>
            Uninitializes the Chroma SDK.
            </summary>
        </member>
        <member name="M:Corale.Colore.Core.NativeWrapper.UnregisterEventNotification">
            <summary>
            Unregisters from receiving Chroma SDK notifications.
            </summary>
        </member>
        <member name="M:Corale.Colore.Core.NativeWrapper.QueryDevice(System.Guid)">
            <summary>
            Query for device information.
            </summary>
            <param name="id">Device ID, found in <see cref="T:Corale.Colore.Razer.Devices" />.</param>
            <returns>A populated <see cref="T:Corale.Colore.Razer.DeviceInfo" /> structure with information about the requested device.</returns>
        </member>
        <member name="M:Corale.Colore.Core.NativeWrapper.CreateKeyboardEffect``1(Corale.Colore.Razer.Keyboard.Effects.Effect,``0)">
            <summary>
            Helper method for creating keyboard effects with relevant structure parameter.
            </summary>
            <typeparam name="T">The structure type, needs to be compatible with the effect type.</typeparam>
            <param name="effect">The type of effect to create.</param>
            <param name="struct">The effect structure parameter.</param>
            <returns>A <see cref="T:System.Guid" /> for the created effect.</returns>
        </member>
        <member name="M:Corale.Colore.Core.NativeWrapper.CreateMouseEffect``1(Corale.Colore.Razer.Mouse.Effects.Effect,``0)">
            <summary>
            Helper method for creating mouse effects with parameter struct.
            </summary>
            <typeparam name="T">The effect struct type.</typeparam>
            <param name="effect">The type of effect to create.</param>
            <param name="struct">Effect options struct.</param>
            <returns>A <see cref="T:System.Guid" /> for the created effect.</returns>
        </member>
        <member name="M:Corale.Colore.Core.NativeWrapper.CreateHeadsetEffect``1(Corale.Colore.Razer.Headset.Effects.Effect,``0)">
            <summary>
            Helper method for creating headset effects with parameter struct.
            </summary>
            <typeparam name="T">The effect struct type.</typeparam>
            <param name="effect">The type of effect to create.</param>
            <param name="struct">Effect options struct.</param>
            <returns>A <see cref="T:System.Guid" /> for the created effect.</returns>
        </member>
        <member name="M:Corale.Colore.Core.NativeWrapper.CreateMousepadEffect``1(Corale.Colore.Razer.Mousepad.Effects.Effect,``0)">
            <summary>
            Helper method for creating mouse pad effects with parameter struct.
            </summary>
            <typeparam name="T">The effect struct type.</typeparam>
            <param name="effect">The type of effect to create.</param>
            <param name="struct">Effect options struct.</param>
            <returns>A <see cref="T:System.Guid" /> for the created effect.</returns>
        </member>
        <member name="M:Corale.Colore.Core.NativeWrapper.CreateKeypadEffect``1(Corale.Colore.Razer.Keypad.Effects.Effect,``0)">
            <summary>
            Helper method for creating keypad effects with parameter struct.
            </summary>
            <typeparam name="T">The effect struct type.</typeparam>
            <param name="effect">The type of effect to create.</param>
            <param name="struct">Effect options struct.</param>
            <returns>A <see cref="T:System.Guid" /> for the created effect.</returns>
        </member>
        <member name="T:Corale.Colore.Core.Size">
            <summary>
            Dynamic size type for interacting with Razer's native code.
            Emulates <c>size_t</c> from C.
            </summary>
            <remarks>
            This struct will use either <see cref="T:System.UInt64" /> or <see cref="T:System.UInt32" /> as its base,
            depending on compile-time or run-time architecture. On 64-bit systems, if compiled in <c>x64</c>,
            the base will be <see cref="T:System.UInt64" />. On 32-bit systems, if compiled in <c>x86</c>,
            the base will be <see cref="T:System.UInt32" />. On 64- and 32-bit systems, if compiled in <c>Any CPU</c>,
            the base will be <see cref="T:System.UInt32" />, with context-sensitive code doing run-time conversions.
            </remarks>
        </member>
        <member name="F:Corale.Colore.Core.Size._value">
            <summary>
            The internal value stored by the struct. Its type depends on compile or runtime architecture.
            </summary>
            <seealso cref="T:Corale.Colore.Core.Size" />
        </member>
        <member name="M:Corale.Colore.Core.Size.#ctor(System.UInt64)">
            <summary>
            Initializes a new instance of the <see cref="T:Corale.Colore.Core.Size" /> struct.
            </summary>
            <param name="value">Value to use.</param>
        </member>
        <member name="M:Corale.Colore.Core.Size.op_Equality(Corale.Colore.Core.Size,System.Object)">
            <summary>
            Indicates whether an instance of <see cref="T:Corale.Colore.Core.Size" /> is equal to another object.
            </summary>
            <param name="left">Left operand, an instance of the <see cref="T:Corale.Colore.Core.Size" /> struct.</param>
            <param name="right">Right operand, an instance of an object, or <c>null</c>.</param>
            <returns><c>true</c> if the two operands are equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Corale.Colore.Core.Size.op_Explicit(Corale.Colore.Core.Size)~System.Int32">
            <summary>
            Converts a <see cref="T:Corale.Colore.Core.Size" /> struct to an <see cref="T:System.Int32" />.
            </summary>
            <param name="size">An instance of <see cref="T:Corale.Colore.Core.Size" /> to convert.</param>
            <returns>The resulting <see cref="T:System.Int32" /> value.</returns>
        </member>
        <member name="M:Corale.Colore.Core.Size.op_Explicit(System.Int32)~Corale.Colore.Core.Size">
            <summary>
            Converts an <see cref="T:System.Int32" /> value to an instance of <see cref="T:Corale.Colore.Core.Size" />
            representing that value.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>A new instance of a <see cref="T:Corale.Colore.Core.Size" /> struct with a size corresponding to the value.</returns>
        </member>
        <member name="M:Corale.Colore.Core.Size.op_GreaterThan(Corale.Colore.Core.Size,Corale.Colore.Core.Size)">
            <summary>
            Indicates whether a <see cref="T:Corale.Colore.Core.Size" /> struct is greater than another
            <see cref="T:Corale.Colore.Core.Size" /> struct.
            </summary>
            <param name="left">Left operand for use as the base of comparison.</param>
            <param name="right">Right operand to compare with.</param>
            <returns>
            <c>true</c> if the value of <paramref name="left" /> is greater than that of <paramref name="right" />, <c>false</c> otherwise.
            </returns>
        </member>
        <member name="M:Corale.Colore.Core.Size.op_GreaterThanOrEqual(Corale.Colore.Core.Size,Corale.Colore.Core.Size)">
            <summary>
            Indicates whether a <see cref="T:Corale.Colore.Core.Size" /> struct is greater than or
            equal to another <see cref="T:Corale.Colore.Core.Size" /> struct.
            </summary>
            <param name="left">Left operand for use as the base of comparison.</param>
            <param name="right">Right operand to compare with.</param>
            <returns>
            <c>true</c> if the value of <paramref name="left" /> is greater than or equal to that of
            <paramref name="right" />, otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:Corale.Colore.Core.Size.op_Implicit(Corale.Colore.Core.Size)~System.UInt64">
            <summary>
            Converts a <see cref="T:Corale.Colore.Core.Size" /> struct to a <see cref="T:System.UInt64" />.
            </summary>
            <param name="size">An instance of <see cref="T:Corale.Colore.Core.Size" /> to convert.</param>
            <returns>The resulting <see cref="T:System.UInt64" /> value.</returns>
        </member>
        <member name="M:Corale.Colore.Core.Size.op_Implicit(System.UInt64)~Corale.Colore.Core.Size">
            <summary>
            Converts a <see cref="T:System.UInt64" /> value to a new <see cref="T:Corale.Colore.Core.Size" /> struct.
            </summary>
            <param name="sizet">The value to convert.</param>
            <returns>A new instance of the <see cref="T:Corale.Colore.Core.Size" /> struct representing the value.</returns>
        </member>
        <member name="M:Corale.Colore.Core.Size.op_Inequality(Corale.Colore.Core.Size,System.Object)">
            <summary>
            Indicates whether an instance of <see cref="T:Corale.Colore.Core.Size" /> is not equal to another object.
            </summary>
            <param name="left">Left operand, an instance of the <see cref="T:Corale.Colore.Core.Size" /> struct.</param>
            <param name="right">Right operand, an object to compare with.</param>
            <returns><c>true</c> if the two objects are equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Corale.Colore.Core.Size.op_LessThan(Corale.Colore.Core.Size,Corale.Colore.Core.Size)">
            <summary>
            Indicates whether the value of a <see cref="T:Corale.Colore.Core.Size" /> struct is less than
            that of another <see cref="T:Corale.Colore.Core.Size" /> struct.
            </summary>
            <param name="left">Left operand to use as the base of comparison.</param>
            <param name="right">Right operand to compare with.</param>
            <returns>
            <c>true</c> if <paramref name="left" /> is less than <paramref name="right" />, otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:Corale.Colore.Core.Size.op_LessThanOrEqual(Corale.Colore.Core.Size,Corale.Colore.Core.Size)">
            <summary>
            Indicates whether the value of a <see cref="T:Corale.Colore.Core.Size" /> struct is less than
            or equal to that of another <see cref="T:Corale.Colore.Core.Size" /> struct.
            </summary>
            <param name="left">Left operand to use as the base of the comparison.</param>
            <param name="right">Right operand to compare with.</param>
            <returns>
            <c>true</c> if <paramref name="left" /> is less than or equal to <paramref name="right" />.
            </returns>
        </member>
        <member name="M:Corale.Colore.Core.Size.CompareTo(System.UInt64)">
            <summary>
            Compares the internal value of the current <see cref="T:Corale.Colore.Core.Size" /> struct to
            another value.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            A value that indicates the relative order of the objects being compared.
            The return value has the following meanings:
            <list type="table">
            <listheader>
            <term>Value</term>
            <term>Meaning</term>
            </listheader>
            <item>
            <term>Less than zero</term>
            <term>The value is less than the <paramref name="other" /> parameter.</term>
            </item>
            <item>
            <term>Zero</term>
            <term>The value is equal to <paramref name="other" />.</term>
            </item>
            <item>
            <term>Greater than zero</term>
            <term>The value is greater than <paramref name="other" />.</term>
            </item>
            </list>
            </returns>
        </member>
        <member name="M:Corale.Colore.Core.Size.CompareTo(Corale.Colore.Core.Size)">
            <summary>
            Compares the current <see cref="T:Corale.Colore.Core.Size" /> struct to another <see cref="T:Corale.Colore.Core.Size" /> struct.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            A value that indicates the relative order of the objects being compared.
            The return value has the following meanings:
            <list type="table">
            <listheader>
            <term>Value</term>
            <term>Meaning</term>
            </listheader>
            <item>
            <term>Less than zero</term>
            <term>This object is less than the <paramref name="other" /> parameter.</term>
            </item>
            <item>
            <term>Zero</term>
            <term>This object is equal to <paramref name="other" />.</term>
            </item>
            <item>
            <term>Greater than zero</term>
            <term>This object is greater than <paramref name="other" />.</term>
            </item>
            </list>
            </returns>
        </member>
        <member name="M:Corale.Colore.Core.Size.Equals(System.Object)">
            <summary>
            Indicates whether this instance of <see cref="T:Corale.Colore.Core.Size" /> and a specified object are equal.
            </summary>
            <param name="obj">Another object to compare to. </param><filterpriority>2</filterpriority>
            <returns>
            <c>true</c> if <paramref name="obj"/> and this instance of <see cref="T:Corale.Colore.Core.Size" /> are the same type and
            represent the same value; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Corale.Colore.Core.Size.Equals(System.UInt64)">
            <summary>
            Indicates whether the stored <see cref="T:System.UInt64" /> value in this instance of <see cref="T:Corale.Colore.Core.Size" /> is
            equal to another <see cref="T:System.UInt64" /> value <paramref name="other" />.
            </summary>
            <param name="other">A <see cref="T:System.UInt64" /> value to compare the internal <see cref="T:System.UInt64" /> value with.</param>
            <returns>
            <c>true</c> if the internal <see cref="T:System.UInt64" /> value is equal to the <paramref name="other"/> value; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Corale.Colore.Core.Size.Equals(Corale.Colore.Core.Size)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            <c>true</c> if the current object is equal to the <paramref name="other"/> parameter; otherwise, <c>false</c>.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:Corale.Colore.Core.Size.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>
            A 32-bit signed integer that is the hash code for this instance.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Corale.Colore.Core.Size.ToString">
            <summary>
            Returns the string value of the internal <see cref="T:System.UInt64" /> value.
            </summary>
            <returns>
            A <see cref="T:System.String"/> representing the
            numerical value of the internal <see cref="T:System.UInt64" /> field.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="T:Corale.Colore.EnvironmentHelper">
            <summary>
            Helper to get the architecture of the OS.
            Taken from here: http://stackoverflow.com/a/28866330/1104531
            </summary>
        </member>
        <member name="M:Corale.Colore.EnvironmentHelper.Is64BitOperatingSystem">
            <summary>
            Determines whether the current system is 64-bit.
            </summary>
            <returns><c>true</c> if the system is 64-bit.</returns>
        </member>
        <member name="M:Corale.Colore.EnvironmentHelper.Is64BitProcess">
            <summary>
            Determines whether this process is a 64-bit process.
            </summary>
            <returns><c>true</c> if this process is 64-bit, otherwise <c>false</c>.</returns>
        </member>
        <member name="T:Corale.Colore.Events.ApplicationStateEventArgs">
            <summary>
            Event arguments for the application state event.
            </summary>
        </member>
        <member name="F:Corale.Colore.Events.ApplicationStateEventArgs._enabled">
            <summary>
            Whether or not application is enabled.
            </summary>
        </member>
        <member name="M:Corale.Colore.Events.ApplicationStateEventArgs.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Corale.Colore.Events.ApplicationStateEventArgs" /> class.
            </summary>
            <param name="enabled">Value indicating whether the application has been enabled.</param>
        </member>
        <member name="P:Corale.Colore.Events.ApplicationStateEventArgs.Enabled">
            <summary>
            Gets a value indicating whether or not the application has been enabled.
            </summary>
        </member>
        <member name="T:Corale.Colore.Events.SdkSupportEventArgs">
            <summary>
            Event arguments for the Chroma SDK support event.
            </summary>
        </member>
        <member name="F:Corale.Colore.Events.SdkSupportEventArgs._enabled">
            <summary>
            Whether or not SDK support is enabled.
            </summary>
        </member>
        <member name="M:Corale.Colore.Events.SdkSupportEventArgs.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Corale.Colore.Events.SdkSupportEventArgs" /> class.
            </summary>
            <param name="enabled">Value indicating whether SDK support is enabled.</param>
        </member>
        <member name="P:Corale.Colore.Events.SdkSupportEventArgs.Enabled">
            <summary>
            Gets a value indicating whether SDK support is enabled.
            </summary>
        </member>
        <member name="T:Corale.Colore.Events.DeviceAccessEventArgs">
            <summary>
            Event arguments for the device access event.
            </summary>
        </member>
        <member name="F:Corale.Colore.Events.DeviceAccessEventArgs._granted">
            <summary>
            Whether or not device access has been granted.
            </summary>
        </member>
        <member name="M:Corale.Colore.Events.DeviceAccessEventArgs.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Corale.Colore.Events.DeviceAccessEventArgs" /> class.
            </summary>
            <param name="granted">Value indicating whether device access was granted.</param>
        </member>
        <member name="P:Corale.Colore.Events.DeviceAccessEventArgs.Granted">
            <summary>
            Gets a value indicating whether device access has been granted.
            </summary>
        </member>
        <member name="T:Corale.Colore.Native.Kernel32.NativeMethods">
            <summary>
            Native methods from <c>kernel32</c> module.
            </summary>
        </member>
        <member name="F:Corale.Colore.Native.Kernel32.NativeMethods.DllName">
            <summary>
            Name of the DLL from which functions are imported.
            </summary>
        </member>
        <member name="T:Corale.Colore.Annotations.CanBeNullAttribute">
            <summary>
            Indicates that the value of the marked element could be <c>null</c> sometimes,
            so the check for <c>null</c> is necessary before its usage
            </summary>
            <example><code>
            [CanBeNull] public object Test() { return null; }
            public void UseTest() {
              var p = Test();
              var s = p.ToString(); // Warning: Possible 'System.NullReferenceException'
            }
            </code></example>
        </member>
        <member name="T:Corale.Colore.Annotations.NotNullAttribute">
            <summary>
            Indicates that the value of the marked element could never be <c>null</c>
            </summary>
            <example><code>
            [NotNull] public object Foo() {
              return null; // Warning: Possible 'null' assignment
            }
            </code></example>
        </member>
        <member name="T:Corale.Colore.Annotations.ItemNotNullAttribute">
            <summary>
            Indicates that collection or enumerable value does not contain null elements
            </summary>
        </member>
        <member name="T:Corale.Colore.Annotations.ItemCanBeNullAttribute">
            <summary>
            Indicates that collection or enumerable value can contain null elements
            </summary>
        </member>
        <member name="T:Corale.Colore.Annotations.StringFormatMethodAttribute">
            <summary>
            Indicates that the marked method builds string by format pattern and (optional) arguments.
            Parameter, which contains format string, should be given in constructor. The format string
            should be in <see cref="M:System.String.Format(System.IFormatProvider,System.String,System.Object[])"/>-like form
            </summary>
            <example><code>
            [StringFormatMethod("message")]
            public void ShowError(string message, params object[] args) { /* do something */ }
            public void Foo() {
              ShowError("Failed: {0}"); // Warning: Non-existing argument in format string
            }
            </code></example>
        </member>
        <member name="M:Corale.Colore.Annotations.StringFormatMethodAttribute.#ctor(System.String)">
            <param name="formatParameterName">
            Specifies which parameter of an annotated method should be treated as format-string
            </param>
        </member>
        <member name="T:Corale.Colore.Annotations.ValueProviderAttribute">
            <summary>
            For a parameter that is expected to be one of the limited set of values.
            Specify fields of which type should be used as values for this parameter.
            </summary>
        </member>
        <member name="T:Corale.Colore.Annotations.InvokerParameterNameAttribute">
            <summary>
            Indicates that the function argument should be string literal and match one
            of the parameters of the caller function. For example, ReSharper annotates
            the parameter of <see cref="T:System.ArgumentNullException"/>
            </summary>
            <example><code>
            public void Foo(string param) {
              if (param == null)
                throw new ArgumentNullException("par"); // Warning: Cannot resolve symbol
            }
            </code></example>
        </member>
        <member name="T:Corale.Colore.Annotations.NotifyPropertyChangedInvocatorAttribute">
             <summary>
             Indicates that the method is contained in a type that implements
             <c>System.ComponentModel.INotifyPropertyChanged</c> interface and this method
             is used to notify that some property value changed
             </summary>
             <remarks>
             The method should be non-static and conform to one of the supported signatures:
             <list>
             <item><c>NotifyChanged(string)</c></item>
             <item><c>NotifyChanged(params string[])</c></item>
             <item><c>NotifyChanged{T}(Expression{Func{T}})</c></item>
             <item><c>NotifyChanged{T,U}(Expression{Func{T,U}})</c></item>
             <item><c>SetProperty{T}(ref T, T, string)</c></item>
             </list>
             </remarks>
             <example><code>
             public class Foo : INotifyPropertyChanged {
               public event PropertyChangedEventHandler PropertyChanged;
               [NotifyPropertyChangedInvocator]
               protected virtual void NotifyChanged(string propertyName) { ... }
            
               private string _name;
               public string Name {
                 get { return _name; }
                 set { _name = value; NotifyChanged("LastName"); /* Warning */ }
               }
             }
             </code>
             Examples of generated notifications:
             <list>
             <item><c>NotifyChanged("Property")</c></item>
             <item><c>NotifyChanged(() =&gt; Property)</c></item>
             <item><c>NotifyChanged((VM x) =&gt; x.Property)</c></item>
             <item><c>SetProperty(ref myField, value, "Property")</c></item>
             </list>
             </example>
        </member>
        <member name="T:Corale.Colore.Annotations.ContractAnnotationAttribute">
            <summary>
            Describes dependency between method input and output
            </summary>
            <syntax>
            <p>Function Definition Table syntax:</p>
            <list>
            <item>FDT      ::= FDTRow [;FDTRow]*</item>
            <item>FDTRow   ::= Input =&gt; Output | Output &lt;= Input</item>
            <item>Input    ::= ParameterName: Value [, Input]*</item>
            <item>Output   ::= [ParameterName: Value]* {halt|stop|void|nothing|Value}</item>
            <item>Value    ::= true | false | null | notnull | canbenull</item>
            </list>
            If method has single input parameter, it's name could be omitted.<br/>
            Using <c>halt</c> (or <c>void</c>/<c>nothing</c>, which is the same)
            for method output means that the methos doesn't return normally.<br/>
            <c>canbenull</c> annotation is only applicable for output parameters.<br/>
            You can use multiple <c>[ContractAnnotation]</c> for each FDT row,
            or use single attribute with rows separated by semicolon.<br/>
            </syntax>
            <examples><list>
            <item><code>
            [ContractAnnotation("=> halt")]
            public void TerminationMethod()
            </code></item>
            <item><code>
            [ContractAnnotation("halt &lt;= condition: false")]
            public void Assert(bool condition, string text) // regular assertion method
            </code></item>
            <item><code>
            [ContractAnnotation("s:null => true")]
            public bool IsNullOrEmpty(string s) // string.IsNullOrEmpty()
            </code></item>
            <item><code>
            // A method that returns null if the parameter is null,
            // and not null if the parameter is not null
            [ContractAnnotation("null => null; notnull => notnull")]
            public object Transform(object data)
            </code></item>
            <item><code>
            [ContractAnnotation("s:null=>false; =>true,result:notnull; =>false, result:null")]
            public bool TryParse(string s, out Person result)
            </code></item>
            </list></examples>
        </member>
        <member name="T:Corale.Colore.Annotations.LocalizationRequiredAttribute">
            <summary>
            Indicates that marked element should be localized or not
            </summary>
            <example><code>
            [LocalizationRequiredAttribute(true)]
            public class Foo {
              private string str = "my string"; // Warning: Localizable string
            }
            </code></example>
        </member>
        <member name="T:Corale.Colore.Annotations.CannotApplyEqualityOperatorAttribute">
            <summary>
            Indicates that the value of the marked type (or its derivatives)
            cannot be compared using '==' or '!=' operators and <c>Equals()</c>
            should be used instead. However, using '==' or '!=' for comparison
            with <c>null</c> is always permitted.
            </summary>
            <example><code>
            [CannotApplyEqualityOperator]
            class NoEquality { }
            class UsesNoEquality {
              public void Test() {
                var ca1 = new NoEquality();
                var ca2 = new NoEquality();
                if (ca1 != null) { // OK
                  bool condition = ca1 == ca2; // Warning
                }
              }
            }
            </code></example>
        </member>
        <member name="T:Corale.Colore.Annotations.BaseTypeRequiredAttribute">
            <summary>
            When applied to a target attribute, specifies a requirement for any type marked
            with the target attribute to implement or inherit specific type or types.
            </summary>
            <example><code>
            [BaseTypeRequired(typeof(IComponent)] // Specify requirement
            public class ComponentAttribute : Attribute { }
            [Component] // ComponentAttribute requires implementing IComponent interface
            public class MyComponent : IComponent { }
            </code></example>
        </member>
        <member name="T:Corale.Colore.Annotations.UsedImplicitlyAttribute">
            <summary>
            Indicates that the marked symbol is used implicitly
            (e.g. via reflection, in external library), so this symbol
            will not be marked as unused (as well as by other usage inspections)
            </summary>
        </member>
        <member name="T:Corale.Colore.Annotations.MeansImplicitUseAttribute">
            <summary>
            Should be used on attributes and causes ReSharper
            to not mark symbols marked with such attributes as unused
            (as well as by other usage inspections)
            </summary>
        </member>
        <member name="F:Corale.Colore.Annotations.ImplicitUseKindFlags.Access">
            <summary>Only entity marked with attribute considered used</summary>
        </member>
        <member name="F:Corale.Colore.Annotations.ImplicitUseKindFlags.Assign">
            <summary>Indicates implicit assignment to a member</summary>
        </member>
        <member name="F:Corale.Colore.Annotations.ImplicitUseKindFlags.InstantiatedWithFixedConstructorSignature">
            <summary>
            Indicates implicit instantiation of a type with fixed constructor signature.
            That means any unused constructor parameters won't be reported as such.
            </summary>
        </member>
        <member name="F:Corale.Colore.Annotations.ImplicitUseKindFlags.InstantiatedNoFixedConstructorSignature">
            <summary>Indicates implicit instantiation of a type</summary>
        </member>
        <member name="T:Corale.Colore.Annotations.ImplicitUseTargetFlags">
            <summary>
            Specify what is considered used implicitly when marked
            with <see cref="T:Corale.Colore.Annotations.MeansImplicitUseAttribute"/> or <see cref="T:Corale.Colore.Annotations.UsedImplicitlyAttribute"/>
            </summary>
        </member>
        <member name="F:Corale.Colore.Annotations.ImplicitUseTargetFlags.Members">
            <summary>Members of entity marked with attribute are considered used</summary>
        </member>
        <member name="F:Corale.Colore.Annotations.ImplicitUseTargetFlags.WithMembers">
            <summary>Entity marked with attribute and all its members considered used</summary>
        </member>
        <member name="T:Corale.Colore.Annotations.PublicAPIAttribute">
            <summary>
            This attribute is intended to mark publicly available API
            which should not be removed and so is treated as used
            </summary>
        </member>
        <member name="T:Corale.Colore.Annotations.InstantHandleAttribute">
            <summary>
            Tells code analysis engine if the parameter is completely handled
            when the invoked method is on stack. If the parameter is a delegate,
            indicates that delegate is executed while the method is executed.
            If the parameter is an enumerable, indicates that it is enumerated
            while the method is executed
            </summary>
        </member>
        <member name="T:Corale.Colore.Annotations.PureAttribute">
            <summary>
            Indicates that a method does not make any observable state changes.
            The same as <c>System.Diagnostics.Contracts.PureAttribute</c>
            </summary>
            <example><code>
            [Pure] private int Multiply(int x, int y) { return x * y; }
            public void Foo() {
              const int a = 2, b = 2;
              Multiply(a, b); // Waring: Return value of pure method is not used
            }
            </code></example>
        </member>
        <member name="T:Corale.Colore.Annotations.PathReferenceAttribute">
            <summary>
            Indicates that a parameter is a path to a file or a folder within a web project.
            Path can be relative or absolute, starting from web root (~)
            </summary>
        </member>
        <member name="T:Corale.Colore.Annotations.AspMvcActionAttribute">
            <summary>
            ASP.NET MVC attribute. If applied to a parameter, indicates that the parameter
            is an MVC action. If applied to a method, the MVC action name is calculated
            implicitly from the context. Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Html.ChildActionExtensions.RenderAction(HtmlHelper, String)</c>
            </summary>
        </member>
        <member name="T:Corale.Colore.Annotations.AspMvcAreaAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC area.
            Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Html.ChildActionExtensions.RenderAction(HtmlHelper, String)</c>
            </summary>
        </member>
        <member name="T:Corale.Colore.Annotations.AspMvcControllerAttribute">
            <summary>
            ASP.NET MVC attribute. If applied to a parameter, indicates that the parameter is
            an MVC controller. If applied to a method, the MVC controller name is calculated
            implicitly from the context. Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Html.ChildActionExtensions.RenderAction(HtmlHelper, String, String)</c>
            </summary>
        </member>
        <member name="T:Corale.Colore.Annotations.AspMvcMasterAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC Master. Use this attribute
            for custom wrappers similar to <c>System.Web.Mvc.Controller.View(String, String)</c>
            </summary>
        </member>
        <member name="T:Corale.Colore.Annotations.AspMvcModelTypeAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC model type. Use this attribute
            for custom wrappers similar to <c>System.Web.Mvc.Controller.View(String, Object)</c>
            </summary>
        </member>
        <member name="T:Corale.Colore.Annotations.AspMvcPartialViewAttribute">
            <summary>
            ASP.NET MVC attribute. If applied to a parameter, indicates that the parameter is an MVC
            partial view. If applied to a method, the MVC partial view name is calculated implicitly
            from the context. Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Html.RenderPartialExtensions.RenderPartial(HtmlHelper, String)</c>
            </summary>
        </member>
        <member name="T:Corale.Colore.Annotations.AspMvcSupressViewErrorAttribute">
            <summary>
            ASP.NET MVC attribute. Allows disabling inspections for MVC views within a class or a method
            </summary>
        </member>
        <member name="T:Corale.Colore.Annotations.AspMvcDisplayTemplateAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC display template.
            Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(HtmlHelper, String)</c>
            </summary>
        </member>
        <member name="T:Corale.Colore.Annotations.AspMvcEditorTemplateAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC editor template.
            Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Html.EditorExtensions.EditorForModel(HtmlHelper, String)</c>
            </summary>
        </member>
        <member name="T:Corale.Colore.Annotations.AspMvcTemplateAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC template.
            Use this attribute for custom wrappers similar to
            <c>System.ComponentModel.DataAnnotations.UIHintAttribute(System.String)</c>
            </summary>
        </member>
        <member name="T:Corale.Colore.Annotations.AspMvcViewAttribute">
            <summary>
            ASP.NET MVC attribute. If applied to a parameter, indicates that the parameter
            is an MVC view. If applied to a method, the MVC view name is calculated implicitly
            from the context. Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Controller.View(Object)</c>
            </summary>
        </member>
        <member name="T:Corale.Colore.Annotations.AspMvcActionSelectorAttribute">
            <summary>
            ASP.NET MVC attribute. When applied to a parameter of an attribute,
            indicates that this parameter is an MVC action name
            </summary>
            <example><code>
            [ActionName("Foo")]
            public ActionResult Login(string returnUrl) {
              ViewBag.ReturnUrl = Url.Action("Foo"); // OK
              return RedirectToAction("Bar"); // Error: Cannot resolve action
            }
            </code></example>
        </member>
        <member name="T:Corale.Colore.Annotations.RazorSectionAttribute">
            <summary>
            Razor attribute. Indicates that a parameter or a method is a Razor section.
            Use this attribute for custom wrappers similar to
            <c>System.Web.WebPages.WebPageBase.RenderSection(String)</c>
            </summary>
        </member>
        <member name="T:Corale.Colore.Annotations.CollectionAccessAttribute">
            <summary>
            Indicates how method invocation affects content of the collection
            </summary>
        </member>
        <member name="F:Corale.Colore.Annotations.CollectionAccessType.None">
            <summary>Method does not use or modify content of the collection</summary>
        </member>
        <member name="F:Corale.Colore.Annotations.CollectionAccessType.Read">
            <summary>Method only reads content of the collection but does not modify it</summary>
        </member>
        <member name="F:Corale.Colore.Annotations.CollectionAccessType.ModifyExistingContent">
            <summary>Method can change content of the collection but does not add new elements</summary>
        </member>
        <member name="F:Corale.Colore.Annotations.CollectionAccessType.UpdatedContent">
            <summary>Method can add new elements to the collection</summary>
        </member>
        <member name="T:Corale.Colore.Annotations.AssertionMethodAttribute">
            <summary>
            Indicates that the marked method is assertion method, i.e. it halts control flow if
            one of the conditions is satisfied. To set the condition, mark one of the parameters with
            <see cref="T:Corale.Colore.Annotations.AssertionConditionAttribute"/> attribute
            </summary>
        </member>
        <member name="T:Corale.Colore.Annotations.AssertionConditionAttribute">
            <summary>
            Indicates the condition parameter of the assertion method. The method itself should be
            marked by <see cref="T:Corale.Colore.Annotations.AssertionMethodAttribute"/> attribute. The mandatory argument of
            the attribute is the assertion type.
            </summary>
        </member>
        <member name="T:Corale.Colore.Annotations.AssertionConditionType">
            <summary>
            Specifies assertion type. If the assertion method argument satisfies the condition,
            then the execution continues. Otherwise, execution is assumed to be halted
            </summary>
        </member>
        <member name="F:Corale.Colore.Annotations.AssertionConditionType.IS_TRUE">
            <summary>Marked parameter should be evaluated to true</summary>
        </member>
        <member name="F:Corale.Colore.Annotations.AssertionConditionType.IS_FALSE">
            <summary>Marked parameter should be evaluated to false</summary>
        </member>
        <member name="F:Corale.Colore.Annotations.AssertionConditionType.IS_NULL">
            <summary>Marked parameter should be evaluated to null value</summary>
        </member>
        <member name="F:Corale.Colore.Annotations.AssertionConditionType.IS_NOT_NULL">
            <summary>Marked parameter should be evaluated to not null value</summary>
        </member>
        <member name="T:Corale.Colore.Annotations.TerminatesProgramAttribute">
            <summary>
            Indicates that the marked method unconditionally terminates control flow execution.
            For example, it could unconditionally throw exception
            </summary>
        </member>
        <member name="T:Corale.Colore.Annotations.LinqTunnelAttribute">
            <summary>
            Indicates that method is pure LINQ method, with postponed enumeration (like Enumerable.Select,
            .Where). This annotation allows inference of [InstantHandle] annotation for parameters
            of delegate type by analyzing LINQ method chains.
            </summary>
        </member>
        <member name="T:Corale.Colore.Annotations.NoEnumerationAttribute">
            <summary>
            Indicates that IEnumerable, passed as parameter, is not enumerated.
            </summary>
        </member>
        <member name="T:Corale.Colore.Annotations.RegexPatternAttribute">
            <summary>
            Indicates that parameter is regular expression pattern.
            </summary>
        </member>
        <member name="T:Corale.Colore.Annotations.XamlItemsControlAttribute">
            <summary>
            XAML attribute. Indicates the type that has <c>ItemsSource</c> property and should be
            treated as <c>ItemsControl</c>-derived type, to enable inner  items <c>DataContext</c>
            type resolve.
            </summary>
        </member>
        <member name="T:Corale.Colore.Annotations.XamlItemBindingOfItemsControlAttribute">
            <summary>
            XAML attibute. Indicates the property of some <c>BindingBase</c>-derived type, that
            is used to bind some item of <c>ItemsControl</c>-derived type. This annotation will
            enable the <c>DataContext</c> type resolve for XAML bindings for such properties.
            </summary>
            <remarks>
            Property should have the tree ancestor of the <c>ItemsControl</c> type or
            marked with the <see cref="T:Corale.Colore.Annotations.XamlItemsControlAttribute"/> attribute.
            </remarks>
        </member>
        <member name="T:Corale.Colore.Annotations.NoReorder">
            <summary>
            Prevents the Member Reordering feature from tossing members of the marked class.
            </summary>
            <remarks>
            The attribute must be mentioned in your member reordering patterns.
            </remarks>
        </member>
        <member name="T:Corale.Colore.Razer.Constants">
            <summary>
            The definitions of generic constant values used in the project
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Constants.WmChromaEvent">
            <summary>
            Used by Razer code to send Chroma event messages.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Constants.WmApp">
            <summary>
            Used to define private messages, usually of the form WM_APP+x, where x is an integer value.
            </summary>
            <remarks>
            The <strong>WM_APP</strong> constant is used to distinguish between message values
            that are reserved for use by the system and values that can be used by an
            application to send messages within a private window class.
            </remarks>
        </member>
        <member name="T:Corale.Colore.Razer.DeviceInfo">
            <summary>
            Information about a device.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.DeviceInfo.Type">
            <summary>
            The type of device this is.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.DeviceInfo.Connected">
            <summary>
            Whether this device is connected.
            </summary>
        </member>
        <member name="T:Corale.Colore.Razer.Devices">
            <summary>
            Contains device IDs for devices that have Chroma support.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Devices.BlackwidowChroma">
            <summary>
            Blackwidow Chroma edition.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Devices.DeathadderChroma">
            <summary>
            Deathadder Chroma edition.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Devices.Kraken71Chroma">
            <summary>
            Kraken 7.1 Chroma edition.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Devices.FireflyChroma">
            <summary>
            Firefly Chroma edition.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Devices.OrbweaverChroma">
            <summary>
            Orbweaver Chroma edition.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Devices.TartarusChroma">
            <summary>
            Tartarus Chroma edition.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Devices.MambaTeChroma">
            <summary>
            Mamba TE Chroma edition.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Devices.BlackwidowTeChroma">
            <summary>
            BlackWidow TE Chroma edition.
            </summary>
        </member>
        <member name="M:Corale.Colore.Razer.Devices.IsValidId(System.Guid)">
            <summary>
            Returns whether a specified <see cref="T:System.Guid" /> is a valid device identifier.
            </summary>
            <param name="id">the <see cref="T:System.Guid" /> to check.</param>
            <returns><c>true</c> if it's a valid device identifier, otherwise <c>false</c>.</returns>
        </member>
        <member name="T:Corale.Colore.Razer.DeviceType">
            <summary>
            Device types supported by the Chroma SDK.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.DeviceType.Keyboard">
            <summary>
            A keyboard device.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.DeviceType.Mouse">
            <summary>
            A mouse device.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.DeviceType.Headset">
            <summary>
            A headset device.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.DeviceType.Mousepad">
            <summary>
            A mouse pad.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.DeviceType.Keypad">
            <summary>
            A keypad.
            </summary>
        </member>
        <member name="T:Corale.Colore.Razer.Effect">
            <summary>
            Generic device effects.
            </summary>
            <remarks>Not all devices are compatible with every effect type.</remarks>
        </member>
        <member name="F:Corale.Colore.Razer.Effect.None">
            <summary>
            No effect.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Effect.Wave">
            <summary>
            The wave effect.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Effect.SpectrumCycling">
            <summary>
            Spectrum cycling effect.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Effect.Breathing">
            <summary>
            Slowly fades between two colors.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Effect.Blinking">
            <summary>
            A blinking effect.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Effect.Reactive">
            <summary>
            Reacts to input.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Effect.Static">
            <summary>
            Static color.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Effect.Custom">
            <summary>
            A custom effect.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Effect.Invalid">
            <summary>
            Invalid effect.
            </summary>
        </member>
        <member name="T:Corale.Colore.Razer.Headset.Effects.Breathing">
            <summary>
            A breathing effect for a headset.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Headset.Effects.Breathing.Color">
            <summary>
            The color of the effect.
            </summary>
        </member>
        <member name="M:Corale.Colore.Razer.Headset.Effects.Breathing.#ctor(Corale.Colore.Core.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Corale.Colore.Razer.Headset.Effects.Breathing" /> struct.
            </summary>
            <param name="color">The color to set.</param>
        </member>
        <member name="T:Corale.Colore.Razer.Headset.Effects.Effect">
            <summary>
            Standard effects for headsets.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Headset.Effects.Effect.None">
            <summary>
            No effect.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Headset.Effects.Effect.Static">
            <summary>
            Static color.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Headset.Effects.Effect.Breathing">
            <summary>
            Slow fade between two colors.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Headset.Effects.Effect.SpectrumCycling">
            <summary>
            Cycles the entire spectrum.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Headset.Effects.Effect.Invalid">
            <summary>
            Invalid effect.
            </summary>
        </member>
        <member name="T:Corale.Colore.Razer.Headset.Effects.Static">
            <summary>
            Static color effect.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Headset.Effects.Static.Color">
            <summary>
            The <see cref="F:Corale.Colore.Razer.Headset.Effects.Static.Color" /> of the effect.
            </summary>
        </member>
        <member name="M:Corale.Colore.Razer.Headset.Effects.Static.#ctor(Corale.Colore.Core.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Corale.Colore.Razer.Headset.Effects.Static" /> struct.
            </summary>
            <param name="color">The <see cref="F:Corale.Colore.Razer.Headset.Effects.Static.Color" /> to set.</param>
        </member>
        <member name="T:Corale.Colore.Razer.Keyboard.Constants">
            <summary>
            Holds various keyboard constants used in Razer's API.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Constants.MaxRows">
            <summary>
            The maximum number of rows on the keyboard
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Constants.MaxColumns">
            <summary>
            The maximum number of columns on the keyboard
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Constants.MaxKeys">
            <summary>
            The maximum number of keys on the keyboard
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Constants.MaxCustomEffects">
            <summary>
            The maximum number of custom effects based on the maximum keys
            </summary>
        </member>
        <member name="T:Corale.Colore.Razer.Keyboard.Effects.Breathing">
            <summary>
            Describes the breathing effect.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Effects.Breathing.First">
            <summary>
            First color.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Effects.Breathing.Second">
            <summary>
            Second color.
            </summary>
        </member>
        <member name="M:Corale.Colore.Razer.Keyboard.Effects.Breathing.#ctor(Corale.Colore.Core.Color,Corale.Colore.Core.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Corale.Colore.Razer.Keyboard.Effects.Breathing" /> struct.
            </summary>
            <param name="first">First color.</param>
            <param name="second">Second color.</param>
        </member>
        <member name="T:Corale.Colore.Razer.Keyboard.Effects.Custom">
            <summary>
            Describes a custom grid effect for every key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Effects.Custom._rows">
            <summary>
            Color definitions for each key on the keyboard.
            </summary>
            <remarks>
            The array is 2-dimensional, with the first dimension
            specifying the row for the key, and the second the column.
            </remarks>
        </member>
        <member name="M:Corale.Colore.Razer.Keyboard.Effects.Custom.#ctor(Corale.Colore.Core.Color[][])">
            <summary>
            Initializes a new instance of the <see cref="T:Corale.Colore.Razer.Keyboard.Effects.Custom" /> struct.
            </summary>
            <param name="colors">The colors to use.</param>
            <exception cref="T:System.ArgumentException">Thrown if the colors array supplied is of an incorrect size.</exception>
        </member>
        <member name="M:Corale.Colore.Razer.Keyboard.Effects.Custom.#ctor(Corale.Colore.Core.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Corale.Colore.Razer.Keyboard.Effects.Custom" /> struct
            with every position set to a specific color.
            </summary>
            <param name="color">The <see cref="T:Corale.Colore.Core.Color" /> to set each position to.</param>
        </member>
        <member name="P:Corale.Colore.Razer.Keyboard.Effects.Custom.Item(System.Int32,System.Int32)">
            <summary>
            Gets or sets cells in the custom grid.
            </summary>
            <param name="row">Row to access, zero indexed.</param>
            <param name="column">Column to access, zero indexed.</param>
            <returns>The <see cref="T:Corale.Colore.Core.Color" /> at the specified position.</returns>
        </member>
        <member name="P:Corale.Colore.Razer.Keyboard.Effects.Custom.Item(Corale.Colore.Razer.Keyboard.Key)">
            <summary>
            Gets or sets the color for a specific key in the custom grid.
            </summary>
            <param name="key">The <see cref="T:Corale.Colore.Razer.Keyboard.Key" /> to access.</param>
            <returns>The <see cref="T:Corale.Colore.Core.Color" /> for the specified key.</returns>
            <remarks>
            Please note that the position of a key accessed in this way is not
            guaranteed to be correct, as different layouts on different keyboards
            can place these keys in other locations.
            </remarks>
        </member>
        <member name="M:Corale.Colore.Razer.Keyboard.Effects.Custom.op_Equality(Corale.Colore.Razer.Keyboard.Effects.Custom,System.Object)">
            <summary>
            Compares an instance of <see cref="T:Corale.Colore.Razer.Keyboard.Effects.Custom" /> with
            another object for equality.
            </summary>
            <param name="left">The left operand, an instance of <see cref="T:Corale.Colore.Razer.Keyboard.Effects.Custom" />.</param>
            <param name="right">The right operand, any type of object.</param>
            <returns><c>true</c> if the two objects are equal, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Corale.Colore.Razer.Keyboard.Effects.Custom.op_Inequality(Corale.Colore.Razer.Keyboard.Effects.Custom,System.Object)">
            <summary>
            Compares an instance of <see cref="T:Corale.Colore.Razer.Keyboard.Effects.Custom" /> with
            another object for inequality.
            </summary>
            <param name="left">The left operand, an instance of <see cref="T:Corale.Colore.Razer.Keyboard.Effects.Custom" />.</param>
            <param name="right">The right operand, any type of object.</param>
            <returns><c>true</c> if the two objects are not equal, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Corale.Colore.Razer.Keyboard.Effects.Custom.Create">
            <summary>
            Creates a new empty <see cref="T:Corale.Colore.Razer.Keyboard.Effects.Custom" /> struct.
            </summary>
            <returns>An instance of <see cref="T:Corale.Colore.Razer.Keyboard.Effects.Custom" />
            filled with the color black.</returns>
        </member>
        <member name="M:Corale.Colore.Razer.Keyboard.Effects.Custom.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>
            A 32-bit signed integer that is the hash code for this instance.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Corale.Colore.Razer.Keyboard.Effects.Custom.Clear">
            <summary>
            Clears the colors from the grid, setting them to <see cref="F:Corale.Colore.Core.Color.Black" />.
            </summary>
        </member>
        <member name="M:Corale.Colore.Razer.Keyboard.Effects.Custom.Equals(System.Object)">
            <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
            <returns>
            <c>true</c> if <paramref name="obj"/> and this instance are of compatible types
            and represent the same value; otherwise, <c>false</c>.
            </returns>
            <param name="obj">Another object to compare to. </param>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Corale.Colore.Razer.Keyboard.Effects.Custom.Equals(Corale.Colore.Razer.Keyboard.Effects.Custom)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            <c>true</c> if the current object is equal to the <paramref name="other"/> parameter;
            otherwise, <c>false</c>.
            </returns>
            <param name="other">A <see cref="T:Corale.Colore.Razer.Keyboard.Effects.Custom" /> to compare with this object.</param>
        </member>
        <member name="M:Corale.Colore.Razer.Keyboard.Effects.Custom.Equals(Corale.Colore.Core.Color[][])">
            <summary>
            Indicates whether the current object is equal to an instance of
            a 2-dimensional array of <see cref="T:Corale.Colore.Core.Color" />.
            </summary>
            <returns>
            <c>true</c> if the <paramref name="other" /> object has the same
            number of rows and columns, and contain matching colors; otherwise, <c>false</c>.
            </returns>
            <param name="other">
            A 2-dimensional array of <see cref="T:Corale.Colore.Core.Color" /> to compare with this object.
            </param>
        </member>
        <member name="M:Corale.Colore.Razer.Keyboard.Effects.Custom.Set(Corale.Colore.Core.Color)">
            <summary>
            Sets the entire grid to a specific <see cref="T:Corale.Colore.Core.Color" />.
            </summary>
            <param name="color">The <see cref="T:Corale.Colore.Core.Color" /> to apply.</param>
        </member>
        <member name="T:Corale.Colore.Razer.Keyboard.Effects.Custom.Row">
            <summary>
            Container struct holding color definitions for a single row in the custom grid.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Effects.Custom.Row._columns">
            <summary>
            Color definitions for the columns of this row.
            </summary>
        </member>
        <member name="M:Corale.Colore.Razer.Keyboard.Effects.Custom.Row.#ctor(System.Collections.Generic.IList{Corale.Colore.Core.Color})">
            <summary>
            Initializes a new instance of the <see cref="T:Corale.Colore.Razer.Keyboard.Effects.Custom.Row" /> struct.
            </summary>
            <param name="colors">Colors for this row.</param>
        </member>
        <member name="M:Corale.Colore.Razer.Keyboard.Effects.Custom.Row.#ctor(Corale.Colore.Core.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Corale.Colore.Razer.Keyboard.Effects.Custom.Row" /> struct
            setting each column to a specific color.
            </summary>
            <param name="color">The <see cref="T:Corale.Colore.Core.Color" /> to set each column to.</param>
        </member>
        <member name="P:Corale.Colore.Razer.Keyboard.Effects.Custom.Row.Item(System.Int32)">
            <summary>
            Gets or sets a column's <see cref="T:Corale.Colore.Core.Color" />.
            </summary>
            <param name="column">The column index to access (zero-index).</param>
            <returns>The <see cref="T:Corale.Colore.Core.Color" /> at the specified column index.</returns>
        </member>
        <member name="M:Corale.Colore.Razer.Keyboard.Effects.Custom.Row.op_Implicit(Corale.Colore.Razer.Keyboard.Effects.Custom.Row)~System.UInt32[]">
            <summary>
            Converts an instance of the <see cref="T:Corale.Colore.Razer.Keyboard.Effects.Custom.Row" /> struct to an array of unsigned integers.
            </summary>
            <param name="row">The <see cref="T:Corale.Colore.Razer.Keyboard.Effects.Custom.Row" /> object to convert.</param>
            <returns>An array of unsigned integeres representing the colors of the row.</returns>
        </member>
        <member name="M:Corale.Colore.Razer.Keyboard.Effects.Custom.Row.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>
            A 32-bit signed integer that is the hash code for this instance.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Corale.Colore.Razer.Keyboard.Effects.Custom.Row.Set(Corale.Colore.Core.Color)">
            <summary>
            Sets the entire row to a specific <see cref="T:Corale.Colore.Core.Color" />.
            </summary>
            <param name="color">The <see cref="T:Corale.Colore.Core.Color" /> to apply.</param>
        </member>
        <member name="T:Corale.Colore.Razer.Keyboard.Effects.Direction">
            <summary>
            Direction of the wave effect.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Effects.Direction.None">
            <summary>
            No direction.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Effects.Direction.LeftToRight">
            <summary>
            Left to right.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Effects.Direction.RightToLeft">
            <summary>
            Right to left.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Effects.Direction.Invalid">
            <summary>
            Invalid direction.
            </summary>
        </member>
        <member name="T:Corale.Colore.Razer.Keyboard.Effects.Duration">
            <summary>
            Supported duration lengths.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Effects.Duration.None">
            <summary>
            No duration.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Effects.Duration.Short">
            <summary>
            Short duration.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Effects.Duration.Medium">
            <summary>
            Medium duration.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Effects.Duration.Long">
            <summary>
            Long duration.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Effects.Duration.Invalid">
            <summary>
            Invalid duration.
            </summary>
        </member>
        <member name="T:Corale.Colore.Razer.Keyboard.Effects.Effect">
            <summary>
            Supported built-in keyboard effects.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Effects.Effect.None">
            <summary>
            No effect.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Effects.Effect.Breathing">
            <summary>
            Breathing effect.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Effects.Effect.Custom">
            <summary>
            Custom effect.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Effects.Effect.Reactive">
            <summary>
            Reactive effect.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Effects.Effect.Static">
            <summary>
            Static effect.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Effects.Effect.SpectrumCycling">
            <summary>
            Spectrum cycling effect.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Effects.Effect.Wave">
            <summary>
            Wave effect.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Effects.Effect.Invalid">
            <summary>
            Invalid effect.
            </summary>
        </member>
        <member name="T:Corale.Colore.Razer.Keyboard.Effects.Reactive">
            <summary>
            Describes the reactive effect type.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Effects.Reactive.Duration">
            <summary>
            The duration of the effect.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Effects.Reactive.Color">
            <summary>
            Color of the effect.
            </summary>
        </member>
        <member name="M:Corale.Colore.Razer.Keyboard.Effects.Reactive.#ctor(Corale.Colore.Core.Color,Corale.Colore.Razer.Keyboard.Effects.Duration)">
            <summary>
            Initializes a new instance of the <see cref="T:Corale.Colore.Razer.Keyboard.Effects.Reactive" /> struct.
            </summary>
            <param name="color">Color to apply when key is hit.</param>
            <param name="duration">Duration to illuminate the key.</param>
        </member>
        <member name="T:Corale.Colore.Razer.Keyboard.Effects.Static">
            <summary>
            Describes the static effect type.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Effects.Static.Color">
            <summary>
            Color of the effect.
            </summary>
        </member>
        <member name="M:Corale.Colore.Razer.Keyboard.Effects.Static.#ctor(Corale.Colore.Core.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Corale.Colore.Razer.Keyboard.Effects.Static" /> struct.
            </summary>
            <param name="color">Color to apply.</param>
        </member>
        <member name="T:Corale.Colore.Razer.Keyboard.Effects.Wave">
            <summary>
            The wave effect for the keyboard.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Effects.Wave.Direction">
            <summary>
            Direction of wave effect.
            </summary>
        </member>
        <member name="M:Corale.Colore.Razer.Keyboard.Effects.Wave.#ctor(Corale.Colore.Razer.Keyboard.Effects.Direction)">
            <summary>
            Initializes a new instance of the <see cref="T:Corale.Colore.Razer.Keyboard.Effects.Wave" /> struct.
            </summary>
            <param name="direction">Direction of the wave.</param>
        </member>
        <member name="T:Corale.Colore.Razer.Keyboard.Key">
            <summary>
            Definition of all keys available on the keyboard.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.Escape">
            <summary>
            Esc key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.F1">
            <summary>
            F1 key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.F2">
            <summary>
            F2 key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.F3">
            <summary>
            F3 key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.F4">
            <summary>
            F4 key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.F5">
            <summary>
            F5 key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.F6">
            <summary>
            F6 key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.F7">
            <summary>
            F7 key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.F8">
            <summary>
            F8 key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.F9">
            <summary>
            F9 key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.F10">
            <summary>
            F10 key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.F11">
            <summary>
            F11 key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.F12">
            <summary>
            F12 key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.One">
            <summary>
            1 key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.Two">
            <summary>
            2 key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.Three">
            <summary>
            3 key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.Four">
            <summary>
            4 key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.Five">
            <summary>
            5 key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.Six">
            <summary>
            6 key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.Seven">
            <summary>
            7 key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.Eight">
            <summary>
            8 key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.Nine">
            <summary>
            9 key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.Zero">
            <summary>
            0 key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.A">
            <summary>
            A key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.B">
            <summary>
            B key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.C">
            <summary>
            C key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.D">
            <summary>
            D key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.E">
            <summary>
            E key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.F">
            <summary>
            F key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.G">
            <summary>
            G key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.H">
            <summary>
            H key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.I">
            <summary>
            I key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.J">
            <summary>
            J key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.K">
            <summary>
            K key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.L">
            <summary>
            L key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.M">
            <summary>
            M key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.N">
            <summary>
            N key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.O">
            <summary>
            O key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.P">
            <summary>
            P key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.Q">
            <summary>
            Q key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.R">
            <summary>
            R key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.S">
            <summary>
            S key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.T">
            <summary>
            T key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.U">
            <summary>
            U key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.V">
            <summary>
            V key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.W">
            <summary>
            W key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.X">
            <summary>
            X key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.Y">
            <summary>
            Y key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.Z">
            <summary>
            Z key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.NumLock">
            <summary>
            Numlock key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.Num0">
            <summary>
            Numpad 0.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.Num1">
            <summary>
            Numpad 1.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.Num2">
            <summary>
            Numpad 2.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.Num3">
            <summary>
            Numpad 3.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.Num4">
            <summary>
            Numpad 4.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.Num5">
            <summary>
            Numpad 5.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.Num6">
            <summary>
            Numpad 6.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.Num7">
            <summary>
            Numpad 7.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.Num8">
            <summary>
            Numpad 8.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.Num9">
            <summary>
            Numpad 9.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.NumDivide">
            <summary>
            Divide key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.NumMultiply">
            <summary>
            Multiply key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.NumSubtract">
            <summary>
            Subtract key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.NumAdd">
            <summary>
            Add key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.NumEnter">
            <summary>
            Enter key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.NumDecimal">
            <summary>
            Decimal key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.PrintScreen">
            <summary>
            Print Screen.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.Scroll">
            <summary>
            Scroll Lock.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.Pause">
            <summary>
            Pause key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.Insert">
            <summary>
            Insert key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.Home">
            <summary>
            Home key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.PageUp">
            <summary>
            Page Up.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.Delete">
            <summary>
            Delete key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.End">
            <summary>
            End key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.PageDown">
            <summary>
            Page Down key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.Up">
            <summary>
            Up key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.Left">
            <summary>
            Left key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.Down">
            <summary>
            Down key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.Right">
            <summary>
            Right key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.Tab">
            <summary>
            Tab key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.CapsLock">
            <summary>
            Caps Lock.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.Backspace">
            <summary>
            Backspace key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.Enter">
            <summary>
            Enter key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.LeftControl">
            <summary>
            Left control key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.LeftWindows">
            <summary>
            Left windows key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.LeftAlt">
            <summary>
            Left alt key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.Space">
            <summary>
            Spacebar key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.RightAlt">
            <summary>
            Right alt key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.Function">
            <summary>
            "Fn" function key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.RightMenu">
            <summary>
            Right menu key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.RightControl">
            <summary>
            Right control key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.LeftShift">
            <summary>
            Left shift key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.RightShift">
            <summary>
            Right shift key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.Macro1">
            <summary>
            Macro key 1.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.Macro2">
            <summary>
            Macro key 2.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.Macro3">
            <summary>
            Macro key 3.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.Macro4">
            <summary>
            Macro key 4.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.Macro5">
            <summary>
            Macro Key 5.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.Oem1">
            <summary>
            Tilde (~) key. 半角/全角.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.Oem2">
            <summary>
            Minus (-) key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.Oem3">
            <summary>
            Equal sign (=) key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.Oem4">
            <summary>
            Left square bracket ([) key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.Oem5">
            <summary>
            Right square bracket (]) key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.Oem6">
            <summary>
            Forwards slash (/) key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.Oem7">
            <summary>
            Semi-colon (;) key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.Oem8">
            <summary>
            Apostrophe (') key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.Oem9">
            <summary>
            Comma (,) key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.Oem10">
            <summary>
            Period/full stop (.) key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.Oem11">
            <summary>
            Backslash (\) key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.Eur1">
            <summary>
            Pound sign (#) key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.Eur2">
            <summary>
            Backslash (\) key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.Jpn1">
            <summary>
            Yen (¥) key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.Jpn2">
            <summary>
            Forward slash (/) key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.Jpn3">
            <summary>
            無変換 key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.Jpn4">
            <summary>
            変換 key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.Jpn5">
            <summary>
            ひらがな/カタカナ key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.Kor1">
            <summary>
            Pipe character (|) key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.Kor2">
            <summary>
            Unknown Korean key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.Kor3">
            <summary>
            Unknown Korean key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.Kor4">
            <summary>
            Unknown Korean key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.Kor5">
            <summary>
            한자 key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.Kor6">
            <summary>
            한/영 key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.Kor7">
            <summary>
            Unknown Korean key.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keyboard.Key.Invalid">
            <summary>
            Invalid key.
            </summary>
        </member>
        <member name="T:Corale.Colore.Razer.Keypad.Constants">
            <summary>
            Keypad constants.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keypad.Constants.MaxRows">
            <summary>
            Maximum number of rows.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keypad.Constants.MaxColumns">
            <summary>
            Maximum number of columns.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keypad.Constants.MaxKeys">
            <summary>
            Total number of keys.
            </summary>
        </member>
        <member name="T:Corale.Colore.Razer.Keypad.Effects.Breathing">
            <summary>
            Breathing effect.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keypad.Effects.Breathing.Type">
            <summary>
            The type of breathing.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keypad.Effects.Breathing.First">
            <summary>
            Initial color.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keypad.Effects.Breathing.Second">
            <summary>
            Second color.
            </summary>
        </member>
        <member name="M:Corale.Colore.Razer.Keypad.Effects.Breathing.#ctor(Corale.Colore.Razer.Keypad.Effects.BreathingType,Corale.Colore.Core.Color,Corale.Colore.Core.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Corale.Colore.Razer.Keypad.Effects.Breathing" /> struct.
            </summary>
            <param name="type">The type of breathing effect.</param>
            <param name="first">Initial color.</param>
            <param name="second">Second color.</param>
        </member>
        <member name="M:Corale.Colore.Razer.Keypad.Effects.Breathing.#ctor(Corale.Colore.Core.Color,Corale.Colore.Core.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Corale.Colore.Razer.Keypad.Effects.Breathing" /> struct using
            the <see cref="F:Corale.Colore.Razer.Keypad.Effects.BreathingType.Two" /> breathing type.
            </summary>
            <param name="first">Initial color.</param>
            <param name="second">Second color.</param>
        </member>
        <member name="T:Corale.Colore.Razer.Keypad.Effects.BreathingType">
            <summary>
            Breathing types supported for keypads.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keypad.Effects.BreathingType.Two">
            <summary>
            Breathes between two colors.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keypad.Effects.BreathingType.Random">
            <summary>
            Breathes between randomly selected colors.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keypad.Effects.BreathingType.Invalid">
            <summary>
            Invalid breathing type.
            </summary>
        </member>
        <member name="T:Corale.Colore.Razer.Keypad.Effects.Custom">
            <summary>
            Custom effect.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keypad.Effects.Custom._rows">
            <summary>
            Color definitions for each key on the keypad.
            </summary>
            <remarks>
            The array is 2-dimensional, with the first dimension
            specifying the row for the key, and the second the column.
            </remarks>
        </member>
        <member name="M:Corale.Colore.Razer.Keypad.Effects.Custom.#ctor(Corale.Colore.Core.Color[][])">
            <summary>
            Initializes a new instance of the <see cref="T:Corale.Colore.Razer.Keypad.Effects.Custom" /> struct.
            </summary>
            <param name="colors">The colors to use.</param>
            <exception cref="T:System.ArgumentException">Thrown if the colors array supplied is of an incorrect size.</exception>
        </member>
        <member name="M:Corale.Colore.Razer.Keypad.Effects.Custom.#ctor(Corale.Colore.Core.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Corale.Colore.Razer.Keypad.Effects.Custom" /> struct
            with every position set to a specific color.
            </summary>
            <param name="color">The <see cref="T:Corale.Colore.Core.Color" /> to set each position to.</param>
        </member>
        <member name="P:Corale.Colore.Razer.Keypad.Effects.Custom.Item(System.Int32,System.Int32)">
            <summary>
            Gets or sets cells in the custom grid.
            </summary>
            <param name="row">Row to access, zero indexed.</param>
            <param name="column">Column to access, zero indexed.</param>
            <returns>The <see cref="T:Corale.Colore.Core.Color" /> at the specified position.</returns>
        </member>
        <member name="M:Corale.Colore.Razer.Keypad.Effects.Custom.op_Equality(Corale.Colore.Razer.Keypad.Effects.Custom,System.Object)">
            <summary>
            Compares an instance of <see cref="T:Corale.Colore.Razer.Keypad.Effects.Custom" /> with
            another object for equality.
            </summary>
            <param name="left">The left operand, an instance of <see cref="T:Corale.Colore.Razer.Keypad.Effects.Custom" />.</param>
            <param name="right">The right operand, any type of object.</param>
            <returns><c>true</c> if the two objects are equal, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Corale.Colore.Razer.Keypad.Effects.Custom.op_Inequality(Corale.Colore.Razer.Keypad.Effects.Custom,System.Object)">
            <summary>
            Compares an instance of <see cref="T:Corale.Colore.Razer.Keypad.Effects.Custom" /> with
            another object for inequality.
            </summary>
            <param name="left">The left operand, an instance of <see cref="T:Corale.Colore.Razer.Keypad.Effects.Custom" />.</param>
            <param name="right">The right operand, any type of object.</param>
            <returns><c>true</c> if the two objects are not equal, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Corale.Colore.Razer.Keypad.Effects.Custom.Create">
            <summary>
            Creates a new empty <see cref="T:Corale.Colore.Razer.Keypad.Effects.Custom" /> struct.
            </summary>
            <returns>An instance of <see cref="T:Corale.Colore.Razer.Keypad.Effects.Custom" />
            filled with the color black.</returns>
        </member>
        <member name="M:Corale.Colore.Razer.Keypad.Effects.Custom.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>
            A 32-bit signed integer that is the hash code for this instance.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Corale.Colore.Razer.Keypad.Effects.Custom.Set(Corale.Colore.Core.Color)">
            <summary>
            Sets all LED indices to the specified <see cref="T:Corale.Colore.Core.Color" />.
            </summary>
            <param name="color">The <see cref="T:Corale.Colore.Core.Color" /> to set.</param>
        </member>
        <member name="M:Corale.Colore.Razer.Keypad.Effects.Custom.Clear">
            <summary>
            Clears the colors from the grid, setting them to <see cref="F:Corale.Colore.Core.Color.Black" />.
            </summary>
        </member>
        <member name="M:Corale.Colore.Razer.Keypad.Effects.Custom.Equals(System.Object)">
            <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
            <returns>
            <c>true</c> if <paramref name="obj"/> and this instance are of compatible types
            and represent the same value; otherwise, <c>false</c>.
            </returns>
            <param name="obj">Another object to compare to. </param>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Corale.Colore.Razer.Keypad.Effects.Custom.Equals(Corale.Colore.Razer.Keypad.Effects.Custom)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            <c>true</c> if the current object is equal to the <paramref name="other"/> parameter;
            otherwise, <c>false</c>.
            </returns>
            <param name="other">A <see cref="T:Corale.Colore.Razer.Keypad.Effects.Custom" /> to compare with this object.</param>
        </member>
        <member name="M:Corale.Colore.Razer.Keypad.Effects.Custom.Equals(Corale.Colore.Core.Color[][])">
            <summary>
            Indicates whether the current object is equal to an instance of
            a 2-dimensional array of <see cref="T:Corale.Colore.Core.Color" />.
            </summary>
            <returns>
            <c>true</c> if the <paramref name="other" /> object has the same
            number of rows and columns, and contain matching colors; otherwise, <c>false</c>.
            </returns>
            <param name="other">
            A 2-dimensional array of <see cref="T:Corale.Colore.Core.Color" /> to compare with this object.
            </param>
        </member>
        <member name="T:Corale.Colore.Razer.Keypad.Effects.Custom.Row">
            <summary>
            Container struct holding color definitions for a single row in the custom grid.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keypad.Effects.Custom.Row._columns">
            <summary>
            Color definitions for the columns of this row.
            </summary>
        </member>
        <member name="M:Corale.Colore.Razer.Keypad.Effects.Custom.Row.#ctor(System.Collections.Generic.IList{Corale.Colore.Core.Color})">
            <summary>
            Initializes a new instance of the <see cref="T:Corale.Colore.Razer.Keypad.Effects.Custom.Row" /> struct.
            </summary>
            <param name="colors">Colors for this row.</param>
        </member>
        <member name="M:Corale.Colore.Razer.Keypad.Effects.Custom.Row.#ctor(Corale.Colore.Core.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Corale.Colore.Razer.Keypad.Effects.Custom.Row" /> struct
            setting each column to a specific color.
            </summary>
            <param name="color">The <see cref="T:Corale.Colore.Core.Color" /> to set each column to.</param>
        </member>
        <member name="P:Corale.Colore.Razer.Keypad.Effects.Custom.Row.Item(System.Int32)">
            <summary>
            Gets or sets a column's <see cref="T:Corale.Colore.Core.Color" />.
            </summary>
            <param name="column">The column index to access (zero-index).</param>
            <returns>The <see cref="T:Corale.Colore.Core.Color" /> at the specified column index.</returns>
        </member>
        <member name="M:Corale.Colore.Razer.Keypad.Effects.Custom.Row.op_Implicit(Corale.Colore.Razer.Keypad.Effects.Custom.Row)~System.UInt32[]">
            <summary>
            Converts an instance of the <see cref="T:Corale.Colore.Razer.Keypad.Effects.Custom.Row" /> struct to an array of unsigned integers.
            </summary>
            <param name="row">The <see cref="T:Corale.Colore.Razer.Keypad.Effects.Custom.Row" /> object to convert.</param>
            <returns>An array of unsigned integeres representing the colors of the row.</returns>
        </member>
        <member name="M:Corale.Colore.Razer.Keypad.Effects.Custom.Row.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>
            A 32-bit signed integer that is the hash code for this instance.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Corale.Colore.Razer.Keypad.Effects.Custom.Row.Set(Corale.Colore.Core.Color)">
            <summary>
            Sets the entire row to a specific <see cref="T:Corale.Colore.Core.Color" />.
            </summary>
            <param name="color">The <see cref="T:Corale.Colore.Core.Color" /> to apply.</param>
        </member>
        <member name="T:Corale.Colore.Razer.Keypad.Effects.Direction">
            <summary>
            Directions for the wave effect type.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keypad.Effects.Direction.None">
            <summary>
            No direction.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keypad.Effects.Direction.LeftToRight">
            <summary>
            Wave goes from left to right.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keypad.Effects.Direction.RightToLeft">
            <summary>
            Wave goes from right to left.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keypad.Effects.Direction.Invalid">
            <summary>
            Invalid direction.
            </summary>
        </member>
        <member name="T:Corale.Colore.Razer.Keypad.Effects.Duration">
            <summary>
            Supported durations for the reactive effect type.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keypad.Effects.Duration.None">
            <summary>
            No duration.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keypad.Effects.Duration.Short">
            <summary>
            Short duration.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keypad.Effects.Duration.Medium">
            <summary>
            Medium duration.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keypad.Effects.Duration.Long">
            <summary>
            Long duration.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keypad.Effects.Duration.Invalid">
            <summary>
            Invalid duration.
            </summary>
        </member>
        <member name="T:Corale.Colore.Razer.Keypad.Effects.Effect">
            <summary>
            Supported effects for Chroma keypads.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keypad.Effects.Effect.None">
            <summary>
            No effect.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keypad.Effects.Effect.Breathing">
            <summary>
            Breathing effect.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keypad.Effects.Effect.Custom">
            <summary>
            Custom effect.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keypad.Effects.Effect.Reactive">
            <summary>
            Reactive effect.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keypad.Effects.Effect.SpectrumCycling">
            <summary>
            Spectrum cycling.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keypad.Effects.Effect.Static">
            <summary>
            Static color.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keypad.Effects.Effect.Wave">
            <summary>
            Wave effect.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keypad.Effects.Effect.Invalid">
            <summary>
            Invalid effect.
            </summary>
        </member>
        <member name="T:Corale.Colore.Razer.Keypad.Effects.Reactive">
            <summary>
            Reactive effect.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keypad.Effects.Reactive.Duration">
            <summary>
            Duration of the effect.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keypad.Effects.Reactive.Color">
            <summary>
            Reaction color.
            </summary>
        </member>
        <member name="M:Corale.Colore.Razer.Keypad.Effects.Reactive.#ctor(Corale.Colore.Razer.Keypad.Effects.Duration,Corale.Colore.Core.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Corale.Colore.Razer.Keypad.Effects.Reactive" /> struct.
            </summary>
            <param name="duration">Duration of the effect.</param>
            <param name="color">Color of the effect.</param>
        </member>
        <member name="T:Corale.Colore.Razer.Keypad.Effects.Static">
            <summary>
            Static color effect.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keypad.Effects.Static.Color">
            <summary>
            Color to use.
            </summary>
        </member>
        <member name="M:Corale.Colore.Razer.Keypad.Effects.Static.#ctor(Corale.Colore.Core.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Corale.Colore.Razer.Keypad.Effects.Static" /> struct.
            </summary>
            <param name="color">Color to set.</param>
        </member>
        <member name="T:Corale.Colore.Razer.Keypad.Effects.Wave">
            <summary>
            Wave effect.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Keypad.Effects.Wave.Direction">
            <summary>
            Direction of the wave effect.
            </summary>
        </member>
        <member name="M:Corale.Colore.Razer.Keypad.Effects.Wave.#ctor(Corale.Colore.Razer.Keypad.Effects.Direction)">
            <summary>
            Initializes a new instance of the <see cref="T:Corale.Colore.Razer.Keypad.Effects.Wave" /> struct.
            </summary>
            <param name="direction">Direction of the effect.</param>
        </member>
        <member name="T:Corale.Colore.Razer.Mousepad.Constants">
            <summary>
            Mouse pad constants.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mousepad.Constants.MaxLeds">
            <summary>
            Maximum number of LEDs.
            </summary>
        </member>
        <member name="T:Corale.Colore.Razer.Mousepad.Effects.Breathing">
            <summary>
            A breathing effect.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mousepad.Effects.Breathing.Type">
            <summary>
            The type of breathing effect.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mousepad.Effects.Breathing.First">
            <summary>
            Initial color.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mousepad.Effects.Breathing.Second">
            <summary>
            Color to "breathe into".
            </summary>
        </member>
        <member name="M:Corale.Colore.Razer.Mousepad.Effects.Breathing.#ctor(Corale.Colore.Razer.Mousepad.Effects.BreathingType,Corale.Colore.Core.Color,Corale.Colore.Core.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Corale.Colore.Razer.Mousepad.Effects.Breathing" /> struct.
            </summary>
            <param name="type">The type of breathing effect.</param>
            <param name="first">Initial color.</param>
            <param name="second">Second color.</param>
        </member>
        <member name="M:Corale.Colore.Razer.Mousepad.Effects.Breathing.#ctor(Corale.Colore.Core.Color,Corale.Colore.Core.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Corale.Colore.Razer.Mousepad.Effects.Breathing" /> struct with
            two colors to breathe between.
            </summary>
            <param name="first">Initial color.</param>
            <param name="second">Second color.</param>
        </member>
        <member name="T:Corale.Colore.Razer.Mousepad.Effects.BreathingType">
            <summary>
            Supported breathing effect types for mouse pads.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mousepad.Effects.BreathingType.Two">
            <summary>
            Breathes between two specified colors.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mousepad.Effects.BreathingType.Random">
            <summary>
            Breathes between two random colors.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mousepad.Effects.BreathingType.Invalid">
            <summary>
            Invalid type.
            </summary>
        </member>
        <member name="T:Corale.Colore.Razer.Mousepad.Effects.Custom">
            <summary>
            Custom effect for mouse pad.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mousepad.Effects.Custom.Colors">
            <summary>
            Colors for the LEDs.
            </summary>
        </member>
        <member name="M:Corale.Colore.Razer.Mousepad.Effects.Custom.#ctor(Corale.Colore.Core.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Corale.Colore.Razer.Mousepad.Effects.Custom" /> struct with
            a default color to apply to every LED.
            </summary>
            <param name="color">The color to set every LED to initially.</param>
        </member>
        <member name="M:Corale.Colore.Razer.Mousepad.Effects.Custom.#ctor(System.Collections.Generic.IList{Corale.Colore.Core.Color})">
            <summary>
            Initializes a new instance of the <see cref="T:Corale.Colore.Razer.Mousepad.Effects.Custom" /> struct.
            </summary>
            <param name="colors">The colors to use.</param>
            <exception cref="T:System.ArgumentException">Thrown if the colors list supplied is of an incorrect size.</exception>
        </member>
        <member name="P:Corale.Colore.Razer.Mousepad.Effects.Custom.Item(System.Int32)">
            <summary>
            Gets or sets LEDs in the custom array.
            </summary>
            <param name="led">Index of the LED to access.</param>
            <returns>The <see cref="T:Corale.Colore.Core.Color" /> at the specified position.</returns>
        </member>
        <member name="M:Corale.Colore.Razer.Mousepad.Effects.Custom.op_Equality(Corale.Colore.Razer.Mousepad.Effects.Custom,System.Object)">
            <summary>
            Compares an instance of <see cref="T:Corale.Colore.Razer.Mousepad.Effects.Custom" /> with
            another object for equality.
            </summary>
            <param name="left">The left operand, an instance of <see cref="T:Corale.Colore.Razer.Mousepad.Effects.Custom" />.</param>
            <param name="right">The right operand, any type of object.</param>
            <returns><c>true</c> if the two objects are equal, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Corale.Colore.Razer.Mousepad.Effects.Custom.op_Inequality(Corale.Colore.Razer.Mousepad.Effects.Custom,System.Object)">
            <summary>
            Compares an instance of <see cref="T:Corale.Colore.Razer.Mousepad.Effects.Custom" /> with
            another object for inequality.
            </summary>
            <param name="left">The left operand, an instance of <see cref="T:Corale.Colore.Razer.Mousepad.Effects.Custom" />.</param>
            <param name="right">The right operand, any type of object.</param>
            <returns><c>true</c> if the two objects are not equal, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Corale.Colore.Razer.Mousepad.Effects.Custom.Create">
            <summary>
            Create a new empty <see cref="T:Corale.Colore.Razer.Mousepad.Effects.Custom" /> struct.
            </summary>
            <returns>An instance of <see cref="T:Corale.Colore.Razer.Mousepad.Effects.Custom" /> filled with the color black.</returns>
        </member>
        <member name="M:Corale.Colore.Razer.Mousepad.Effects.Custom.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>
            A 32-bit signed integer that is the hash code for this instance.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Corale.Colore.Razer.Mousepad.Effects.Custom.Set(Corale.Colore.Core.Color)">
            <summary>
            Sets all the LED indices to the specified <see cref="T:Corale.Colore.Core.Color" />.
            </summary>
            <param name="color">The <see cref="T:Corale.Colore.Core.Color" /> to set the LEDs to.</param>
        </member>
        <member name="M:Corale.Colore.Razer.Mousepad.Effects.Custom.Clear">
            <summary>
            Clears the colors in this <see cref="T:Corale.Colore.Razer.Mousepad.Effects.Custom" /> struct (sets to <see cref="F:Corale.Colore.Core.Color.Black" />).
            </summary>
        </member>
        <member name="M:Corale.Colore.Razer.Mousepad.Effects.Custom.Equals(System.Object)">
            <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
            <param name="obj">Another object to compare to.</param>
            <returns>
            <c>true</c> if <paramref name="obj"/> and this instance are the same type
            and represent the same value; otherwise, <c>false</c>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Corale.Colore.Razer.Mousepad.Effects.Custom.Equals(Corale.Colore.Razer.Mousepad.Effects.Custom)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            <c>true</c> if the current object is equal to the <paramref name="other"/> parameter; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Corale.Colore.Razer.Mousepad.Effects.Custom.Equals(System.Collections.Generic.IList{Corale.Colore.Core.Color})">
            <summary>
            Indicates whether the current object is equal to an
            instance of <see cref="T:System.Collections.Generic.IList`1" />.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            <c>true</c> if the current object is equal to the <paramref name="other"/> parameter; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Corale.Colore.Razer.Mousepad.Effects.Direction">
            <summary>
            Supported directions for mouse pad wave effect.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mousepad.Effects.Direction.None">
            <summary>
            No direction.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mousepad.Effects.Direction.LeftToRight">
            <summary>
            Wave goes from left to right.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mousepad.Effects.Direction.RightToLeft">
            <summary>
            Wave goes from right to left.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mousepad.Effects.Direction.Invalid">
            <summary>
            Invalid direction.
            </summary>
        </member>
        <member name="T:Corale.Colore.Razer.Mousepad.Effects.Effect">
            <summary>
            Effects supported by Chroma mouse pads.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mousepad.Effects.Effect.None">
            <summary>
            No effect.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mousepad.Effects.Effect.Breathing">
            <summary>
            Breathing effect.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mousepad.Effects.Effect.Custom">
            <summary>
            A custom effect.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mousepad.Effects.Effect.SpectrumCycling">
            <summary>
            Spectrum cycling effect.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mousepad.Effects.Effect.Static">
            <summary>
            Static color.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mousepad.Effects.Effect.Wave">
            <summary>
            Wave effect.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mousepad.Effects.Effect.Invalid">
            <summary>
            Invalid effect type.
            </summary>
        </member>
        <member name="T:Corale.Colore.Razer.Mousepad.Effects.Static">
            <summary>
            Static effect for mouse pad.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mousepad.Effects.Static.Color">
            <summary>
            The color to use.
            </summary>
        </member>
        <member name="M:Corale.Colore.Razer.Mousepad.Effects.Static.#ctor(Corale.Colore.Core.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Corale.Colore.Razer.Mousepad.Effects.Static" /> struct.
            </summary>
            <param name="color">The color to use.</param>
        </member>
        <member name="T:Corale.Colore.Razer.Mousepad.Effects.Wave">
            <summary>
            Wave effect for the mouse pad.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mousepad.Effects.Wave.Direction">
            <summary>
            Direction of the wave.
            </summary>
        </member>
        <member name="M:Corale.Colore.Razer.Mousepad.Effects.Wave.#ctor(Corale.Colore.Razer.Mousepad.Effects.Direction)">
            <summary>
            Initializes a new instance of the <see cref="T:Corale.Colore.Razer.Mousepad.Effects.Wave" /> struct.
            </summary>
            <param name="direction">Direction of the effect.</param>
        </member>
        <member name="T:Corale.Colore.Razer.Mouse.Constants">
            <summary>
            Mouse constants.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mouse.Constants.MaxLeds">
            <summary>
            Maximum number of custom LEDs.
            </summary>
        </member>
        <member name="T:Corale.Colore.Razer.Mouse.Effects.Blinking">
            <summary>
            Mouse effect that causes a specified LED to blink.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mouse.Effects.Blinking.Led">
            <summary>
            The LED on which to apply the effect.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mouse.Effects.Blinking.Color">
            <summary>
            Color of the blinking effect.
            </summary>
        </member>
        <member name="M:Corale.Colore.Razer.Mouse.Effects.Blinking.#ctor(Corale.Colore.Razer.Mouse.Led,Corale.Colore.Core.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Corale.Colore.Razer.Mouse.Effects.Blinking" /> struct.
            </summary>
            <param name="led">The LED on which to apply the effect.</param>
            <param name="color">Color for the blinking effect.</param>
        </member>
        <member name="T:Corale.Colore.Razer.Mouse.Effects.Breathing">
            <summary>
            Describes the breathing effect type.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mouse.Effects.Breathing.Led">
            <summary>
            The LED on which to apply the effect.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mouse.Effects.Breathing.Type">
            <summary>
            The type of breathing effect.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mouse.Effects.Breathing.First">
            <summary>
            Initial effect color.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mouse.Effects.Breathing.Second">
            <summary>
            Second color to breathe to.
            </summary>
        </member>
        <member name="M:Corale.Colore.Razer.Mouse.Effects.Breathing.#ctor(Corale.Colore.Razer.Mouse.Led,Corale.Colore.Razer.Mouse.Effects.BreathingType,Corale.Colore.Core.Color,Corale.Colore.Core.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Corale.Colore.Razer.Mouse.Effects.Breathing" /> struct.
            </summary>
            <param name="led">The LED on which to apply the effect.</param>
            <param name="type">The type of breathing effect to create.</param>
            <param name="first">The initial <see cref="T:Corale.Colore.Core.Color" /> to use.</param>
            <param name="second">The second color.</param>
        </member>
        <member name="M:Corale.Colore.Razer.Mouse.Effects.Breathing.#ctor(Corale.Colore.Razer.Mouse.Led)">
            <summary>
            Initializes a new instance of the <see cref="T:Corale.Colore.Razer.Mouse.Effects.Breathing" /> struct for
            making a specified LED breathe randomly.
            </summary>
            <param name="led">The LED on which to apply the effect.</param>
        </member>
        <member name="M:Corale.Colore.Razer.Mouse.Effects.Breathing.#ctor(Corale.Colore.Razer.Mouse.Led,Corale.Colore.Core.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Corale.Colore.Razer.Mouse.Effects.Breathing" /> struct for
            making a specified LED breathe to a single color.
            </summary>
            <param name="led">The LED on which to apply the effect.</param>
            <param name="first">The color to breathe to.</param>
        </member>
        <member name="M:Corale.Colore.Razer.Mouse.Effects.Breathing.#ctor(Corale.Colore.Razer.Mouse.Led,Corale.Colore.Core.Color,Corale.Colore.Core.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Corale.Colore.Razer.Mouse.Effects.Breathing" /> struct for
            making a specified LED breathe between two colors.
            </summary>
            <param name="led">The LED on which to apply the effect.</param>
            <param name="first">Initial color.</param>
            <param name="second">Second color.</param>
        </member>
        <member name="M:Corale.Colore.Razer.Mouse.Effects.Breathing.#ctor(Corale.Colore.Razer.Mouse.Effects.BreathingType,Corale.Colore.Core.Color,Corale.Colore.Core.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Corale.Colore.Razer.Mouse.Effects.Breathing" /> struct for
            making every LED on the mouse follow the specified pattern.
            </summary>
            <param name="type">The type of effect to create.</param>
            <param name="first">Initial color.</param>
            <param name="second">Second color.</param>
        </member>
        <member name="M:Corale.Colore.Razer.Mouse.Effects.Breathing.#ctor(Corale.Colore.Core.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Corale.Colore.Razer.Mouse.Effects.Breathing" /> struct for
            making every LED breathe to a single color.
            </summary>
            <param name="first">The <see cref="T:Corale.Colore.Core.Color" /> to breathe to.</param>
        </member>
        <member name="M:Corale.Colore.Razer.Mouse.Effects.Breathing.#ctor(Corale.Colore.Core.Color,Corale.Colore.Core.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Corale.Colore.Razer.Mouse.Effects.Breathing" /> struct for
            making every LED breathe between two colors.
            </summary>
            <param name="first">Initial color.</param>
            <param name="second">Second color.</param>
        </member>
        <member name="T:Corale.Colore.Razer.Mouse.Effects.BreathingType">
            <summary>
            Supported breathing effect types for the mouse.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mouse.Effects.BreathingType.One">
            <summary>
            Breathes a single color.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mouse.Effects.BreathingType.Two">
            <summary>
            Breathes between two colors.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mouse.Effects.BreathingType.Random">
            <summary>
            Breathes between randomly selected colors.
            </summary>
        </member>
        <member name="T:Corale.Colore.Razer.Mouse.Effects.Custom">
            <summary>
            Custom effect for mouse LEDs.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mouse.Effects.Custom.Colors">
            <summary>
            Colors for each LED.
            </summary>
        </member>
        <member name="M:Corale.Colore.Razer.Mouse.Effects.Custom.#ctor(Corale.Colore.Core.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Corale.Colore.Razer.Mouse.Effects.Custom" /> struct with
            a default color for each LED.
            </summary>
            <param name="color">The color to set each LED to initially.</param>
        </member>
        <member name="M:Corale.Colore.Razer.Mouse.Effects.Custom.#ctor(System.Collections.Generic.IList{Corale.Colore.Core.Color})">
            <summary>
            Initializes a new instance of the <see cref="T:Corale.Colore.Razer.Mouse.Effects.Custom" /> struct.
            </summary>
            <param name="colors">The colors to use.</param>
            <exception cref="T:System.ArgumentException">Thrown if the colors list supplied is of an incorrect size.</exception>
        </member>
        <member name="P:Corale.Colore.Razer.Mouse.Effects.Custom.Item(System.Int32)">
            <summary>
            Gets or sets LEDs in the custom array.
            </summary>
            <param name="led">Index of the LED to access.</param>
            <returns>The <see cref="T:Corale.Colore.Core.Color" /> at the specified position.</returns>
        </member>
        <member name="P:Corale.Colore.Razer.Mouse.Effects.Custom.Item(Corale.Colore.Razer.Mouse.Led)">
            <summary>
            Gets or sets LEDs in the custom array.
            </summary>
            <param name="led">The LED to access.</param>
            <returns>The <see cref="T:Corale.Colore.Core.Color" /> of the specified LED.</returns>
        </member>
        <member name="M:Corale.Colore.Razer.Mouse.Effects.Custom.op_Equality(Corale.Colore.Razer.Mouse.Effects.Custom,System.Object)">
            <summary>
            Compares an instance of <see cref="T:Corale.Colore.Razer.Mouse.Effects.Custom" /> with
            another object for equality.
            </summary>
            <param name="left">The left operand, an instance of <see cref="T:Corale.Colore.Razer.Mouse.Effects.Custom" />.</param>
            <param name="right">The right operand, any type of object.</param>
            <returns><c>true</c> if the two objects are equal, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Corale.Colore.Razer.Mouse.Effects.Custom.op_Inequality(Corale.Colore.Razer.Mouse.Effects.Custom,System.Object)">
            <summary>
            Compares an instance of <see cref="T:Corale.Colore.Razer.Mouse.Effects.Custom" /> with
            another object for inequality.
            </summary>
            <param name="left">The left operand, an instance of <see cref="T:Corale.Colore.Razer.Mouse.Effects.Custom" />.</param>
            <param name="right">The right operand, any type of object.</param>
            <returns><c>true</c> if the two objects are not equal, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Corale.Colore.Razer.Mouse.Effects.Custom.Create">
            <summary>
            Create a new empty <see cref="T:Corale.Colore.Razer.Mouse.Effects.Custom" /> struct.
            </summary>
            <returns>An instance of <see cref="T:Corale.Colore.Razer.Mouse.Effects.Custom" /> filled with the color black.</returns>
        </member>
        <member name="M:Corale.Colore.Razer.Mouse.Effects.Custom.Set(Corale.Colore.Core.Color)">
            <summary>
            Sets all the LED indices to the specified <see cref="T:Corale.Colore.Core.Color" />.
            </summary>
            <param name="color">The <see cref="T:Corale.Colore.Core.Color" /> to set the LEDs to.</param>
        </member>
        <member name="M:Corale.Colore.Razer.Mouse.Effects.Custom.Clear">
            <summary>
            Clears the colors in this <see cref="T:Corale.Colore.Razer.Mouse.Effects.Custom" /> struct (sets to <see cref="F:Corale.Colore.Core.Color.Black" />).
            </summary>
        </member>
        <member name="M:Corale.Colore.Razer.Mouse.Effects.Custom.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>
            A 32-bit signed integer that is the hash code for this instance.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Corale.Colore.Razer.Mouse.Effects.Custom.Equals(System.Object)">
            <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
            <param name="obj">Another object to compare to.</param>
            <returns>
            <c>true</c> if <paramref name="obj"/> and this instance are the same type
            and represent the same value; otherwise, <c>false</c>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Corale.Colore.Razer.Mouse.Effects.Custom.Equals(Corale.Colore.Razer.Mouse.Effects.Custom)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            <c>true</c> if the current object is equal to the <paramref name="other"/> parameter; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Corale.Colore.Razer.Mouse.Effects.Custom.Equals(System.Collections.Generic.IList{Corale.Colore.Core.Color})">
            <summary>
            Indicates whether the current object is equal to an
            instance of <see cref="T:System.Collections.Generic.IList`1" />.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            <c>true</c> if the current object is equal to the <paramref name="other"/> parameter; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Corale.Colore.Razer.Mouse.Effects.Direction">
            <summary>
            Direction for wave effect on mouse.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mouse.Effects.Direction.FrontToBack">
            <summary>
            Wave goes from the front of the mouse to the back.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mouse.Effects.Direction.BackToFront">
            <summary>
            Wave goes from the back of the mouse to the front.
            </summary>
        </member>
        <member name="T:Corale.Colore.Razer.Mouse.Effects.Duration">
            <summary>
            Duration for reactive effect on mouse.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mouse.Effects.Duration.None">
            <summary>
            No duration.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mouse.Effects.Duration.Short">
            <summary>
            Short reaction.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mouse.Effects.Duration.Medium">
            <summary>
            Medium reaction.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mouse.Effects.Duration.Long">
            <summary>
            Long reaction.
            </summary>
        </member>
        <member name="T:Corale.Colore.Razer.Mouse.Effects.Effect">
            <summary>
            Supported built-in mouse effects.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mouse.Effects.Effect.None">
            <summary>
            No effect.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mouse.Effects.Effect.Blinking">
            <summary>
            Blinking effect.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mouse.Effects.Effect.Breathing">
            <summary>
            The breathing effect.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mouse.Effects.Effect.Custom">
            <summary>
            A custom effect.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mouse.Effects.Effect.Reactive">
            <summary>
            Reactive effect.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mouse.Effects.Effect.SpectrumCycling">
            <summary>
            The spectrum cycling effect.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mouse.Effects.Effect.Static">
            <summary>
            Static color effect.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mouse.Effects.Effect.Wave">
            <summary>
            Wave effect.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mouse.Effects.Effect.Invalid">
            <summary>
            Invalid effect.
            </summary>
        </member>
        <member name="T:Corale.Colore.Razer.Mouse.Effects.None">
            <summary>
            No effect (resets the affected LEDs).
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mouse.Effects.None.Led">
            <summary>
            The LED that should have its effects reset.
            </summary>
        </member>
        <member name="M:Corale.Colore.Razer.Mouse.Effects.None.#ctor(Corale.Colore.Razer.Mouse.Led)">
            <summary>
            Initializes a new instance of the <see cref="T:Corale.Colore.Razer.Mouse.Effects.None" /> struct.
            </summary>
            <param name="led">The LED that should be reset.</param>
        </member>
        <member name="T:Corale.Colore.Razer.Mouse.Effects.Reactive">
            <summary>
            Reactive effect.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mouse.Effects.Reactive.Led">
            <summary>
            The LED on which to apply the effect.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mouse.Effects.Reactive.Duration">
            <summary>
            Duration of the reaction.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mouse.Effects.Reactive.Color">
            <summary>
            Reaction color.
            </summary>
        </member>
        <member name="M:Corale.Colore.Razer.Mouse.Effects.Reactive.#ctor(Corale.Colore.Razer.Mouse.Led,Corale.Colore.Razer.Mouse.Effects.Duration,Corale.Colore.Core.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Corale.Colore.Razer.Mouse.Effects.Reactive" /> struct.
            </summary>
            <param name="led">The LED on which to apply the effect.</param>
            <param name="duration">Duration of the effect.</param>
            <param name="color">Color of the effect.</param>
        </member>
        <member name="M:Corale.Colore.Razer.Mouse.Effects.Reactive.#ctor(Corale.Colore.Razer.Mouse.Effects.Duration,Corale.Colore.Core.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Corale.Colore.Razer.Mouse.Effects.Reactive" /> struct,
            applying the effect to every LED.
            </summary>
            <param name="duration">Duration of the effect.</param>
            <param name="color">Color of the effect.</param>
        </member>
        <member name="T:Corale.Colore.Razer.Mouse.Effects.SpectrumCycling">
            <summary>
            Spectrum cycling effect.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mouse.Effects.SpectrumCycling.Led">
            <summary>
            The LED on which to apply the effect.
            </summary>
        </member>
        <member name="M:Corale.Colore.Razer.Mouse.Effects.SpectrumCycling.#ctor(Corale.Colore.Razer.Mouse.Led)">
            <summary>
            Initializes a new instance of the <see cref="T:Corale.Colore.Razer.Mouse.Effects.SpectrumCycling" /> struct.
            </summary>
            <param name="led">The LED on which to apply the effect.</param>
        </member>
        <member name="T:Corale.Colore.Razer.Mouse.Effects.Wave">
            <summary>
            Wave effect.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mouse.Effects.Wave.Direction">
            <summary>
            The direction of the wave effect.
            </summary>
        </member>
        <member name="M:Corale.Colore.Razer.Mouse.Effects.Wave.#ctor(Corale.Colore.Razer.Mouse.Effects.Direction)">
            <summary>
            Initializes a new instance of the <see cref="T:Corale.Colore.Razer.Mouse.Effects.Wave" /> struct.
            </summary>
            <param name="direction">The direction of the effect.</param>
        </member>
        <member name="T:Corale.Colore.Razer.Mouse.Effects.Static">
            <summary>
            Describes the static effect type.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mouse.Effects.Static.Led">
            <summary>
            The LED on which to apply the color.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mouse.Effects.Static.Color">
            <summary>
            The color to apply.
            </summary>
        </member>
        <member name="M:Corale.Colore.Razer.Mouse.Effects.Static.#ctor(Corale.Colore.Razer.Mouse.Led,Corale.Colore.Core.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Corale.Colore.Razer.Mouse.Effects.Static" /> struct.
            </summary>
            <param name="led">The <see cref="F:Corale.Colore.Razer.Mouse.Effects.Static.Led" /> on which to apply the color.</param>
            <param name="color">The <see cref="F:Corale.Colore.Razer.Mouse.Effects.Static.Color" /> to set.</param>
        </member>
        <member name="T:Corale.Colore.Razer.Mouse.Led">
            <summary>
            LEDs that can be the target of color changes.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mouse.Led.None">
            <summary>
            No LED.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mouse.Led.ScrollWheel">
            <summary>
            The LED illuminating the scroll wheel.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mouse.Led.Logo">
            <summary>
            The LED illuminating the logo present on the mouse.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mouse.Led.Backlight">
            <summary>
            The mouse backlight.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mouse.Led.Strip1">
            <summary>
            Side strip LED 1 (Mamba TE).
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mouse.Led.Strip2">
            <summary>
            Side strip LED 2 (Mamba TE).
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mouse.Led.Strip3">
            <summary>
            Side strip LED 3 (Mamba TE).
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mouse.Led.Strip4">
            <summary>
            Side strip LED 4 (Mamba TE).
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mouse.Led.Strip5">
            <summary>
            Side strip LED 5 (Mamba TE).
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mouse.Led.Strip6">
            <summary>
            Side strip LED 6 (Mamba TE).
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mouse.Led.Strip7">
            <summary>
            Side strip LED 7 (Mamba TE).
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mouse.Led.Strip8">
            <summary>
            Side strip LED 8 (Mamba TE).
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mouse.Led.Strip9">
            <summary>
            Side strip LED 9 (Mamba TE).
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mouse.Led.Strip10">
            <summary>
            Side strip LED 10 (Mamba TE).
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mouse.Led.Strip11">
            <summary>
            Side strip LED 11 (Mamba TE).
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mouse.Led.Strip12">
            <summary>
            Side strip LED 12 (Mamba TE).
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mouse.Led.Strip13">
            <summary>
            Side strip LED 13 (Mamba TE).
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mouse.Led.Strip14">
            <summary>
            Side strip LED 14 (Mamba TE).
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Mouse.Led.All">
            <summary>
            All LEDs.
            </summary>
        </member>
        <member name="T:Corale.Colore.Razer.NativeCallException">
            <summary>
            Thrown when a native function returns an erroneous result value.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.NativeCallException.MessageTemplate">
            <summary>
            Template used to construct exception message from.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.NativeCallException._function">
            <summary>
            The function that was called.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.NativeCallException._result">
            <summary>
            The result returned from the function.
            </summary>
        </member>
        <member name="M:Corale.Colore.Razer.NativeCallException.#ctor(System.String,Corale.Colore.Razer.Result)">
            <summary>
            Initializes a new instance of the <see cref="T:Corale.Colore.Razer.NativeCallException" /> class.
            </summary>
            <param name="function">The name of the function that was called.</param>
            <param name="result">The result returned from the called function.</param>
        </member>
        <member name="M:Corale.Colore.Razer.NativeCallException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Corale.Colore.Razer.NativeCallException" /> class.
            </summary>
            <param name="info">Serialization info object.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="P:Corale.Colore.Razer.NativeCallException.Function">
            <summary>
            Gets the name of the native function that was called.
            </summary>
        </member>
        <member name="P:Corale.Colore.Razer.NativeCallException.Result">
            <summary>
            Gets the <see cref="P:Corale.Colore.Razer.NativeCallException.Result" /> object indicating
            the result returned from the native function.
            </summary>
        </member>
        <member name="M:Corale.Colore.Razer.NativeCallException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Adds object data to serialization object.
            </summary>
            <param name="info">Serialization info object.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="T:Corale.Colore.Razer.NativeMethods">
            <summary>
            Native methods from Razer's Chroma SDK.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.NativeMethods.FunctionConvention">
            <summary>
            Calling convention for API functions.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.NativeMethods.DllName">
            <summary>
            DLL to import SDK functions from.
            </summary>
            <remarks>
            This field is set to <c>RzChromaSDK64.dll</c> when built
            for 64-bit platforms, and <c>RzChromaSDK.dll</c> when
            built for 32-bit platforms.
            </remarks>
        </member>
        <member name="M:Corale.Colore.Razer.NativeMethods.Init">
            <summary>
            Initialize Chroma SDK.
            </summary>
            <returns><see cref="T:Corale.Colore.Razer.Result" /> value indicating success.</returns>
        </member>
        <member name="M:Corale.Colore.Razer.NativeMethods.UnInit">
            <summary>
            Uninitialize Chroma SDK.
            </summary>
            <returns><see cref="T:Corale.Colore.Razer.Result" /> value indicating success.</returns>
        </member>
        <member name="M:Corale.Colore.Razer.NativeMethods.CreateEffect(System.Guid,Corale.Colore.Razer.Effect,System.IntPtr,System.Guid@)">
            <summary>
            Creates an effect for a device.
            </summary>
            <param name="deviceId">The <see cref="T:System.Guid" /> of the device, refer to <see cref="T:Corale.Colore.Razer.Devices" /> for supported IDs.</param>
            <param name="effect">The effect to create.</param>
            <param name="param">Effect-specific parameter.</param>
            <param name="effectId">Valid effect ID if successful. Use <see cref="F:System.Guid.Empty" /> if not required.</param>
            <returns><see cref="T:Corale.Colore.Razer.Result" /> value indicating success.</returns>
        </member>
        <member name="M:Corale.Colore.Razer.NativeMethods.CreateKeyboardEffect(Corale.Colore.Razer.Keyboard.Effects.Effect,System.IntPtr,System.Guid@)">
            <summary>
            Create keyboard effect.
            </summary>
            <param name="effect">
            Standard effect type. These include <see cref="F:Corale.Colore.Razer.Keyboard.Effects.Effect.Wave" />,
            <see cref="F:Corale.Colore.Razer.Keyboard.Effects.Effect.SpectrumCycling" />, <see cref="F:Corale.Colore.Razer.Keyboard.Effects.Effect.Breathing" />,
            <see cref="F:Corale.Colore.Razer.Keyboard.Effects.Effect.Reactive" />, and <see cref="F:Corale.Colore.Razer.Keyboard.Effects.Effect.Static" />.
            </param>
            <param name="param">Pointer to a parameter type specified by <paramref name="effect" />.</param>
            <param name="effectid">Valid effect ID if successful. Use <see cref="F:System.Guid.Empty" /> if not required.</param>
            <returns><see cref="T:Corale.Colore.Razer.Result" /> value indicating success.</returns>
            <remarks>
            The <paramref name="param" /> parameter should point to the relevant struct for the passed in effect,
            according to the following list.
            <list type="table">
            <listheader>
            <term>Effect type</term>
            <term>Effect struct</term>
            </listheader>
            <item>
            <term><see cref="F:Corale.Colore.Razer.Keyboard.Effects.Effect.Wave" /></term>
            <term><see cref="T:Corale.Colore.Razer.Keyboard.Effects.Wave" /></term>
            </item>
            <item>
            <term><see cref="F:Corale.Colore.Razer.Keyboard.Effects.Effect.SpectrumCycling" /></term>
            <term><i>None</i> (<see cref="F:System.IntPtr.Zero" />)</term>
            </item>
            <item>
            <term><see cref="F:Corale.Colore.Razer.Keyboard.Effects.Effect.Breathing" /></term>
            <term><see cref="T:Corale.Colore.Razer.Keyboard.Effects.Breathing" /></term>
            </item>
            <item>
            <term><see cref="F:Corale.Colore.Razer.Keyboard.Effects.Effect.Reactive" /></term>
            <term><see cref="T:Corale.Colore.Razer.Keyboard.Effects.Reactive" /></term>
            </item>
            <item>
            <term><see cref="F:Corale.Colore.Razer.Keyboard.Effects.Effect.Static" /></term>
            <term><see cref="T:Corale.Colore.Razer.Keyboard.Effects.Static" /></term>
            </item>
            </list>
            </remarks>
        </member>
        <member name="M:Corale.Colore.Razer.NativeMethods.CreateMouseEffect(Corale.Colore.Razer.Mouse.Effects.Effect,System.IntPtr,System.Guid@)">
            <summary>
            Create mouse effect.
            </summary>
            <param name="effect">
            Standard effect type. These include <see cref="F:Corale.Colore.Razer.Mouse.Effects.Effect.SpectrumCycling" />,
            <see cref="F:Corale.Colore.Razer.Mouse.Effects.Effect.Breathing" />, and <see cref="F:Corale.Colore.Razer.Mouse.Effects.Effect.Static" />.
            Depends on which LED.
            </param>
            <param name="param">Pointer to a parameter type specified by <paramref name="effect" />.</param>
            <param name="effectId">Set to valid effect ID if successful. Pass <see cref="F:System.IntPtr.Zero" /> if not required.</param>
            <returns><see cref="T:Corale.Colore.Razer.Result" /> value indicating success.</returns>
            <remarks>
            The <paramref name="param" /> parameter should point to the relevant struct for the passed in effect,
            according to the following list.
            <list type="table">
            <listheader>
            <term>Effect type</term>
            <term>Effect struct</term>
            </listheader>
            <item>
            <term><see cref="F:Corale.Colore.Razer.Mouse.Effects.Effect.SpectrumCycling" /></term>
            <term><i>None</i> (<see cref="F:System.IntPtr.Zero" />)</term>
            </item>
            <item>
            <term><see cref="F:Corale.Colore.Razer.Mouse.Effects.Effect.Breathing" /></term>
            <term><see cref="T:Corale.Colore.Razer.Mouse.Effects.Breathing" /></term>
            </item>
            <item>
            <term><see cref="F:Corale.Colore.Razer.Mouse.Effects.Effect.Static" /></term>
            <term><see cref="T:Corale.Colore.Razer.Mouse.Effects.Static" /></term>
            </item>
            </list>
            </remarks>
        </member>
        <member name="M:Corale.Colore.Razer.NativeMethods.CreateHeadsetEffect(Corale.Colore.Razer.Headset.Effects.Effect,System.IntPtr,System.Guid@)">
            <summary>
            Create headset effect.
            </summary>
            <param name="effect">Standard effect type.</param>
            <param name="param">Pointer to a parameter type specified by <paramref name="effect" />.</param>
            <param name="effectId">Set to valid effect ID if successful. Pass <see cref="F:System.IntPtr.Zero" /> if not required.</param>
            <returns><see cref="T:Corale.Colore.Razer.Result" /> value indicating success.</returns>
        </member>
        <member name="M:Corale.Colore.Razer.NativeMethods.CreateMousepadEffect(Corale.Colore.Razer.Mousepad.Effects.Effect,System.IntPtr,System.Guid@)">
            <summary>
            Create mousepad effect.
            </summary>
            <param name="effect">Mousemat effect type.</param>
            <param name="param">Pointer to a parameter specified by <paramref name="effect" />.</param>
            <param name="effectId">Valid effect ID if successful. Pass <see cref="F:System.IntPtr.Zero" /> if not required.</param>
            <returns><see cref="T:Corale.Colore.Razer.Result" /> value indicating success.</returns>
        </member>
        <member name="M:Corale.Colore.Razer.NativeMethods.CreateKeypadEffect(Corale.Colore.Razer.Keypad.Effects.Effect,System.IntPtr,System.Guid@)">
            <summary>
            Create keypad effect.
            </summary>
            <param name="effect">Keypad effect type.</param>
            <param name="param">Pointer to a parameter type specified by <paramref name="effect" />.</param>
            <param name="effectId">Valid effect ID if successful. Pass <see cref="F:System.IntPtr.Zero" /> if not required.</param>
            <returns><see cref="T:Corale.Colore.Razer.Result" /> value indicating success.</returns>
        </member>
        <member name="M:Corale.Colore.Razer.NativeMethods.DeleteEffect(System.Guid)">
            <summary>
            Delete effect.
            </summary>
            <param name="effectId">ID of the effect that needs to be deleted.</param>
            <returns><see cref="T:Corale.Colore.Razer.Result" /> value indicating success.</returns>
        </member>
        <member name="M:Corale.Colore.Razer.NativeMethods.SetEffect(System.Guid)">
            <summary>
            Set effect.
            </summary>
            <param name="effectId">ID of the effect that needs to be set.</param>
            <returns><see cref="T:Corale.Colore.Razer.Result" /> value indicating success.</returns>
        </member>
        <member name="M:Corale.Colore.Razer.NativeMethods.RegisterEventNotification(System.IntPtr)">
            <summary>
            Register for event notification.
            </summary>
            <param name="hwnd">Application window handle.</param>
            <returns><see cref="T:Corale.Colore.Razer.Result" /> value indicating success.</returns>
            <remarks>
            <strong>Messages can only be handled in a Windows message pumping thread.</strong>
            <see cref="F:Corale.Colore.Razer.Constants.WmChromaEvent" /> will be sent if there is an event.
            Possible combination of <c>wParam</c> and <c>lParam</c> values are explained in the below table.
            <list type="table">
            <listheader>
            <term><c>wParam</c> value</term>
            <term><c>lParam</c>l value</term>
            <term>Meaning</term>
            </listheader>
            <item>
            <term>1</term>
            <term>1</term>
            <term>Chroma SDK support enabled</term>
            </item>
            <item>
            <term>1</term>
            <term>0</term>
            <term>Chroma SDK support disabled</term>
            </item>
            <item>
            <term>2</term>
            <term>1</term>
            <term>Access to device granted</term>
            </item>
            <item>
            <term>2</term>
            <term>0</term>
            <term>Access to device revoked</term>
            </item>
            <item>
            <term>3</term>
            <term>1</term>
            <term>Application state enabled</term>
            </item>
            <item>
            <term>3</term>
            <term>0</term>
            <item>Application state disabled</item>
            </item>
            </list>
            </remarks>
        </member>
        <member name="M:Corale.Colore.Razer.NativeMethods.UnregisterEventNotification">
            <summary>
            Unregister for event notification.
            </summary>
            <returns><see cref="T:Corale.Colore.Razer.Result" /> value indicating success.</returns>
        </member>
        <member name="M:Corale.Colore.Razer.NativeMethods.QueryDevice(System.Guid,System.IntPtr)">
            <summary>
            Query for device information.
            </summary>
            <param name="deviceId">Device ID, found in <see cref="T:Corale.Colore.Razer.Devices" />.</param>
            <param name="info">Will contain device information for the device specified by <paramref name="deviceId" />.</param>
            <returns><see cref="T:Corale.Colore.Razer.Result" /> value indicating success.</returns>
        </member>
        <member name="T:Corale.Colore.Razer.Result">
            <summary>
            Struct for containing the result of running a native Chroma SDK function.
            </summary>
            <remarks>
            <c>RZRESULT</c> is a <c>typedef</c> of <c>LONG</c> on C-side. <c>LONG</c> is always 32-bit in WinAPI.
            This means we don't need to have architecture-dependent base type,
            like with the <see cref="T:Corale.Colore.Core.Size" /> struct.
            </remarks>
        </member>
        <member name="F:Corale.Colore.Razer.Result.RzAccessDenied">
            <summary>
            Access denied.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Result.RzFailed">
            <summary>
            Generic fail error.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Result.RzInvalid">
            <summary>
            Invalid error.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Result.RzInvalidParameter">
            <summary>
            Invalid parameter passed to function.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Result.RzNotSupported">
            <summary>
            The requested operation is not supported.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Result.RzRequestAborted">
            <summary>
            The request was aborted.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Result.RzResourceDisabled">
            <summary>
            Resource not available or disabled.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Result.RzSingleInstanceApp">
            <summary>
            Cannot start more than one instance of the specified program.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Result.RzSuccess">
            <summary>
            Returned when a function is successful.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Result.FieldMetadata">
            <summary>
            Dictionary used to cache the metadata of the pre-defined error values.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Result._value">
            <summary>
            Internal result value.
            </summary>
        </member>
        <member name="M:Corale.Colore.Razer.Result.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Corale.Colore.Razer.Result" /> struct.
            </summary>
        </member>
        <member name="M:Corale.Colore.Razer.Result.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Corale.Colore.Razer.Result" /> struct.
            </summary>
            <param name="value">Value to store.</param>
        </member>
        <member name="P:Corale.Colore.Razer.Result.Description">
            <summary>
            Gets the help description for the current error value.
            </summary>
        </member>
        <member name="P:Corale.Colore.Razer.Result.Failed">
            <summary>
            Gets a value indicating whether the result means failure.
            </summary>
        </member>
        <member name="P:Corale.Colore.Razer.Result.Name">
            <summary>
            Gets the name of the error as defined in source code.
            </summary>
        </member>
        <member name="P:Corale.Colore.Razer.Result.Success">
            <summary>
            Gets a value indicating whether the result was a success.
            </summary>
        </member>
        <member name="M:Corale.Colore.Razer.Result.op_Equality(Corale.Colore.Razer.Result,System.Object)">
            <summary>
            Indicates whether an instance of the <see cref="T:Corale.Colore.Razer.Result" /> struct is
            equal to another object.
            </summary>
            <param name="left">Left operand, an instance of the <see cref="T:Corale.Colore.Razer.Result" /> struct.</param>
            <param name="right">Right operand, an object to compare with.</param>
            <returns><c>true</c> if the two objects are equal, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Corale.Colore.Razer.Result.op_False(Corale.Colore.Razer.Result)">
            <summary>
            Converts a <see cref="T:Corale.Colore.Razer.Result" /> object to <c>false</c>.
            </summary>
            <param name="result"><see cref="T:Corale.Colore.Razer.Result" /> object to convert.</param>
            <returns>
            <c>false</c> if the <see cref="T:Corale.Colore.Razer.Result" /> object represents a boolean <c>false</c> value,
            otherwise <c>true</c>.
            </returns>
        </member>
        <member name="M:Corale.Colore.Razer.Result.op_Implicit(Corale.Colore.Razer.Result)~System.Int32">
            <summary>
            Converts a <see cref="T:Corale.Colore.Razer.Result" /> struct to its integer equivalent.
            </summary>
            <param name="result">An instance of the <see cref="T:Corale.Colore.Razer.Result" /> to convert.</param>
            <returns>The integer equivalent of the <paramref name="result" />.</returns>
        </member>
        <member name="M:Corale.Colore.Razer.Result.op_Implicit(System.Int32)~Corale.Colore.Razer.Result">
            <summary>
            Converts an integer value to its equivalent <see cref="T:Corale.Colore.Razer.Result" /> object.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>The <see cref="T:Corale.Colore.Razer.Result" /> equivalent of the <paramref name="value" />.</returns>
        </member>
        <member name="M:Corale.Colore.Razer.Result.op_Implicit(Corale.Colore.Razer.Result)~System.Boolean">
            <summary>
            Converts an instance of the <see cref="T:Corale.Colore.Razer.Result" /> struct to its boolean equivalent.
            </summary>
            <param name="result">The <see cref="T:Corale.Colore.Razer.Result" /> to convert.</param>
            <returns>
            <c>true</c> if the <paramref name="result" /> represents a <c>true</c> value (success),
            otherwise <c>false</c> (failure).
            </returns>
        </member>
        <member name="M:Corale.Colore.Razer.Result.op_Inequality(Corale.Colore.Razer.Result,System.Object)">
            <summary>
            Indicates whether an instance of the <see cref="T:Corale.Colore.Razer.Result" /> struct and
            another object are not equal.
            </summary>
            <param name="left">Left operand, an instance of the <see cref="T:Corale.Colore.Razer.Result" /> struct.</param>
            <param name="right">Right operand, an object to compare to.</param>
            <returns><c>true</c> if the two objects are not equal, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Corale.Colore.Razer.Result.op_True(Corale.Colore.Razer.Result)">
            <summary>
            Converts a <see cref="T:Corale.Colore.Razer.Result" /> object to a boolean <c>true</c> value.
            </summary>
            <param name="result">Object to convert.</param>
            <returns><c>true</c> if the object represents a boolean <c>true</c> value, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Corale.Colore.Razer.Result.Equals(System.Int32)">
            <summary>
            Indicates whether the internal value of the current <see cref="T:Corale.Colore.Razer.Result" /> struct
            is equal to another value.
            </summary>
            <param name="other">A value to compare with this object's internal value.</param>
            <returns><c>true</c> if the internal value is equal to the <paramref name="other" /> parameter, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Corale.Colore.Razer.Result.Equals(Corale.Colore.Razer.Result)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            <c>true</c> if the current object is equal to the <paramref name="other"/> parameter; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Corale.Colore.Razer.Result.Equals(System.Object)">
            <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
            <param name="obj">Another object to compare to. </param>
            <returns>
            <c>true</c> if <paramref name="obj"/> and this instance are the same type
            and represent the same value; otherwise, <c>false</c>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Corale.Colore.Razer.Result.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>
            A 32-bit signed integer that is the hash code for this instance.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Corale.Colore.Razer.Result.ToString">
            <summary>
            Returns a string representation of the result.
            </summary>
            <returns>
            A <see cref="T:System.String"/> containing a string representation
            of the result complete with name, description, and numeric value.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Corale.Colore.Razer.Result.GetMetadata">
            <summary>
            Retrieves field metadata and returns it as a dictionary.
            </summary>
            <returns>Field metadata.</returns>
        </member>
        <member name="T:Corale.Colore.Razer.Result.Metadata">
            <summary>
            Contains metadata for a specific result in the <see cref="T:Corale.Colore.Razer.Result" /> struct.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Result.Metadata._description">
            <summary>
            Description of the result.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Result.Metadata._name">
            <summary>
            Name of the result (name of the field).
            </summary>
        </member>
        <member name="M:Corale.Colore.Razer.Result.Metadata.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Corale.Colore.Razer.Result.Metadata" /> struct.
            </summary>
            <param name="name">Result name.</param>
            <param name="description">Result description.</param>
        </member>
        <member name="P:Corale.Colore.Razer.Result.Metadata.Description">
            <summary>
            Gets a human-readable description for the result.
            </summary>
        </member>
        <member name="P:Corale.Colore.Razer.Result.Metadata.Name">
            <summary>
            Gets the name of the result.
            </summary>
        </member>
        <member name="T:Corale.Colore.Razer.Result.DescriptionAttribute">
            <summary>
            Description attribute used for fields in the <see cref="T:Corale.Colore.Razer.Result" /> struct.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.Result.DescriptionAttribute._description">
            <summary>
            The description of the associated field.
            </summary>
        </member>
        <member name="M:Corale.Colore.Razer.Result.DescriptionAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Corale.Colore.Razer.Result.DescriptionAttribute" /> class.
            </summary>
            <param name="description">Description to set.</param>
        </member>
        <member name="P:Corale.Colore.Razer.Result.DescriptionAttribute.Description">
            <summary>
            Gets a human-readable description of the result.
            </summary>
        </member>
        <member name="T:Corale.Colore.Razer.UnsupportedDeviceException">
            <summary>
            Thrown when an invalid <see cref="T:System.Guid" /> is passed to the
            constructor of <see cref="T:Corale.Colore.Core.GenericDevice" />.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.UnsupportedDeviceException.MessageTemplate">
            <summary>
            Template for exception message.
            </summary>
        </member>
        <member name="F:Corale.Colore.Razer.UnsupportedDeviceException._deviceId">
            <summary>
            The ID of the device that was requested.
            </summary>
        </member>
        <member name="M:Corale.Colore.Razer.UnsupportedDeviceException.#ctor(System.Guid,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Corale.Colore.Razer.UnsupportedDeviceException" /> class.
            </summary>
            <param name="deviceId">The <see cref="T:System.Guid" /> of the device.</param>
            <param name="innerException">Inner exception object.</param>
        </member>
        <member name="M:Corale.Colore.Razer.UnsupportedDeviceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Corale.Colore.Razer.UnsupportedDeviceException" /> class
            from serialization data.
            </summary>
            <param name="info">Serialization info object.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="P:Corale.Colore.Razer.UnsupportedDeviceException.DeviceId">
            <summary>
            Gets the <see cref="T:System.Guid" /> of the device.
            </summary>
        </member>
        <member name="M:Corale.Colore.Razer.UnsupportedDeviceException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Adds object data to serialization object.
            </summary>
            <param name="info">Serialization info object.</param>
            <param name="context">Streaming context.</param>
        </member>
    </members>
</doc>
